{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/async/lib/async.js","node_modules/bfs-buffer/ts/buffer.ts","node_modules/bfs-buffer/ts/buffer_core.ts","node_modules/bfs-buffer/ts/buffer_core_array.ts","node_modules/bfs-buffer/ts/buffer_core_arraybuffer.ts","node_modules/bfs-buffer/ts/buffer_core_imagedata.ts","node_modules/bfs-buffer/ts/extended_ascii.ts","node_modules/bfs-buffer/ts/string_util.ts","node_modules/bfs-buffer/ts/util.ts","node_modules/bfs-path/js/node_modules/bfs-path/ts/path.ts","node_modules/bfs-process/ts/index.ts","node_modules/bfs-process/js/node_modules/bfs-process/ts/process.ts","node_modules/bfs-process/js/node_modules/bfs-process/ts/tty.ts","node_modules/browserify/node_modules/events/events.js","node_modules/browserify/node_modules/inherits/inherits_browser.js","node_modules/browserify/node_modules/readable-stream/duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_transform.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js","node_modules/browserify/node_modules/readable-stream/node_modules/buffer-shims/index.js","node_modules/browserify/node_modules/readable-stream/node_modules/core-util-is/lib/util.js","node_modules/browserify/node_modules/readable-stream/node_modules/isarray/index.js","node_modules/browserify/node_modules/readable-stream/node_modules/process-nextick-args/index.js","node_modules/browserify/node_modules/readable-stream/node_modules/util-deprecate/browser.js","node_modules/browserify/node_modules/readable-stream/passthrough.js","node_modules/browserify/node_modules/readable-stream/readable.js","node_modules/browserify/node_modules/readable-stream/transform.js","node_modules/browserify/node_modules/readable-stream/writable.js","node_modules/browserify/node_modules/stream-browserify/index.js","node_modules/browserify/node_modules/string_decoder/index.js","node_modules/grunt-browserify/node_modules/browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js","node_modules/pako/dist/pako_inflate.min.js","src/backend/AsyncMirror.ts","src/backend/Dropbox.ts","src/backend/FolderAdapter.ts","src/backend/HTML5FS.ts","src/backend/InMemory.ts","src/backend/IndexedDB.ts","src/backend/LocalStorage.ts","src/backend/MountableFileSystem.ts","src/backend/OverlayFS.ts","src/backend/WorkerFS.ts","src/backend/XmlHttpRequest.ts","src/backend/ZipFS.ts","src/browserify_main.ts","src/core/FS.ts","src/core/api_error.ts","src/core/backends.ts","src/core/browserfs.ts","src/core/file.ts","src/core/file_flag.ts","src/core/file_system.ts","src/core/global.ts","src/core/node_fs.ts","src/core/node_fs_stats.ts","src/core/util.ts","src/generic/emscripten_fs.ts","src/generic/file_index.ts","src/generic/inode.ts","src/generic/key_value_filesystem.ts","src/generic/locked_fs.ts","src/generic/mutex.ts","src/generic/preload_file.ts","src/generic/xhr.ts","src/main.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","BrowserFS","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","noop","identity","v","toBool","notId","only_once","fn","apply","arguments","_once","_isArrayLike","arr","_isArray","_arrayEach","iterator","index","_map","result","Array","_range","count","_reduce","memo","x","_forEachOf","object","_keys","key","_indexOf","item","_keyIterator","coll","len","keys","_restParam","func","startIndex","Math","max","rest","_withoutIndex","value","callback","_eachOfLimit","limit","obj","nextKey","done","running","errored","replenish","err","doParallel","async","eachOf","doParallelLimit","doSeries","eachOfSeries","_asyncMap","eachfn","results","_filter","push","sort","b","_reject","cb","_createTester","check","getResult","iteratee","_","_findGetResult","_parallel","tasks","task","args","_concat","y","concat","_queue","worker","concurrency","payload","_insert","q","data","pos","started","idle","setImmediate","drain","unshift","saturated","process","_next","workers","removed","workersList","splice","empty","paused","kill","pause","resume","resumeCount","min","w","_console_fn","name","console","error","_times","mapper","_applyEach","fns","go","that","pop","ensureAsync","innerArgs","sync","previous_async","root","noConflict","_toString","Object","prototype","toString","isArray","_isObject","type","k","hasOwnProperty","_setImmediate","_delay","setTimeout","nextTick","forEach","each","forEachSeries","eachSeries","forEachLimit","eachLimit","forEachOf","completed","iter","forEachOfSeries","iterate","forEachOfLimit","eachOfLimit","map","mapSeries","mapLimit","inject","foldl","reduce","foldr","reduceRight","reversed","reverse","transform","select","filter","selectLimit","filterLimit","selectSeries","filterSeries","reject","rejectLimit","rejectSeries","any","some","someLimit","all","every","everyLimit","detect","detectSeries","detectLimit","sortBy","comparator","left","right","criteria","auto","addListener","listeners","removeListener","idx","taskComplete","remainingTasks","slice","runningTasks","hasError","ready","requires","listener","taskCallback","dep","safeResults","val","rkey","join","retry","times","parseTimes","acc","parseInt","DEFAULT_TIMES","interval","DEFAULT_INTERVAL","wrappedTask","wrappedCallback","wrappedResults","retryAttempt","finalAttempt","seriesCallback","retryInterval","opts","attempts","series","waterfall","wrapIterator","next","parallel","parallelLimit","makeCallback","callArgs","concatSeries","whilst","test","doWhilst","calls","until","doUntil","during","truth","doDuring","queue","items","priorityQueue","_compareTasks","priority","_binarySearch","sequence","compare","beg","end","mid","cargo","log","dir","memoize","hasher","queues","has","memoized","unmemoized","unmemoize","timesSeries","timesLimit","seq","newargs","nextargs","compose","applyEach","applyEachSeries","forever","constant","values","wrapSync","asyncify","then","message","checkInt","buffer","offset","ext","TypeError","RangeError","checkFloat","checkOffset","buffer_core","BufferCoreArray","BufferCoreArrayBuffer","BufferCoreImageData","string_util_1","util_1","BufferCorePreferences","PreferredBufferCore","bci","isAvailable","byte2maxint","byte2minint","byte2maxuint","Buffer","arg1","arg2","arg3","BufferCoreCommon","start","getLength","isArrayBufferView","byteLength","isArrayBuffer","argBuff","copy","writeUInt8","write","getAvailableBufferCores","getPreferredBufferCore","setPreferredBufferCore","getBufferCore","getOffset","set","writeInt8","get","readUInt8","str","encoding","strUtil","FindUtil","str2byte","byte2str","toJSON","byteArr","inspect","digits","INSPECT_MAX_BYTES","toArrayBuffer","buffCore","dv","getDataView","ab","byteOffset","ArrayBuffer","newBuff","toUint8Array","Uint8Array","subarray","indexOf","normalizedValue","isBuffer","valOffset","valLen","bufLen","target","targetStart","sourceStart","sourceEnd","bytesCopied","targetCore","copyTo","writeInt32LE","readInt32LE","sliceCopy","fill","charCodeAt","byteLen","lastBulkWrite","readUIntLE","noAssert","readUInt16LE","readUInt32LE","readUIntBE","readUInt16BE","readUInt32BE","readIntLE","readInt8","readInt16LE","readIntBE","readInt16BE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","rv","writeUInt16LE","writeUInt32LE","floor","writeUIntBE","writeUInt16BE","writeUInt32BE","writeIntLE","writeInt16LE","writeIntBE","writeInt16BE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","isEncoding","enc","u1","u2","aLen","bLen","cmpLength","list","totalLength","undefined","buf","curPos","j","equals","SlowBuffer","_super","__extends","FLOAT_POS_INFINITY","pow","FLOAT_NEG_INFINITY","FLOAT_POS_INFINITY_AS_INT","FLOAT_NEG_INFINITY_AS_INT","FLOAT_NaN_AS_INT","float2intbits","doubleBits","double2longbits","intbits2float","longbits2double","f_val","exp","sig","sign","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","isNaN","abs","round","LN2","d_val","high_bits","int32","exponent","significand","NaN","uint32_a","uint32_b","buffer_core_1","clearMasks","buff","ceil","bufflen","arrIdx","intIdx","newBC","bufferType","DataView","setInt8","setInt16","setInt32","setUint8","setUint16","setUint32","setFloat32","setFloat64","getInt8","getInt16","getInt32","getUint8","getUint16","getUint32","getFloat32","getFloat64","aBuff","aBuffOff","newUintArray","oldUintArray","targetU8","sourceU8","intBytes","intVal","getCanvasPixelArray","bytes","ctx","imageDataFactory","document","createElement","getContext","createImageData","ExtendedASCII","charCode","charIdx","extendedChars","charAt","chars","String","fromCharCode","__esModule","fromCharCodes","charCodes","numChars","numChunks","chunks","toLowerCase","UTF8","ASCII","BINARY","UCS2","HEX","BASE64","BINSTR","BINSTRIE","extended_ascii_1","maxJ","strLen","codePoint","byte3","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","num2b64","replace","b642num","b64chars","numBytes","char1","hex2num","char2","hex2","hex1","num2hex","HEXCHARS","capitals","startByte","endByte","firstChar","chr","charLen","bytelen","isView","posixSplitPath","filename","out","splitPathRe","exec","shift","path","normalize","p","absolute","sep","_removeDuplicateSeps","components","split","goodComponents","c","paths","_i","processed","segment","resolve","resolved","substr","cwd","relative","from","to","fromSegs","toSegs","upCount","downSegs","seg","dirname","sections","basename","lastPart","lastPartExt","extname","lastIndexOf","isAbsolute","_makeLong","parse","allParts","base","format","pathObject","_replaceRegex","RegExp","delimiter","posix","win32","defineKey","processProxy","Process","initializeTTYs","stdin","stdout","stderr","events","Item","fun","array","run","NextTickQueue","_draining","_currentQueue","_queueIndex","_this","_drainQueue","_cleanUpNextTick","timeout","clearTimeout","startTime","Date","now","_cwd","platform","argv","execArgv","domain","execPath","__dirname","env","exitCode","_gid","_uid","version","versions","http_parser","node","v8","uv","zlib","ares","icu","modules","openssl","config","target_defaults","cflags","default_configuration","defines","include_dirs","libraries","variables","clang","host_arch","node_install_npm","node_install_waf","node_prefix","node_shared_cares","node_shared_http_parser","node_shared_libuv","node_shared_zlib","node_shared_v8","node_use_dtrace","node_use_etw","node_use_openssl","node_shared_openssl","strict_aliasing","target_arch","v8_use_snapshot","v8_no_strict_aliasing","visibility","pid","random","title","arch","_mask","connected","chdir","uptime","abort","emit","exit","getgid","setgid","gid","getuid","setuid","uid","signal","memoryUsage","rss","heapTotal","heapUsed","umask","mask","oldMask","hrtime","timeinfo","performance","getTime","secs","TTY","disconnect","EventEmitter","stream","isRaw","columns","rows","isTTY","_bufferedWrites","_waitingForWrites","setRawMode","mode","changeColumns","changeRows","isatty","fd","_write","chunk","_read","size","Duplex","_events","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","handler","context","m","newListener","warned","trace","on","once","fired","position","removeAllListeners","ret","listenerCount","evlistener","emitter","create","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor","options","Readable","Writable","readable","allowHalfOpen","onend","_writableState","ended","processNextTick","onEndNT","objectKeys","util","inherits","method","PassThrough","Transform","_transform","prependListener","event","hasPrependListener","ReadableState","objectMode","readableObjectMode","hwm","highWaterMark","defaultHwm","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","_readableState","read","Stream","readableAddChunk","state","addToFront","chunkInvalid","onEofChunk","_e","skipAdd","emitReadable","maybeReadMore","needMoreData","computeNewHighWaterMark","MAX_HWM","howMuchToRead","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","src","EElistenerCount","nReadingNextTick","resume_","fromList","stringMode","bufferShim","allocUnsafe","_buf","cpy","endReadable","endReadableNT","xs","EE","debugUtil","debuglog","isPaused","setEncoding","nOrig","doRead","pipe","dest","pipeOpts","onunpipe","cleanup","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","unpipe","doEnd","endFn","dests","ev","res","wrap","bind","_fromList","TransformState","afterTransform","needTransform","transforming","writecb","writechunk","writeencoding","ts","_transformState","rs","flush","_flush","ws","nop","WriteReq","WritableState","writableObjectMode","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","CorkedRequest","writev","_writev","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","last","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","finishMaybe","entry","holder","finish","prefinish","need","endWritable","browser","internalUtil","deprecate","getBuffer","current","defineProperty","cork","uncork","setDefaultEncoding","MAX_LEN","kMaxLength","alloc","_fill","fillBuf","flen","encodingOrOffset","allocUnsafeSlow","objectToString","isBoolean","isNull","isNullOrUndefined","isString","isSymbol","isRegExp","re","isDate","d","isError","isPrimitive","msg","deprecated","warn","localStorage","READABLE_STREAM","source","didOnEnd","destroy","_isStdio","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","substring","cr","_isBuffer","pako","Uint16Array","Int32Array","assign","shrinkBuf","arraySet","flattenChunks","setTyped","Buf8","Buf16","Buf32","2","string2buf","buf2binstring","binstring2buf","buf2string","utf8border","./common","3","4","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","5","6","text","time","xflags","os","extra","extra_len","comment","hcrc","7","h","S","E","B","Z","A","next_in","input","avail_in","next_out","avail_out","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","8","havedict","flags","total","head","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","total_in","total_out","adler","D","we","me","z","C","ge","ke","ve","pe","xe","ye","Se","Ee","Be","Ze","Ae","X","W","F","ce","U","L","H","M","K","P","Y","G","N","le","J","ie","$","Q","V","ee","te","ne","fe","ae","oe","se","de","ue","R","O","he","I","be","data_type","T","inflateReset","inflateReset2","inflateResetKeep","inflateInit","inflateInit2","inflate","inflateEnd","inflateGetHeader","inflateSetDictionary","inflateInfo","../utils/common","./adler32","./crc32","./inffast","./inftrees","9","10","0","-1","-2","-3","-4","-5","-6","11","/lib/inflate.js","chunkSize","windowBits","raw","strm","header","dictionary","onEnd","onData","Inflate","inflateRaw","ungzip","./utils/common","./utils/strings","./zlib/constants","./zlib/gzheader","./zlib/inflate","./zlib/messages","./zlib/zstream","file_system","api_error_1","file_flag","preload_file","MirrorFile","fs","flag","stat","syncSync","isDirty","_fs","_syncSync","resetDirty","closeSync","PreloadFile","AsyncMirror","_queueRunning","_isInitialized","_initializeCallbacks","_sync","_async","supportsSynch","getName","writeFileSync","getPath","FileFlag","getFileFlag","getStats","enqueueOp","apiMethod","getFlag","initialize","userCb","callbacks","copyDirectory","mkdirSync","readdir","files","copyNextFile","copyItem","copyFile","readFile","stats","isDirectory","checkInitialized","ApiError","ErrorCode","EPERM","isReadOnly","supportsLinks","supportsProps","op","doNextOp","renameSync","oldPath","newPath","statSync","isLstat","openSync","readFileSync","unlinkSync","rmdirSync","readdirSync","existsSync","chmodSync","isLchmod","chownSync","isLchown","utimesSync","atime","mtime","SynchronousFileSystem","constructErrorCodeLookup","errorCodeLookup","Dropbox","NETWORK_ERROR","EIO","INVALID_PARAM","EINVAL","INVALID_TOKEN","OAUTH_ERROR","NOT_FOUND","ENOENT","INVALID_METHOD","NOT_ACCEPTABLE","CONFLICT","RATE_LIMITED","EBUSY","SERVER_ERROR","OVER_QUOTA","ENOSPC","isFileInfo","cache","isFile","isDirInfo","isFolder","node_fs_stats_1","CachedDropboxClient","client","_cache","_client","getCachedInfo","putCachedInfo","deleteCachedInfo","getCachedDirInfo","info","getCachedFileInfo","updateCachedDirInfo","contents","cachedInfo","contentHash","updateCachedFileInfo","versionTag","updateCachedInfo","cacheInfo","_wrap","interceptCb","filenames","folderEntries","status","NO_CONTENT","remove","move","arrayBuffer","writeFile","mkdir","performOp","numRun","timeoutDuration","DropboxFile","_path","_flag","_stat","buffer2ArrayBuffer","_writeFileStrict","close","DropboxFileSystem","supportsSymlinks","mainCb","convert","deleteFile","file","rename","error2","missingPath","response","isRemoved","_statType","FileError","open","content","dbStat","arrayBuffer2Buffer","_makeFile","isReadable","parent","FileType","FILE","DIRECTORY","_remove","ENOTDIR","EISDIR","unlink","rmdir","EEXIST","errorCode","BaseFileSystem","translateError","folder","wrapCallback","wrapFunction","wrapFirst","wrapSecond","_folder","_wrapped","file_system_1","FolderAdapter","wrapped","exists","isDirectoryEntry","_requestQuota","success","errorCallback","navigator","PERSISTENT","webkitPersistentStorage","requestQuota","TEMPORARY","webkitTemporaryStorage","webkitStorageInfo","_toArray","file_flag_1","_getFS","webkitRequestFileSystem","requestFileSystem","HTML5FSFile","createWriter","writer","blob","Blob","onwriteend","truncate","getFile","HTML5FS","expectedDir","EACCES","allocate","granted","_readdir","entries","deleteEntry","succ","fullPath","removeRecursively","semaphore","successCount","currentPath","getDirectory","parentDir","moveTo","loadAsFile","fileFromEntry","failedToLoad","loadAsDir","failedToLoadAsFile","isExclusive","pathNotExistsAction","ActionType","CREATE_FILE","exclusive","reader","FileReader","onloadend","bfs_file","readAsArrayBuffer","ENOTEMPTY","dirEntry","createReader","readEntries","kvfs","InMemoryStore","store","clear","beginTransaction","SimpleSyncRWTransaction","put","overwrite","del","InMemoryFileSystem","SyncKeyValueFileSystem","convertError","onErrorHandler","preventDefault","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IndexedDBROTransaction","tx","onsuccess","IndexedDBRWTransaction","arraybuffer","add","commit","IndexedDBStore","storeName","openReq","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","transaction","objectStore","IndexedDBFileSystem","init","AsyncKeyValueFileSystem","binaryEncoding","supportsBinaryString","setItem","getItem","LocalStorageStore","removeItem","LocalStorageFileSystem","defineFcn","isSync","numArgs","_getFs","standardizeError","InMemory_1","MountableFileSystem","mountList","mntMap","rootFs","mount","mountPoint","mkdirpSync","umount","i_1","diskSpace","realPath","fs1_rv","fs2_rv","fsInfo","rv2","_containsMountPt","mountPoints","i_2","pt","fsCmdMap","cmds","fnName","makeModeWritable","preload_file_1","locked_fs_1","deletionLogPath","OverlayFile","_syncAsync","UnlockedOverlayFS","_deletedFiles","_deleteLog","_writable","_readable","getOverlayedFileSystems","createParentDirectoriesAsync","statDone","toCreate","createParents","createParentDirectories","callbackArray","errno","deletePath","writeSync","undeletePath","oldErr","oldStats","newErr","newStats","copyDirContents","oldFile","newFile","mkdirErr","readdirErr","clone","oldStat","pathExistsAction","TRUNCATE_FILE","NOP","readFileErr","writableExists","readableExists","rmdirLower","dirStats","wFiles","rFiles","seenMap","filtered","fPath","fileP","existsWritable","existsReadable","chmod","operateOnWritableAsync","operateOnWritable","chown","utimes","copyToWritable","copyToWritableAsync","pStats","OverlayFS","getFSUnlocked","apiErrorLocal2Remote","SpecialArgType","API_ERROR","errorData","bufferToTransferrableObject","writeToBuffer","apiErrorRemote2Local","fromBuffer","transferrableObjectToBuffer","errorLocal2Remote","ERROR","stack","errorRemote2Local","cnstr","statsLocal2Remote","STATS","statsData","toBuffer","statsRemote2Local","fileFlagLocal2Remote","FILEFLAG","flagStr","getFlagString","fileFlagRemote2Local","remoteFlag","bufferLocal2Remote","BUFFER","bufferRemote2Local","buffArg","isAPIRequest","isAPIResponse","CallbackArgumentConverter","_callbacks","_nextId","toRemoteArg","id","CB","toLocalArg","FileDescriptorArgumentConverter","_fileDescriptors","bytesRead","FD","_applyFdChanges","remoteFd","remoteStats","isWriteable","isAppendable","getPos","applyStatChanges","applyFdAPIRequest","request","fdArg","WorkerFile","remoteFdId","_remoteFdId","getRemoteFdId","_syncClose","syncClose","WorkerFS","_callbackConverter","_isReadOnly","_supportLinks","_supportProps","_outstandingRequests","_worker","addEventListener","resp","fixedArgs","_argRemote2Local","cbId","Worker","specialArg","_argLocal2Remote","browserfsMessage","probeResponse","postMessage","_rpc","methodName","realpath","fname","appendFile","link","srcpath","dstpath","symlink","readlink","attachRemoteListener","argLocal2Remote","requestArgs","BaseFile","fdConverter","argRemote2Local","fixedRequestArgs","abortAndSendError","countdown","fixedArg","remoteCb","getRootFS","PROBE","rootFS","tryToString","xhr","file_index_1","XmlHttpRequest","listingUrlOrObj","prefixUrl","listing","_requestFileSync","_index","FileIndex","fromListing","fileIterator","file_data","getXhrPath","filePath","_requestFileSizeAsync","getFileSizeAsync","_requestFileSizeSync","getFileSizeSync","_requestFileAsync","asyncDownloadFile","syncDownloadFile","XMLHttpRequest","preloadFile","inode","getInode","isFileInode","getData","isDirInode","THROW_EXCEPTION","NoSyncFile","getListing","oldCb","err2","fdCast","fdBuff","copyingSlice","msdos2date","date","day","month","year","second","minute","hour","safeToString","useUTF8","ExternalFileAttributeType","CompressionMethod","FileHeader","versionNeeded","compressionMethod","lastModFileTime","rawLastModFileTime","crc32","fileNameLength","extraFieldLength","fileName","extraField","totalSize","FileData","record","decompress","DEFLATE","buffer2Arrayish","compressedSize","uncompressedSize","arrayish2Buffer","STORED","getHeader","getRecord","getRawData","DataDescriptor","ArchiveExtraDataRecord","extraFieldData","DigitalSignature","signatureData","CentralDirectory","zipData","_filename","produceFilename","versionMadeBy","fileCommentLength","diskNumberStart","internalAttributes","externalAttributes","headerRelativeOffset","rawFileName","fileComment","rawFileComment","isEncrypted","getFileData","EndOfCentralDirectory","diskNumber","cdDiskNumber","cdDiskEntryCount","cdTotalEntryCount","cdSize","cdOffset","cdZipCommentLength","cdZipComment","rawCdZipComment","ZipTOC","directoryEntries","eocd","ZipFS","_directoryEntries","_eocd","populateIndex","getCentralDirectoryEntry","getCentralDirectoryEntryAt","getNumberOfCentralDirectoryEntries","getEndOfCentralDirectory","cdRecord","getEOCD","startOffset","endOffset","addToIndex","cd","addPathFast","DirInode","FileInode","computeIndexResponsive","cdPtr","cdEnd","cdEntries","computeIndex","wrapCb","RELEASE","__numWaiting","normalizeMode","def","trueMode","normalizeTime","normalizePath","normalizeOptions","defEnc","defFlag","defMode","nopCb","FS","fdMap","nextFd","F_OK","R_OK","W_OK","X_OK","_wrapCb","getFdForFile","fd2file","EBADF","closeFd","_toUnixTimestamp","newCb","lstat","lstatSync","truncateSync","appendFileSync","fstat","fstatSync","ftruncate","ftruncateSync","fsync","fsyncSync","fdatasync","datasync","fdatasyncSync","datasyncSync","arg4","arg5","readSync","shenanigans","fchown","fchownSync","fchmod","numMode","fchmodSync","futimes","futimesSync","linkSync","symlinkSync","readlinkSync","lchown","lchownSync","lchmod","lchmodSync","realpathSync","watchFile","ENOTSUP","unwatchFile","watch","access","accessSync","createReadStream","createWriteStream","Stats","ErrorStrings","EFBIG","EROFS","syscall","fromJSON","json","bufferSize","bytesWritten","JSON","stringify","AsyncMirror_1","Dropbox_1","FolderAdapter_1","HTML5FS_1","InMemory","IndexedDB_1","IndexedDB","LocalStorage_1","LocalStorage","MountableFileSystem_1","OverlayFS_1","WorkerFS_1","XmlHttpRequest_1","ZipFS_1","install","oldRequire","BFSRequire","registerFileSystem","FileSystem","BFSUtils","rootfs","emscripten_fs_1","EmscriptenFS","api_error","validFlagStrs","flagCache","isTruncating","isSynchronous","openFile","createFile","must_be_file","parentStats","openFileSync","createFileSync","splitPath","addPaths","doesExist","er2","toExport","FS_1","_fsMock","FSProto","newFs","item_type","ctime","dev","ino","rdev","nlink","blksize","birthtime","blocks","isSymbolicLink","SYMLINK","isSocket","isBlockDevice","isCharacterDevice","isFIFO","u8","buffer2Uint8array","u8offset","u8Len","SUPPORTS_TYPED_ARRAYS","uint8Array2Buffer","s0","newS0","buffSlice","isIE","userAgent","isWebWorker","BFSEmscriptenStreamOps","nodefs","getNodeFS","getFS","PATH","getPATH","ERRNO_CODES","getERRNO_CODES","nfd","flagsToPermissionString","ErrnoError","llseek","whence","BFSEmscriptenNodeOps","getattr","setattr","attr","timestamp","lookup","join2","getMode","createNode","mknod","isDir","oldNode","newDir","newName","BFSEmscriptenFS","_FS","_PATH","_ERRNO_CODES","flagsToPermissionStringMap","64","65","66","129","193","514","577","578","705","706","1024","1025","1026","1089","1090","1153","1154","1217","1218","4096","4098","node_ops","stream_ops","isLink","parts","parsedFlags","addPath","_split_path","dirpath","itemname","addItem","itemNameMark","parentPath","itemName","removePath","remItem","children","ls","rootInode","pwd","tree","_ls","setData","_ref","Inode","toStats","getSize","update","hasChanged","atimeMs","mtimeMs","ctimeMs","GenerateRandomID","noError","noErrorTx","ROOT_NODE_ID","originalData","modifiedKeys","stashOldValue","markModified","SyncKeyValueFile","makeRootDirectory","currTime","dirInode","_findINode","read_directory","dirList","getDirListing","getINode","findINode","addNewNode","currId","retries","commitNewFile","parentNode","dirListing","dataId","fileNode","fileNodeId","oldParent","oldName","newParent","oldDirNode","oldDirList","nodeId","newDirNode","newDirList","newNameNode","removeEntry","parentListing","fileInodeId","fileInode","inodeChanged","AsyncKeyValueFile","handle_directory_listings","findINodeAndDirListing","reroll","committed","inodes","lists","errorOccurred","theOleSwitcharoo","oldParentList","oldParentINode","newParentList","newParentINode","fileId","completeRename","processInodeAndListings","mutex_1","LockedFS","_mu","lock","unlock","isLocked","resolvedPath","linkString","Mutex","_locked","_waiters","tryLock","_pos","_dirty","_buffer","advancePos","delta","setPos","newPos","endFp","endRead","getIEByteArray","IEByteArray","rawBytes","IEBinaryToArray_ByteStr","lastChr","IEBinaryToArray_ByteStr_Last","data_str","match","data_array","downloadFileIE","req","setRequestHeader","onreadystatechange","readyState","responseBody","responseText","send","asyncDownloadFileIE","syncDownloadFileIE","asyncDownloadFileModern","jsonSupported","responseType","syncDownloadFileModern","overrideMimeType","syncDownloadFileIE10","getFileSize","getResponseHeader","vArg","hasDontEnumBug","propertyIsEnumerable","dontEnums","dontEnumsLength","prop","scope","thisArg","gScope","timeouts","messageName","canUsePostMessage","importScripts","postMessageIsAsync","oldOnMessage","onmessage","handleMessage","stopPropagation","cancelBubble","attachEvent","MessageChannel","channel","port1","port2","searchElement","fromIndex","pivot","kValue","mappedValue","bfs"],"mappings":"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","file":"browserfs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n(function () {\n\n    var async = {};\n    function noop() {}\n    function identity(v) {\n        return v;\n    }\n    function toBool(v) {\n        return !!v;\n    }\n    function notId(v) {\n        return !v;\n    }\n\n    // global on the server, window in the browser\n    var previous_async;\n\n    // Establish the root object, `window` (`self`) in the browser, `global`\n    // on the server, or `this` in some virtual machines. We use `self`\n    // instead of `window` for `WebWorker` support.\n    var root = typeof self === 'object' && self.self === self && self ||\n            typeof global === 'object' && global.global === global && global ||\n            this;\n\n    if (root != null) {\n        previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        return function() {\n            if (fn === null) throw new Error(\"Callback was already called.\");\n            fn.apply(this, arguments);\n            fn = null;\n        };\n    }\n\n    function _once(fn) {\n        return function() {\n            if (fn === null) return;\n            fn.apply(this, arguments);\n            fn = null;\n        };\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    // Ported from underscore.js isObject\n    var _isObject = function(obj) {\n        var type = typeof obj;\n        return type === 'function' || type === 'object' && !!obj;\n    };\n\n    function _isArrayLike(arr) {\n        return _isArray(arr) || (\n            // has a positive integer length property\n            typeof arr.length === \"number\" &&\n            arr.length >= 0 &&\n            arr.length % 1 === 0\n        );\n    }\n\n    function _arrayEach(arr, iterator) {\n        var index = -1,\n            length = arr.length;\n\n        while (++index < length) {\n            iterator(arr[index], index, arr);\n        }\n    }\n\n    function _map(arr, iterator) {\n        var index = -1,\n            length = arr.length,\n            result = Array(length);\n\n        while (++index < length) {\n            result[index] = iterator(arr[index], index, arr);\n        }\n        return result;\n    }\n\n    function _range(count) {\n        return _map(Array(count), function (v, i) { return i; });\n    }\n\n    function _reduce(arr, iterator, memo) {\n        _arrayEach(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    }\n\n    function _forEachOf(object, iterator) {\n        _arrayEach(_keys(object), function (key) {\n            iterator(object[key], key);\n        });\n    }\n\n    function _indexOf(arr, item) {\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] === item) return i;\n        }\n        return -1;\n    }\n\n    var _keys = Object.keys || function (obj) {\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    function _keyIterator(coll) {\n        var i = -1;\n        var len;\n        var keys;\n        if (_isArrayLike(coll)) {\n            len = coll.length;\n            return function next() {\n                i++;\n                return i < len ? i : null;\n            };\n        } else {\n            keys = _keys(coll);\n            len = keys.length;\n            return function next() {\n                i++;\n                return i < len ? keys[i] : null;\n            };\n        }\n    }\n\n    // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)\n    // This accumulates the arguments passed into an array, after a given index.\n    // From underscore.js (https://github.com/jashkenas/underscore/pull/2140).\n    function _restParam(func, startIndex) {\n        startIndex = startIndex == null ? func.length - 1 : +startIndex;\n        return function() {\n            var length = Math.max(arguments.length - startIndex, 0);\n            var rest = Array(length);\n            for (var index = 0; index < length; index++) {\n                rest[index] = arguments[index + startIndex];\n            }\n            switch (startIndex) {\n                case 0: return func.call(this, rest);\n                case 1: return func.call(this, arguments[0], rest);\n            }\n            // Currently unused but handle cases outside of the switch statement:\n            // var args = Array(startIndex + 1);\n            // for (index = 0; index < startIndex; index++) {\n            //     args[index] = arguments[index];\n            // }\n            // args[startIndex] = rest;\n            // return func.apply(this, args);\n        };\n    }\n\n    function _withoutIndex(iterator) {\n        return function (value, index, callback) {\n            return iterator(value, callback);\n        };\n    }\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n\n    // capture the global reference to guard against fakeTimer mocks\n    var _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\n    var _delay = _setImmediate ? function(fn) {\n        // not a direct alias for IE10 compatibility\n        _setImmediate(fn);\n    } : function(fn) {\n        setTimeout(fn, 0);\n    };\n\n    if (typeof process === 'object' && typeof process.nextTick === 'function') {\n        async.nextTick = process.nextTick;\n    } else {\n        async.nextTick = _delay;\n    }\n    async.setImmediate = _setImmediate ? _delay : async.nextTick;\n\n\n    async.forEach =\n    async.each = function (arr, iterator, callback) {\n        return async.eachOf(arr, _withoutIndex(iterator), callback);\n    };\n\n    async.forEachSeries =\n    async.eachSeries = function (arr, iterator, callback) {\n        return async.eachOfSeries(arr, _withoutIndex(iterator), callback);\n    };\n\n\n    async.forEachLimit =\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        return _eachOfLimit(limit)(arr, _withoutIndex(iterator), callback);\n    };\n\n    async.forEachOf =\n    async.eachOf = function (object, iterator, callback) {\n        callback = _once(callback || noop);\n        object = object || [];\n\n        var iter = _keyIterator(object);\n        var key, completed = 0;\n\n        while ((key = iter()) != null) {\n            completed += 1;\n            iterator(object[key], key, only_once(done));\n        }\n\n        if (completed === 0) callback(null);\n\n        function done(err) {\n            completed--;\n            if (err) {\n                callback(err);\n            }\n            // Check key is null in case iterator isn't exhausted\n            // and done resolved synchronously.\n            else if (key === null && completed <= 0) {\n                callback(null);\n            }\n        }\n    };\n\n    async.forEachOfSeries =\n    async.eachOfSeries = function (obj, iterator, callback) {\n        callback = _once(callback || noop);\n        obj = obj || [];\n        var nextKey = _keyIterator(obj);\n        var key = nextKey();\n        function iterate() {\n            var sync = true;\n            if (key === null) {\n                return callback(null);\n            }\n            iterator(obj[key], key, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    key = nextKey();\n                    if (key === null) {\n                        return callback(null);\n                    } else {\n                        if (sync) {\n                            async.setImmediate(iterate);\n                        } else {\n                            iterate();\n                        }\n                    }\n                }\n            }));\n            sync = false;\n        }\n        iterate();\n    };\n\n\n\n    async.forEachOfLimit =\n    async.eachOfLimit = function (obj, limit, iterator, callback) {\n        _eachOfLimit(limit)(obj, iterator, callback);\n    };\n\n    function _eachOfLimit(limit) {\n\n        return function (obj, iterator, callback) {\n            callback = _once(callback || noop);\n            obj = obj || [];\n            var nextKey = _keyIterator(obj);\n            if (limit <= 0) {\n                return callback(null);\n            }\n            var done = false;\n            var running = 0;\n            var errored = false;\n\n            (function replenish () {\n                if (done && running <= 0) {\n                    return callback(null);\n                }\n\n                while (running < limit && !errored) {\n                    var key = nextKey();\n                    if (key === null) {\n                        done = true;\n                        if (running <= 0) {\n                            callback(null);\n                        }\n                        return;\n                    }\n                    running += 1;\n                    iterator(obj[key], key, only_once(function (err) {\n                        running -= 1;\n                        if (err) {\n                            callback(err);\n                            errored = true;\n                        }\n                        else {\n                            replenish();\n                        }\n                    }));\n                }\n            })();\n        };\n    }\n\n\n    function doParallel(fn) {\n        return function (obj, iterator, callback) {\n            return fn(async.eachOf, obj, iterator, callback);\n        };\n    }\n    function doParallelLimit(fn) {\n        return function (obj, limit, iterator, callback) {\n            return fn(_eachOfLimit(limit), obj, iterator, callback);\n        };\n    }\n    function doSeries(fn) {\n        return function (obj, iterator, callback) {\n            return fn(async.eachOfSeries, obj, iterator, callback);\n        };\n    }\n\n    function _asyncMap(eachfn, arr, iterator, callback) {\n        callback = _once(callback || noop);\n        arr = arr || [];\n        var results = _isArrayLike(arr) ? [] : {};\n        eachfn(arr, function (value, index, callback) {\n            iterator(value, function (err, v) {\n                results[index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    }\n\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = doParallelLimit(_asyncMap);\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.inject =\n    async.foldl =\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachOfSeries(arr, function (x, i, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n\n    async.foldr =\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, identity).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n\n    async.transform = function (arr, memo, iterator, callback) {\n        if (arguments.length === 3) {\n            callback = iterator;\n            iterator = memo;\n            memo = _isArray(arr) ? [] : {};\n        }\n\n        async.eachOf(arr, function(v, k, cb) {\n            iterator(memo, v, k, cb);\n        }, function(err) {\n            callback(err, memo);\n        });\n    };\n\n    function _filter(eachfn, arr, iterator, callback) {\n        var results = [];\n        eachfn(arr, function (x, index, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    results.push({index: index, value: x});\n                }\n                callback();\n            });\n        }, function () {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    }\n\n    async.select =\n    async.filter = doParallel(_filter);\n\n    async.selectLimit =\n    async.filterLimit = doParallelLimit(_filter);\n\n    async.selectSeries =\n    async.filterSeries = doSeries(_filter);\n\n    function _reject(eachfn, arr, iterator, callback) {\n        _filter(eachfn, arr, function(value, cb) {\n            iterator(value, function(v) {\n                cb(!v);\n            });\n        }, callback);\n    }\n    async.reject = doParallel(_reject);\n    async.rejectLimit = doParallelLimit(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    function _createTester(eachfn, check, getResult) {\n        return function(arr, limit, iterator, cb) {\n            function done() {\n                if (cb) cb(getResult(false, void 0));\n            }\n            function iteratee(x, _, callback) {\n                if (!cb) return callback();\n                iterator(x, function (v) {\n                    if (cb && check(v)) {\n                        cb(getResult(true, x));\n                        cb = iterator = false;\n                    }\n                    callback();\n                });\n            }\n            if (arguments.length > 3) {\n                eachfn(arr, limit, iteratee, done);\n            } else {\n                cb = iterator;\n                iterator = limit;\n                eachfn(arr, iteratee, done);\n            }\n        };\n    }\n\n    async.any =\n    async.some = _createTester(async.eachOf, toBool, identity);\n\n    async.someLimit = _createTester(async.eachOfLimit, toBool, identity);\n\n    async.all =\n    async.every = _createTester(async.eachOf, notId, notId);\n\n    async.everyLimit = _createTester(async.eachOfLimit, notId, notId);\n\n    function _findGetResult(v, x) {\n        return x;\n    }\n    async.detect = _createTester(async.eachOf, identity, _findGetResult);\n    async.detectSeries = _createTester(async.eachOfSeries, identity, _findGetResult);\n    async.detectLimit = _createTester(async.eachOfLimit, identity, _findGetResult);\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                callback(null, _map(results.sort(comparator), function (x) {\n                    return x.value;\n                }));\n            }\n\n        });\n\n        function comparator(left, right) {\n            var a = left.criteria, b = right.criteria;\n            return a < b ? -1 : a > b ? 1 : 0;\n        }\n    };\n\n    async.auto = function (tasks, concurrency, callback) {\n        if (typeof arguments[1] === 'function') {\n            // concurrency is optional, shift the args.\n            callback = concurrency;\n            concurrency = null;\n        }\n        callback = _once(callback || noop);\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length;\n        if (!remainingTasks) {\n            return callback(null);\n        }\n        if (!concurrency) {\n            concurrency = remainingTasks;\n        }\n\n        var results = {};\n        var runningTasks = 0;\n\n        var hasError = false;\n\n        var listeners = [];\n        function addListener(fn) {\n            listeners.unshift(fn);\n        }\n        function removeListener(fn) {\n            var idx = _indexOf(listeners, fn);\n            if (idx >= 0) listeners.splice(idx, 1);\n        }\n        function taskComplete() {\n            remainingTasks--;\n            _arrayEach(listeners.slice(0), function (fn) {\n                fn();\n            });\n        }\n\n        addListener(function () {\n            if (!remainingTasks) {\n                callback(null, results);\n            }\n        });\n\n        _arrayEach(keys, function (k) {\n            if (hasError) return;\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = _restParam(function(err, args) {\n                runningTasks--;\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _forEachOf(results, function(val, rkey) {\n                        safeResults[rkey] = val;\n                    });\n                    safeResults[k] = args;\n                    hasError = true;\n\n                    callback(err, safeResults);\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            });\n            var requires = task.slice(0, task.length - 1);\n            // prevent dead-locks\n            var len = requires.length;\n            var dep;\n            while (len--) {\n                if (!(dep = tasks[requires[len]])) {\n                    throw new Error('Has nonexistent dependency in ' + requires.join(', '));\n                }\n                if (_isArray(dep) && _indexOf(dep, k) >= 0) {\n                    throw new Error('Has cyclic dependencies');\n                }\n            }\n            function ready() {\n                return runningTasks < concurrency && _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            }\n            if (ready()) {\n                runningTasks++;\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                addListener(listener);\n            }\n            function listener() {\n                if (ready()) {\n                    runningTasks++;\n                    removeListener(listener);\n                    task[task.length - 1](taskCallback, results);\n                }\n            }\n        });\n    };\n\n\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var DEFAULT_INTERVAL = 0;\n\n        var attempts = [];\n\n        var opts = {\n            times: DEFAULT_TIMES,\n            interval: DEFAULT_INTERVAL\n        };\n\n        function parseTimes(acc, t){\n            if(typeof t === 'number'){\n                acc.times = parseInt(t, 10) || DEFAULT_TIMES;\n            } else if(typeof t === 'object'){\n                acc.times = parseInt(t.times, 10) || DEFAULT_TIMES;\n                acc.interval = parseInt(t.interval, 10) || DEFAULT_INTERVAL;\n            } else {\n                throw new Error('Unsupported argument type for \\'times\\': ' + typeof t);\n            }\n        }\n\n        var length = arguments.length;\n        if (length < 1 || length > 3) {\n            throw new Error('Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)');\n        } else if (length <= 2 && typeof times === 'function') {\n            callback = task;\n            task = times;\n        }\n        if (typeof times !== 'function') {\n            parseTimes(opts, times);\n        }\n        opts.callback = callback;\n        opts.task = task;\n\n        function wrappedTask(wrappedCallback, wrappedResults) {\n            function retryAttempt(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            }\n\n            function retryInterval(interval){\n                return function(seriesCallback){\n                    setTimeout(function(){\n                        seriesCallback(null);\n                    }, interval);\n                };\n            }\n\n            while (opts.times) {\n\n                var finalAttempt = !(opts.times-=1);\n                attempts.push(retryAttempt(opts.task, finalAttempt));\n                if(!finalAttempt && opts.interval > 0){\n                    attempts.push(retryInterval(opts.interval));\n                }\n            }\n\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || opts.callback)(data.err, data.result);\n            });\n        }\n\n        // If a callback is passed, run this as a controll flow\n        return opts.callback ? wrappedTask() : wrappedTask;\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = _once(callback || noop);\n        if (!_isArray(tasks)) {\n            var err = new Error('First argument to waterfall must be an array of functions');\n            return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        function wrapIterator(iterator) {\n            return _restParam(function (err, args) {\n                if (err) {\n                    callback.apply(null, [err].concat(args));\n                }\n                else {\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    ensureAsync(iterator).apply(null, args);\n                }\n            });\n        }\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    function _parallel(eachfn, tasks, callback) {\n        callback = callback || noop;\n        var results = _isArrayLike(tasks) ? [] : {};\n\n        eachfn(tasks, function (task, key, callback) {\n            task(_restParam(function (err, args) {\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                results[key] = args;\n                callback(err);\n            }));\n        }, function (err) {\n            callback(err, results);\n        });\n    }\n\n    async.parallel = function (tasks, callback) {\n        _parallel(async.eachOf, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel(_eachOfLimit(limit), tasks, callback);\n    };\n\n    async.series = function(tasks, callback) {\n        _parallel(async.eachOfSeries, tasks, callback);\n    };\n\n    async.iterator = function (tasks) {\n        function makeCallback(index) {\n            function fn() {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            }\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        }\n        return makeCallback(0);\n    };\n\n    async.apply = _restParam(function (fn, args) {\n        return _restParam(function (callArgs) {\n            return fn.apply(\n                null, args.concat(callArgs)\n            );\n        });\n    });\n\n    function _concat(eachfn, arr, fn, callback) {\n        var result = [];\n        eachfn(arr, function (x, index, cb) {\n            fn(x, function (err, y) {\n                result = result.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, result);\n        });\n    }\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        callback = callback || noop;\n        if (test()) {\n            var next = _restParam(function(err, args) {\n                if (err) {\n                    callback(err);\n                } else if (test.apply(this, args)) {\n                    iterator(next);\n                } else {\n                    callback.apply(null, [null].concat(args));\n                }\n            });\n            iterator(next);\n        } else {\n            callback(null);\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        var calls = 0;\n        return async.whilst(function() {\n            return ++calls <= 1 || test.apply(this, arguments);\n        }, iterator, callback);\n    };\n\n    async.until = function (test, iterator, callback) {\n        return async.whilst(function() {\n            return !test.apply(this, arguments);\n        }, iterator, callback);\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        return async.doWhilst(iterator, function() {\n            return !test.apply(this, arguments);\n        }, callback);\n    };\n\n    async.during = function (test, iterator, callback) {\n        callback = callback || noop;\n\n        var next = _restParam(function(err, args) {\n            if (err) {\n                callback(err);\n            } else {\n                args.push(check);\n                test.apply(this, args);\n            }\n        });\n\n        var check = function(err, truth) {\n            if (err) {\n                callback(err);\n            } else if (truth) {\n                iterator(next);\n            } else {\n                callback(null);\n            }\n        };\n\n        test(check);\n    };\n\n    async.doDuring = function (iterator, test, callback) {\n        var calls = 0;\n        async.during(function(next) {\n            if (calls++ < 1) {\n                next(null, true);\n            } else {\n                test.apply(this, arguments);\n            }\n        }, iterator, callback);\n    };\n\n    function _queue(worker, concurrency, payload) {\n        if (concurrency == null) {\n            concurrency = 1;\n        }\n        else if(concurrency === 0) {\n            throw new Error('Concurrency must not be zero');\n        }\n        function _insert(q, data, pos, callback) {\n            if (callback != null && typeof callback !== \"function\") {\n                throw new Error(\"task callback must be a function\");\n            }\n            q.started = true;\n            if (!_isArray(data)) {\n                data = [data];\n            }\n            if(data.length === 0 && q.idle()) {\n                // call drain immediately if there are no tasks\n                return async.setImmediate(function() {\n                    q.drain();\n                });\n            }\n            _arrayEach(data, function(task) {\n                var item = {\n                    data: task,\n                    callback: callback || noop\n                };\n\n                if (pos) {\n                    q.tasks.unshift(item);\n                } else {\n                    q.tasks.push(item);\n                }\n\n                if (q.tasks.length === q.concurrency) {\n                    q.saturated();\n                }\n            });\n            async.setImmediate(q.process);\n        }\n        function _next(q, tasks) {\n            return function(){\n                workers -= 1;\n\n                var removed = false;\n                var args = arguments;\n                _arrayEach(tasks, function (task) {\n                    _arrayEach(workersList, function (worker, index) {\n                        if (worker === task && !removed) {\n                            workersList.splice(index, 1);\n                            removed = true;\n                        }\n                    });\n\n                    task.callback.apply(task, args);\n                });\n                if (q.tasks.length + workers === 0) {\n                    q.drain();\n                }\n                q.process();\n            };\n        }\n\n        var workers = 0;\n        var workersList = [];\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            payload: payload,\n            saturated: noop,\n            empty: noop,\n            drain: noop,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n                _insert(q, data, false, callback);\n            },\n            kill: function () {\n                q.drain = noop;\n                q.tasks = [];\n            },\n            unshift: function (data, callback) {\n                _insert(q, data, true, callback);\n            },\n            process: function () {\n                while(!q.paused && workers < q.concurrency && q.tasks.length){\n\n                    var tasks = q.payload ?\n                        q.tasks.splice(0, q.payload) :\n                        q.tasks.splice(0, q.tasks.length);\n\n                    var data = _map(tasks, function (task) {\n                        return task.data;\n                    });\n\n                    if (q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    workersList.push(tasks[0]);\n                    var cb = only_once(_next(q, tasks));\n                    worker(data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            workersList: function () {\n                return workersList;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                q.paused = true;\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                var resumeCount = Math.min(q.concurrency, q.tasks.length);\n                // Need to call q.process once per concurrent\n                // worker to preserve full concurrency after pause\n                for (var w = 1; w <= resumeCount; w++) {\n                    async.setImmediate(q.process);\n                }\n            }\n        };\n        return q;\n    }\n\n    async.queue = function (worker, concurrency) {\n        var q = _queue(function (items, cb) {\n            worker(items[0], cb);\n        }, concurrency, 1);\n\n        return q;\n    };\n\n    async.priorityQueue = function (worker, concurrency) {\n\n        function _compareTasks(a, b){\n            return a.priority - b.priority;\n        }\n\n        function _binarySearch(sequence, item, compare) {\n            var beg = -1,\n                end = sequence.length - 1;\n            while (beg < end) {\n                var mid = beg + ((end - beg + 1) >>> 1);\n                if (compare(item, sequence[mid]) >= 0) {\n                    beg = mid;\n                } else {\n                    end = mid - 1;\n                }\n            }\n            return beg;\n        }\n\n        function _insert(q, data, priority, callback) {\n            if (callback != null && typeof callback !== \"function\") {\n                throw new Error(\"task callback must be a function\");\n            }\n            q.started = true;\n            if (!_isArray(data)) {\n                data = [data];\n            }\n            if(data.length === 0) {\n                // call drain immediately if there are no tasks\n                return async.setImmediate(function() {\n                    q.drain();\n                });\n            }\n            _arrayEach(data, function(task) {\n                var item = {\n                    data: task,\n                    priority: priority,\n                    callback: typeof callback === 'function' ? callback : noop\n                };\n\n                q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n                if (q.tasks.length === q.concurrency) {\n                    q.saturated();\n                }\n                async.setImmediate(q.process);\n            });\n        }\n\n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n\n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n            _insert(q, data, priority, callback);\n        };\n\n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        return _queue(worker, 1, payload);\n    };\n\n    function _console_fn(name) {\n        return _restParam(function (fn, args) {\n            fn.apply(null, args.concat([_restParam(function (err, args) {\n                if (typeof console === 'object') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _arrayEach(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            })]));\n        });\n    }\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        var has = Object.prototype.hasOwnProperty;\n        hasher = hasher || identity;\n        var memoized = _restParam(function memoized(args) {\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (has.call(memo, key)) {   \n                async.setImmediate(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (has.call(queues, key)) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([_restParam(function (args) {\n                    memo[key] = args;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                        q[i].apply(null, args);\n                    }\n                })]));\n            }\n        });\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n        return function () {\n            return (fn.unmemoized || fn).apply(null, arguments);\n        };\n    };\n\n    function _times(mapper) {\n        return function (count, iterator, callback) {\n            mapper(_range(count), iterator, callback);\n        };\n    }\n\n    async.times = _times(async.map);\n    async.timesSeries = _times(async.mapSeries);\n    async.timesLimit = function (count, limit, iterator, callback) {\n        return async.mapLimit(_range(count), limit, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return _restParam(function (args) {\n            var that = this;\n\n            var callback = args[args.length - 1];\n            if (typeof callback == 'function') {\n                args.pop();\n            } else {\n                callback = noop;\n            }\n\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([_restParam(function (err, nextargs) {\n                    cb(err, nextargs);\n                })]));\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        });\n    };\n\n    async.compose = function (/* functions... */) {\n        return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n\n    function _applyEach(eachfn) {\n        return _restParam(function(fns, args) {\n            var go = _restParam(function(args) {\n                var that = this;\n                var callback = args.pop();\n                return eachfn(fns, function (fn, _, cb) {\n                    fn.apply(that, args.concat([cb]));\n                },\n                callback);\n            });\n            if (args.length) {\n                return go.apply(this, args);\n            }\n            else {\n                return go;\n            }\n        });\n    }\n\n    async.applyEach = _applyEach(async.eachOf);\n    async.applyEachSeries = _applyEach(async.eachOfSeries);\n\n\n    async.forever = function (fn, callback) {\n        var done = only_once(callback || noop);\n        var task = ensureAsync(fn);\n        function next(err) {\n            if (err) {\n                return done(err);\n            }\n            task(next);\n        }\n        next();\n    };\n\n    function ensureAsync(fn) {\n        return _restParam(function (args) {\n            var callback = args.pop();\n            args.push(function () {\n                var innerArgs = arguments;\n                if (sync) {\n                    async.setImmediate(function () {\n                        callback.apply(null, innerArgs);\n                    });\n                } else {\n                    callback.apply(null, innerArgs);\n                }\n            });\n            var sync = true;\n            fn.apply(this, args);\n            sync = false;\n        });\n    }\n\n    async.ensureAsync = ensureAsync;\n\n    async.constant = _restParam(function(values) {\n        var args = [null].concat(values);\n        return function (callback) {\n            return callback.apply(this, args);\n        };\n    });\n\n    async.wrapSync =\n    async.asyncify = function asyncify(func) {\n        return _restParam(function (args) {\n            var callback = args.pop();\n            var result;\n            try {\n                result = func.apply(this, args);\n            } catch (e) {\n                return callback(e);\n            }\n            // if result is Promise object\n            if (_isObject(result) && typeof result.then === \"function\") {\n                result.then(function(value) {\n                    callback(null, value);\n                })[\"catch\"](function(err) {\n                    callback(err.message ? err : new Error(err));\n                });\n            } else {\n                callback(null, result);\n            }\n        });\n    };\n\n    // Node.js\n    if (typeof module === 'object' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","/**\n * Buffer module. Exports an appropriate version of Buffer for the current\n * platform.\n */\nimport buffer_core = require('./buffer_core');\nimport BufferCoreArray = require('./buffer_core_array');\nimport BufferCoreArrayBuffer = require('./buffer_core_arraybuffer');\nimport BufferCoreImageData = require('./buffer_core_imagedata');\nimport {StringUtil, FindUtil} from './string_util';\nimport {isArrayBuffer, isArrayBufferView} from './util';\n\n// BC implementations earlier in the array are preferred.\nvar BufferCorePreferences: buffer_core.BufferCoreImplementation[] = [\n  BufferCoreArrayBuffer,\n  BufferCoreImageData,\n  BufferCoreArray\n];\n\nvar PreferredBufferCore: buffer_core.BufferCoreImplementation = (function(): buffer_core.BufferCoreImplementation {\n  var i: number, bci: buffer_core.BufferCoreImplementation;\n  for (i = 0; i < BufferCorePreferences.length; i++) {\n    bci = BufferCorePreferences[i];\n    if (bci.isAvailable()) return bci;\n  }\n  // Should never happen; Array works in all browsers.\n  throw new Error(\"This browser does not support any available BufferCore implementations.\");\n})();\n\n/**\n * Checks integer writes.\n */\nfunction checkInt(buffer: NodeBuffer, value: number, offset: number, ext: number, max: number, min: number) {\n  if (value > max || value < min) {\n    throw new TypeError('value is out of bounds');\n  } else if (offset + ext > buffer.length) {\n    throw new RangeError('index out of range');\n  }\n}\n\n/**\n * Checks floating point writes.\n */\nfunction checkFloat(buffer: NodeBuffer, value: number, offset: number, ext: number) {\n  if (offset + ext > buffer.length) {\n    throw new RangeError('index out of range');\n  }\n}\n\n/**\n * Check offset into buffer.\n */\nfunction checkOffset(offset: number, ext: number, length: number): void {\n  if (offset + ext > length) {\n    throw new RangeError('index out of range');\n  }\n}\n\n/**\n * MAX_INT for various byte sizes.\n */\nconst enum MaxInt {\n  INT0 = 0,\n  INT8 = 0x7F,\n  INT16 = 0x7FFF,\n  INT24 = 0x7FFFFF,\n  INT32 = 0x7FFFFFFF,\n  INT40 = 0x7FFFFFFFFF,\n  INT48 = 0x7FFFFFFFFFFF\n}\n\n/**\n * MIN_INT for various byte sizes.\n */\nconst enum MinInt {\n  INT0 = 0,\n  INT8 = -0x80,\n  INT16 = -0x8000,\n  INT24 = -0x800000,\n  INT32 = -0x80000000,\n  INT40 = -0x8000000000,\n  INT48 = -0x800000000000\n}\n\n/**\n * MAX_UINT for various sizes.\n */\nconst enum MaxUInt {\n  INT0 = 0,\n  INT8 = 0xFF,\n  INT16 = 0xFFFF,\n  INT24 = 0xFFFFFF,\n  INT32 = 0xFFFFFFFF,\n  INT40 = 0xFFFFFFFFFF,\n  INT48 = 0xFFFFFFFFFFFF\n}\n\nvar byte2maxint: {[byte: number]: number} = {};\nbyte2maxint[0] = MaxInt.INT0;\nbyte2maxint[1] = MaxInt.INT8;\nbyte2maxint[2] = MaxInt.INT16;\nbyte2maxint[3] = MaxInt.INT24;\nbyte2maxint[4] = MaxInt.INT32;\nbyte2maxint[5] = MaxInt.INT40;\nbyte2maxint[6] = MaxInt.INT48;\nvar byte2minint: {[byte: number]: number} = {};\nbyte2minint[0] = MinInt.INT0;\nbyte2minint[1] = MinInt.INT8;\nbyte2minint[2] = MinInt.INT16;\nbyte2minint[3] = MinInt.INT24;\nbyte2minint[4] = MinInt.INT32;\nbyte2minint[5] = MinInt.INT40;\nbyte2minint[6] = MinInt.INT48;\nvar byte2maxuint: {[byte: number]: number} = {};\nbyte2maxuint[0] = MaxUInt.INT0;\nbyte2maxuint[1] = MaxUInt.INT8;\nbyte2maxuint[2] = MaxUInt.INT16;\nbyte2maxuint[3] = MaxUInt.INT24;\nbyte2maxuint[4] = MaxUInt.INT32;\nbyte2maxuint[5] = MaxUInt.INT40;\nbyte2maxuint[6] = MaxUInt.INT48;\n\n/**\n * We extend Node's buffer interface to account for differences in the browser\n * environment.\n */\nexport interface BFSBuffer extends NodeBuffer {\n  // It's not tractable to emulate array indexing by defining numeric properties\n  // for each index of the buffer, so we have getters/setters.\n  get(index: number): number;\n  set(index: number, value: number): void;\n  // Used by backends to get the backing data.\n  getBufferCore(): buffer_core.BufferCore;\n  // Used by backends in conjunction with getBufferCore() and the length\n  // property to determine which segment of the backing memory is applicable\n  // for a given operation.\n  getOffset(): number;\n  // Like Buffer.slice, but copies the Buffer contents.\n  sliceCopy(start?: number, end?: number): NodeBuffer\n}\n\n/**\n * Superset of the Buffer singleton described in node.d.ts.\n */\nexport interface BFSBufferImplementation {\n  new (ab: ArrayBuffer): NodeBuffer;\n  new (str: string, encoding?: string): NodeBuffer;\n  new (size: number): NodeBuffer;\n  new (array: any[]): NodeBuffer;\n  isBuffer(obj: any): obj is NodeBuffer;\n  byteLength(string: string, encoding?: string): number;\n  concat(list: NodeBuffer[], totalLength?: number): NodeBuffer;\n}\n\n/**\n * A JSONified Buffer object.\n */\nexport interface JSONBufferObject {\n  type: string;\n  data: number[];\n}\n\n/**\n * Emulates Node's Buffer API. Wraps a BufferCore object that is responsible\n * for actually writing/reading data from some data representation in memory.\n */\nexport class Buffer implements BFSBuffer {\n  // Note: This array property is *not* true, but it's required to satisfy\n  //       TypeScript typings.\n  // Note: DO NOT initialize any member properties up here! It will prevent\n  //       users from calling Buffer w/o `new`.\n  [idx: number]: number;\n  private data: buffer_core.BufferCore;\n  private offset: number;\n  public length: number;\n\n  /**\n   * Constructs a buffer.\n   * @param arg1 - Instantiate a buffer of the indicated size, or\n   *   from the indicated Array or String.\n   * @param [arg2=\"utf8\"] - Encoding to use if arg1 is a string\n   */\n  constructor (size: number);\n  constructor (data: any[]);\n  constructor (data: ArrayBufferView);\n  constructor (data: ArrayBuffer);\n  constructor (data: NodeBuffer);\n  constructor (data: JSONBufferObject);\n  constructor (data: string, encoding?: string);\n  constructor (data: buffer_core.BufferCore, start?: number, end?: number);\n  constructor (arg1: any, arg2: any = 'utf8', arg3?: number) {\n    var i: number;\n    // Node apparently allows you to construct buffers w/o 'new'.\n    if (!(this instanceof Buffer)) {\n      return new Buffer(arg1, arg2);\n    }\n    this.offset = 0;\n\n    if (arg1 instanceof buffer_core.BufferCoreCommon) {\n      // constructor (data: buffer_core.BufferCore, start?: number, end?: number)\n      this.data = <buffer_core.BufferCore> arg1;\n      var start = typeof arg2 === 'number' ? <number><any> arg2 : 0;\n      var end = typeof arg3 === 'number' ? <number> arg3 : this.data.getLength();\n      this.offset = start;\n      this.length = end - start;\n    } else if (typeof arg1 === 'number') {\n      // constructor (size: number);\n      if (arg1 !== (arg1 >>> 0)) {\n        throw new RangeError('Buffer size must be a uint32.');\n      }\n      this.length = arg1;\n      this.data = new PreferredBufferCore(arg1);\n    } else if (isArrayBufferView(arg1)) {\n      // constructor (data: ArrayBufferView);\n      this.data = new BufferCoreArrayBuffer(arg1);\n      this.length = arg1.byteLength;\n    } else if (isArrayBuffer(arg1)) {\n      // constructor (data: ArrayBuffer);\n      // Note: Can't do 'instanceof ArrayBuffer' in Safari in some cases. :|\n      this.data = new BufferCoreArrayBuffer(<ArrayBuffer> arg1);\n      this.length = arg1.byteLength;\n    } else if (arg1 instanceof Buffer) {\n      // constructor (data: Buffer);\n      var argBuff = <Buffer> arg1;\n      this.data = new PreferredBufferCore(arg1.length);\n      this.length = arg1.length;\n      argBuff.copy(this);\n    } else if (Array.isArray(arg1) || (arg1 != null && typeof arg1 === 'object' && typeof arg1[0] === 'number')) {\n      // constructor (data: number[]);\n      this.data = new PreferredBufferCore(arg1.length);\n      for (i = 0; i < arg1.length; i++) {\n        this.data.writeUInt8(i, arg1[i]);\n      }\n      this.length = arg1.length;\n    } else if (typeof arg1 === 'string') {\n      // constructor (data: string, encoding?: string);\n      this.length = Buffer.byteLength(arg1, arg2);\n      this.data = new PreferredBufferCore(this.length);\n      this.write(arg1, 0, this.length, arg2);\n    } else {\n      // constructor (data: {type: string; data: number[]}, encoding?: string)\n      if (arg1['type'] === 'Buffer' && Array.isArray(arg1['data'])) {\n        this.data = new PreferredBufferCore(arg1.data.length);\n        for (i = 0; i < arg1.data.length; i++) {\n          this.data.writeUInt8(i, arg1.data[i]);\n        }\n        this.length = arg1.data.length;\n      } else {\n        throw new Error(\"Invalid argument to Buffer constructor: \" + arg1);\n      }\n    }\n  }\n\n  /* TEST METHODS BEGIN */\n\n  public static getAvailableBufferCores(): buffer_core.BufferCoreImplementation[] {\n    return BufferCorePreferences.filter((bci) => bci.isAvailable());\n  }\n\n  public static getPreferredBufferCore(): buffer_core.BufferCoreImplementation {\n    return PreferredBufferCore;\n  }\n\n  public static setPreferredBufferCore(bci: buffer_core.BufferCoreImplementation) {\n    PreferredBufferCore = bci;\n  }\n\n  /* TEST METHODS END */\n\n  public getBufferCore(): buffer_core.BufferCore {\n    return this.data;\n  }\n\n  public getOffset(): number {\n    return this.offset;\n  }\n\n  /**\n   * **NONSTANDARD**: Set the octet at index. Emulates NodeJS buffer's index\n   * operation. Octet can be signed or unsigned.\n   * @param {number} index - the index to set the value at\n   * @param {number} value - the value to set at the given index\n   */\n  public set(index: number, value: number): number {\n    // In Node, the following happens:\n    // buffer[0] = -1;\n    // buffer[0]; // 255\n    if (value < 0) {\n      return this.writeInt8(value, index);\n    } else {\n      return this.writeUInt8(value, index);\n    }\n  }\n\n  /**\n   * **NONSTANDARD**: Get the octet at index.\n   * @param {number} index - index to fetch the value at\n   * @return {number} the value at the given index\n   */\n  public get(index: number): number {\n    return this.readUInt8(index);\n  }\n\n  /**\n   * Writes string to the buffer at offset using the given encoding.\n   * If buffer did not contain enough space to fit the entire string, it will\n   * write a partial amount of the string.\n   * @param {string} str - Data to be written to buffer\n   * @param {number} [offset=0] - Offset in the buffer to write to\n   * @param {number} [length=this.length] - Number of bytes to write\n   * @param {string} [encoding=utf8] - Character encoding\n   * @return {number} Number of octets written.\n   */\n  public write(str: string, offset = 0, length = this.length, encoding = 'utf8'): number {\n    // I hate Node's optional arguments.\n    if (typeof offset === 'string') {\n      // 'str' and 'encoding' specified\n      encoding = \"\" + offset;\n      offset = 0;\n      length = this.length;\n    } else if (typeof length === 'string') {\n      // 'str', 'offset', and 'encoding' specified\n      encoding = \"\" + length;\n      length = this.length;\n    }\n    // Check for invalid offsets.\n    if (offset > this.length || offset < 0) {\n      throw new RangeError(\"Invalid offset.\");\n    }\n    var strUtil = FindUtil(encoding);\n    // Are we trying to write past the buffer?\n    length = length + offset > this.length ? this.length - offset : length;\n    offset += this.offset;\n    return strUtil.str2byte(str,\n      // Avoid creating a slice unless it's needed.\n      offset === 0 && length === this.length ? this : new Buffer(this.data, offset, length + offset));\n  }\n\n  /**\n   * Decodes a portion of the Buffer into a String.\n   * @param {string} encoding - Character encoding to decode to\n   * @param {number} [start=0] - Start position in the buffer\n   * @param {number} [end=this.length] - Ending position in the buffer\n   * @return {string} A string from buffer data encoded with encoding, beginning\n   *   at start, and ending at end.\n   */\n  public toString(encoding = 'utf8', start = 0, end = this.length): string {\n    if (!(start <= end)) {\n      throw new Error(\"Invalid start/end positions: \" + start + \" - \" + end);\n    }\n    if (start === end) {\n      return '';\n    }\n    if (end > this.length) {\n      end = this.length;\n    }\n    var strUtil = FindUtil(encoding);\n    // Get the string representation of the given slice. Create a new buffer\n    // if need be.\n    return strUtil.byte2str(start === 0 && end === this.length ? this : new Buffer(this.data, start + this.offset, end + this.offset));\n  }\n\n  /**\n   * Returns a JSON-representation of the Buffer instance, which is identical to\n   * the output for JSON Arrays. JSON.stringify implicitly calls this function\n   * when stringifying a Buffer instance.\n   * @return {object} An object that can be used for JSON stringification.\n   */\n  public toJSON(): JSONBufferObject {\n    // Construct a byte array for the JSON 'data'.\n    var len = this.length;\n    var byteArr = new Array(len);\n    for (var i = 0; i < len; i++) {\n      byteArr[i] = this.readUInt8(i);\n    }\n    return {\n      type: 'Buffer',\n      data: byteArr\n    };\n  }\n\n  /**\n   * Returns a string with the first 50 hexadecimal values of the Buffer.\n   */\n  public inspect(): string {\n    var digits: string[] = [], i: number, len = this.length < INSPECT_MAX_BYTES ? this.length : INSPECT_MAX_BYTES;\n    for (i = 0; i < len; i++) {\n      digits.push(this.readUInt8(i).toString(16));\n    }\n    return `<Buffer ${digits.join(\" \")}${this.length > len ? \" ... \" : \"\"}>`;\n  }\n\n  /**\n   * Converts the buffer into an ArrayBuffer. Will attempt to use an underlying\n   * ArrayBuffer, but will need to copy the data if the underlaying object is an\n   * ArrayBufferView or not an ArrayBuffer.\n   */\n  public toArrayBuffer(): ArrayBuffer {\n    var buffCore = this.getBufferCore();\n    if (buffCore instanceof BufferCoreArrayBuffer) {\n      var dv = buffCore.getDataView(),\n        ab = dv.buffer;\n      // Ensure 1-1 mapping from AB to Buffer.\n      if (this.offset === 0 && dv.byteOffset === 0 && dv.byteLength === ab.byteLength && this.length === dv.byteLength) {\n        return ab;\n      } else {\n        return ab.slice(this.offset + dv.byteOffset, this.length);\n      }\n    } else {\n      var ab = new ArrayBuffer(this.length),\n        newBuff = new Buffer(ab);\n      this.copy(newBuff, 0, 0, this.length);\n      return ab;\n    }\n  }\n\n  /**\n   * Converts the buffer into a Uint8Array. Will attempt to use an underlying\n   * ArrayBuffer, but will need to copy the data if the Buffer is not backed\n   * by an ArrayBuffer.\n   */\n  public toUint8Array(): Uint8Array {\n    var buffCore = this.getBufferCore();\n    if (buffCore instanceof BufferCoreArrayBuffer) {\n      var dv = buffCore.getDataView(),\n        ab = dv.buffer,\n        offset = this.offset + dv.byteOffset,\n        length = this.length;\n\n      return new Uint8Array(ab).subarray(offset, offset + length);\n    } else {\n      var ab = new ArrayBuffer(this.length),\n        newBuff = new Buffer(ab);\n      this.copy(newBuff, 0, 0, this.length);\n      return new Uint8Array(ab);\n    }\n  }\n\n  /**\n   * Operates similar to Array#indexOf(). Accepts a String, Buffer or Number.\n   * Strings are interpreted as UTF8. Buffers will use the entire buffer. So in order\n   * to compare a partial Buffer use Buffer#slice(). Numbers can range from 0 to 255.\n   */\n  public indexOf(value: string | NodeBuffer | number, byteOffset: number = 0): number {\n    var normalizedValue: NodeBuffer;\n    if (typeof(value) === 'string') {\n      normalizedValue = new Buffer(<string> value, 'utf8');\n    } else if (Buffer.isBuffer(value)) {\n      normalizedValue = value;\n    } else if (typeof(value) === 'number') {\n      normalizedValue = new Buffer([<number> value]);\n    } else {\n      throw new TypeError(`indexOf only operates on strings, buffers, and numbers.`);\n    }\n\n    // Node's normalization code.\n    if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n    byteOffset >>= 0;\n\n    // Negative offsets are from the end of the array.\n    if (byteOffset < 0) {\n      byteOffset = this.length + byteOffset;\n      if (byteOffset < 0) {\n        // If the calculated index is less than 0, then the whole array will be searched.\n        byteOffset = 0;\n      }\n    }\n\n    var valOffset = 0, currentVal: number, valLen = normalizedValue.length,\n      bufLen = this.length;\n    // Edge-case: Can't indexOf with zero-length data.\n    if (valLen === 0) {\n      return -1;\n    }\n\n    while (valOffset < valLen && byteOffset < bufLen) {\n      if (normalizedValue.readUInt8(valOffset) == this.readUInt8(byteOffset)) {\n        valOffset++;\n      } else {\n        // Doesn't match. Restart search.\n        valOffset = 0;\n      }\n      byteOffset++;\n    }\n\n    if (valOffset == valLen) {\n      return byteOffset - valLen;\n    } else {\n      return -1;\n    }\n  }\n\n  /**\n   * Does copy between buffers. The source and target regions can be overlapped.\n   * All values passed that are undefined/NaN or are out of bounds are set equal\n   * to their respective defaults.\n   * @param {Buffer} target - Buffer to copy into\n   * @param {number} [targetStart=0] - Index to start copying to in the targetBuffer\n   * @param {number} [sourceStart=0] - Index in this buffer to start copying from\n   * @param {number} [sourceEnd=this.length] - Index in this buffer stop copying at\n   * @return {number} The number of bytes copied into the target buffer.\n   */\n  public copy(target: NodeBuffer, targetStart = 0, sourceStart = 0, sourceEnd = this.length): number {\n    if (sourceStart < 0) {\n      throw new RangeError('sourceStart out of bounds');\n    }\n    if (sourceEnd < 0) {\n      throw new RangeError('sourceEnd out of bounds');\n    }\n    if (targetStart < 0) {\n      throw new RangeError(\"targetStart out of bounds\");\n    }\n\n    if (sourceEnd <= sourceStart || sourceStart >= this.length || targetStart > target.length) {\n      return 0;\n    }\n\n    var bytesCopied = Math.min(sourceEnd - sourceStart, target.length - targetStart, this.length - sourceStart);\n\n    // Fast path.\n    if (target instanceof Buffer && this.data instanceof BufferCoreArrayBuffer) {\n      let targetCore = target.getBufferCore();\n      if (targetCore instanceof BufferCoreArrayBuffer) {\n        return (<BufferCoreArrayBuffer> this.data).copyTo(targetCore, targetStart + target.offset, sourceStart + this.offset, sourceStart + bytesCopied + this.offset);\n      }\n    }\n\n    // Copy as many 32-bit chunks as possible.\n    // TODO: Alignment.\n    for (let i = 0; i < bytesCopied - 3; i += 4) {\n      target.writeInt32LE(this.readInt32LE(sourceStart + i), targetStart + i);\n    }\n    // Copy any remaining bytes, if applicable\n    for (let i = bytesCopied & 0xFFFFFFFC; i < bytesCopied; i++) {\n      target.writeUInt8(this.readUInt8(sourceStart + i), targetStart + i);\n    }\n    return bytesCopied;\n  }\n\n  /**\n   * Returns a slice of this buffer.\n   * @param {number} [start=0] - Index to start slicing from\n   * @param {number} [end=this.length] - Index to stop slicing at\n   * @return {Buffer} A new buffer which references the same\n   *   memory as the old, but offset and cropped by the start (defaults to 0) and\n   *   end (defaults to buffer.length) indexes. Negative indexes start from the end\n   *   of the buffer.\n   */\n  public slice(start = 0, end = this.length): NodeBuffer {\n    start = start >> 0;\n    end = end >> 0;\n    // Translate negative indices to positive ones.\n    if (start < 0) {\n      start += this.length;\n      if (start < 0) {\n        start = 0;\n      }\n    }\n    if (end < 0) {\n      end += this.length;\n      if (end < 0) {\n        end = 0;\n      }\n    }\n    if (end > this.length) {\n      end = this.length;\n    }\n    if (start > end) {\n      start = end;\n    }\n\n    // Sanity check.\n    if (start < 0 || end < 0 || start > this.length || end > this.length) {\n      throw new Error(\"Invalid slice indices.\");\n    }\n    // Create a new buffer backed by the same BufferCore.\n    return new Buffer(this.data, start + this.offset, end + this.offset);\n  }\n\n  /**\n   * [NONSTANDARD] A copy-based version of Buffer.slice.\n   */\n  public sliceCopy(start: number = 0, end: number = this.length): NodeBuffer {\n    // Translate negative indices to positive ones.\n    if (start < 0) {\n      start += this.length;\n      if (start < 0) {\n        start = 0;\n      }\n    }\n    if (end < 0) {\n      end += this.length;\n      if (end < 0) {\n        end = 0;\n      }\n    }\n    if (end > this.length) {\n      end = this.length;\n    }\n    if (start > end) {\n      start = end;\n    }\n\n    // Sanity check.\n    if (start < 0 || end < 0 || start >= this.length || end > this.length) {\n      throw new Error(\"Invalid slice indices.\");\n    }\n\n    // Copy the BufferCore.\n    return new Buffer(this.data.copy(start + this.offset, end + this.offset));\n  }\n\n  /**\n   * Fills the buffer with the specified value. If the offset and end are not\n   * given it will fill the entire buffer.\n   * @param {(string|number)} value - The value to fill the buffer with\n   * @param {number} [offset=0]\n   * @param {number} [end=this.length]\n   */\n  public fill(value: any, offset = 0, end = this.length): NodeBuffer {\n    var i: number;\n    offset = offset >> 0;\n    end = end >> 0;\n\n    if (offset < 0 || end > this.length) {\n      throw new RangeError('out of range index');\n    } else if (end <= offset) {\n      return this;\n    }\n\n    if (typeof value !== 'string') {\n      // Coerces various things to numbers. Node does this.\n      value = value >>> 0;\n    } else if (value.length === 1) {\n      var code = value.charCodeAt(0);\n      if (code < 256) {\n        value = code;\n      }\n    }\n\n    if (typeof value === 'number') {\n      offset += this.offset;\n      end += this.offset;\n      this.data.fill(value, offset, end);\n    } else if (value.length > 0) {\n      var byteLen = Buffer.byteLength(value, 'utf8'),\n        lastBulkWrite = end - byteLen;\n      while (offset < lastBulkWrite) {\n        this.write(value, offset, byteLen, 'utf8');\n        offset += byteLen;\n      }\n      if (offset < end) {\n        this.write(value, offset, end - offset, 'utf8');\n      }\n    }\n    return this;\n  }\n\n  public readUIntLE(offset: number, byteLength: number, noAssert = false): number {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n    offset += this.offset;\n    var value: number = 0;\n    switch (byteLength) {\n      case 1:\n        return this.data.readUInt8(offset);\n      case 2:\n        return this.data.readUInt16LE(offset);\n      case 3:\n        return this.data.readUInt8(offset) | (this.data.readUInt16LE(offset + 1) << 8);\n      case 4:\n        return this.data.readUInt32LE(offset);\n      case 6:\n        // Shift right by 40 bits.\n        // (Note: We shift by 23 to avoid introducing a sign bit!)\n        value += (this.data.readUInt8(offset + 5) << 23) * 0x20000;\n        // FALL-THRU\n      case 5:\n        // Shift right by 32 bits.\n        value += (this.data.readUInt8(offset + 4) << 23) * 0x200;\n        return value + this.data.readUInt32LE(offset);\n      default:\n        throw new Error(`Invalid byteLength: ${byteLength}`);\n    }\n  }\n\n  public readUIntBE(offset: number, byteLength: number, noAssert = false): number {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n    offset += this.offset;\n    var value: number = 0;\n    switch (byteLength) {\n      case 1:\n        return this.data.readUInt8(offset);\n      case 2:\n        return this.data.readUInt16BE(offset);\n      case 3:\n        return this.data.readUInt8(offset + 2) | (this.data.readUInt16BE(offset) << 8);\n      case 4:\n        return this.data.readUInt32BE(offset);\n      case 6:\n        // Shift right by 40 bits.\n        // (Note: We shift by 23 to avoid introducing a sign bit!)\n        value += (this.data.readUInt8(offset) << 23) * 0x20000;\n        offset++;\n        // FALL-THRU\n      case 5:\n        // Shift right by 32 bits.\n        value += (this.data.readUInt8(offset) << 23) * 0x200;\n        return value + this.data.readUInt32BE(offset + 1);\n      default:\n        throw new Error(`Invalid byteLength: ${byteLength}`);\n    }\n  }\n\n  public readIntLE(offset: number, byteLength: number, noAssert = false): number {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n    offset += this.offset;\n    switch (byteLength) {\n      case 1:\n        return this.data.readInt8(offset);\n      case 2:\n        return this.data.readInt16LE(offset);\n      case 3:\n        return this.data.readUInt8(offset) | (this.data.readInt16LE(offset + 1) << 8);\n      case 4:\n        return this.data.readInt32LE(offset);\n      case 6:\n        // Shift right by 40 bits.\n        // (Note: We shift by 23 to avoid introducing a sign bit!)\n        return ((this.data.readInt8(offset + 5) << 23) * 0x20000) + this.readUIntLE(offset - this.offset, 5, noAssert);\n      case 5:\n        // Shift right by 32 bits.\n        return ((this.data.readInt8(offset + 4) << 23) * 0x200) + this.data.readUInt32LE(offset);\n      default:\n        throw new Error(`Invalid byteLength: ${byteLength}`);\n    }\n  }\n\n  public readIntBE(offset: number, byteLength: number, noAssert = false): number {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n    offset += this.offset;\n    switch (byteLength) {\n      case 1:\n        return this.data.readInt8(offset);\n      case 2:\n        return this.data.readInt16BE(offset);\n      case 3:\n        return this.data.readUInt8(offset + 2) | (this.data.readInt16BE(offset) << 8);\n      case 4:\n        return this.data.readInt32BE(offset);\n      case 6:\n        // Shift right by 40 bits.\n        // (Note: We shift by 23 to avoid introducing a sign bit!)\n        return ((this.data.readInt8(offset) << 23) * 0x20000) + this.readUIntBE(offset - this.offset + 1, 5, noAssert);\n      case 5:\n        // Shift right by 32 bits.\n        return ((this.data.readInt8(offset) << 23) * 0x200) + this.data.readUInt32BE(offset + 1);\n      default:\n        throw new Error(`Invalid byteLength: ${byteLength}`);\n    }\n  }\n\n  public readUInt8(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 1, this.length);\n    }\n    offset += this.offset;\n    return this.data.readUInt8(offset);\n  }\n\n  public readUInt16LE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 2, this.length);\n    }\n    offset += this.offset;\n    return this.data.readUInt16LE(offset);\n  }\n\n  public readUInt16BE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 2, this.length);\n    }\n    offset += this.offset;\n    return this.data.readUInt16BE(offset);\n  }\n\n  public readUInt32LE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 4, this.length);\n    }\n    offset += this.offset;\n    return this.data.readUInt32LE(offset);\n  }\n\n  public readUInt32BE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 4, this.length);\n    }\n    offset += this.offset;\n    return this.data.readUInt32BE(offset);\n  }\n\n  public readInt8(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 1, this.length);\n    }\n    offset += this.offset;\n    return this.data.readInt8(offset);\n  }\n\n  public readInt16LE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 2, this.length);\n    }\n    offset += this.offset;\n    return this.data.readInt16LE(offset);\n  }\n\n  public readInt16BE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 2, this.length);\n    }\n    offset += this.offset;\n    return this.data.readInt16BE(offset);\n  }\n\n  public readInt32LE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 4, this.length);\n    }\n    offset += this.offset;\n    return this.data.readInt32LE(offset);\n  }\n\n  public readInt32BE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 4, this.length);\n    }\n    offset += this.offset;\n    return this.data.readInt32BE(offset);\n  }\n\n  public readFloatLE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 4, this.length);\n    }\n    offset += this.offset;\n    return this.data.readFloatLE(offset);\n  }\n\n  public readFloatBE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 4, this.length);\n    }\n    offset += this.offset;\n    return this.data.readFloatBE(offset);\n  }\n\n  public readDoubleLE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 8, this.length);\n    }\n    offset += this.offset;\n    return this.data.readDoubleLE(offset);\n  }\n\n  public readDoubleBE(offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkOffset(offset, 8, this.length);\n    }\n    offset += this.offset;\n    return this.data.readDoubleBE(offset);\n  }\n\n  public writeUIntLE(value: number, offset: number, byteLength: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, byteLength, byte2maxuint[byteLength], 0);\n    }\n    var rv = offset + byteLength;\n    offset += this.offset;\n    switch (byteLength) {\n      case 1:\n        this.data.writeUInt8(offset, value);\n        break;\n      case 2:\n        this.data.writeUInt16LE(offset, value);\n        break;\n      case 3:\n        this.data.writeUInt8(offset, value & 0xFF);\n        this.data.writeUInt16LE(offset + 1, value >> 8);\n        break;\n      case 4:\n        this.data.writeUInt32LE(offset, value);\n        break;\n      case 6:\n        this.data.writeUInt8(offset, value & 0xFF);\n        // \"Bit shift\", since we're over 32-bits.\n        value = Math.floor(value / 256);\n        offset++;\n        // FALL-THRU\n      case 5:\n        this.data.writeUInt8(offset, value & 0xFF);\n        // \"Bit shift\", since we're over 32-bits.\n        value = Math.floor(value / 256);\n        this.data.writeUInt32LE(offset + 1, value);\n        break;\n      default:\n        throw new Error(`Invalid byteLength: ${byteLength}`);\n    }\n    return rv;\n  }\n\n  public writeUIntBE(value: number, offset: number, byteLength: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, byteLength, byte2maxuint[byteLength], 0);\n    }\n    var rv = offset + byteLength;\n    offset += this.offset;\n    switch (byteLength) {\n      case 1:\n        this.data.writeUInt8(offset, value);\n        break;\n      case 2:\n        this.data.writeUInt16BE(offset, value);\n        break;\n      case 3:\n        this.data.writeUInt8(offset + 2, value & 0xFF);\n        this.data.writeUInt16BE(offset, value >> 8);\n        break;\n      case 4:\n        this.data.writeUInt32BE(offset, value);\n        break;\n      case 6:\n        this.data.writeUInt8(offset + 5, value & 0xFF);\n        // \"Bit shift\", since we're over 32-bits.\n        value = Math.floor(value / 256);\n        // FALL-THRU\n      case 5:\n        this.data.writeUInt8(offset + 4, value & 0xFF);\n        // \"Bit shift\", since we're over 32-bits.\n        value = Math.floor(value / 256);\n        this.data.writeUInt32BE(offset, value);\n        break;\n      default:\n        throw new Error(`Invalid byteLength: ${byteLength}`);\n    }\n    return rv;\n  }\n\n  public writeIntLE(value: number, offset: number, byteLength: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, byteLength, byte2maxint[byteLength], byte2minint[byteLength]);\n    }\n    var rv = offset + byteLength;\n    offset += this.offset;\n    switch (byteLength) {\n      case 1:\n        this.data.writeInt8(offset, value);\n        break;\n      case 2:\n        this.data.writeInt16LE(offset, value);\n        break;\n      case 3:\n        this.data.writeUInt8(offset, value & 0xFF);\n        this.data.writeInt16LE(offset + 1, value >> 8);\n        break;\n      case 4:\n        this.data.writeInt32LE(offset, value);\n        break;\n      case 6:\n        this.data.writeUInt8(offset, value & 0xFF);\n        // \"Bit shift\", since we're over 32-bits.\n        value = Math.floor(value / 256);\n        offset++;\n        // FALL-THRU\n      case 5:\n        this.data.writeUInt8(offset, value & 0xFF);\n        // \"Bit shift\", since we're over 32-bits.\n        value = Math.floor(value / 256);\n        this.data.writeInt32LE(offset + 1, value);\n        break;\n      default:\n        throw new Error(`Invalid byteLength: ${byteLength}`);\n    }\n    return rv;\n  }\n\n  public writeIntBE(value: number, offset: number, byteLength: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, byteLength, byte2maxint[byteLength], byte2minint[byteLength]);\n    }\n    var rv = offset + byteLength;\n    offset += this.offset;\n    switch (byteLength) {\n      case 1:\n        this.data.writeInt8(offset, value);\n        break;\n      case 2:\n        this.data.writeInt16BE(offset, value);\n        break;\n      case 3:\n        this.data.writeUInt8(offset + 2, value & 0xFF);\n        this.data.writeInt16BE(offset, value >> 8);\n        break;\n      case 4:\n        this.data.writeInt32BE(offset, value);\n        break;\n      case 6:\n        this.data.writeUInt8(offset + 5, value & 0xFF);\n        // \"Bit shift\", since we're over 32-bits.\n        value = Math.floor(value / 256);\n        // FALL-THRU\n      case 5:\n        this.data.writeUInt8(offset + 4, value & 0xFF);\n        // \"Bit shift\", since we're over 32-bits.\n        value = Math.floor(value / 256);\n        this.data.writeInt32BE(offset, value);\n        break;\n      default:\n        throw new Error(`Invalid byteLength: ${byteLength}`);\n    }\n    return rv;\n  }\n\n  public writeUInt8(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 1, MaxUInt.INT8, 0);\n    }\n    this.data.writeUInt8(offset + this.offset, value);\n    return offset + 1;\n  }\n\n  public writeUInt16LE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 2, MaxUInt.INT16, 0);\n    }\n    this.data.writeUInt16LE(offset + this.offset, value);\n    return offset + 2;\n  }\n\n  public writeUInt16BE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 2, MaxUInt.INT16, 0);\n    }\n    this.data.writeUInt16BE(offset + this.offset, value);\n    return offset + 2;\n  }\n\n  public writeUInt32LE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 4, MaxUInt.INT32, 0);\n    }\n    this.data.writeUInt32LE(offset + this.offset, value);\n    return offset + 4;\n  }\n\n  public writeUInt32BE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 4, MaxUInt.INT32, 0);\n    }\n    this.data.writeUInt32BE(offset + this.offset, value);\n    return offset + 4;\n  }\n\n  public writeInt8(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 1, MaxInt.INT8, MinInt.INT8);\n    }\n    this.data.writeInt8(offset + this.offset, value);\n    return offset + 1;\n  }\n\n  public writeInt16LE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 2, MaxInt.INT16, MinInt.INT16);\n    }\n    this.data.writeInt16LE(offset + this.offset, value);\n    return offset + 2;\n  }\n\n  public writeInt16BE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 2, MaxInt.INT16, MinInt.INT16);\n    }\n    this.data.writeInt16BE(offset + this.offset, value);\n    return offset + 2;\n  }\n\n  public writeInt32LE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 4, MaxInt.INT32, MinInt.INT32);\n    }\n    this.data.writeInt32LE(offset + this.offset, value);\n    return offset + 4;\n  }\n\n  public writeInt32BE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkInt(this, value, offset, 4, MaxInt.INT32, MinInt.INT32);\n    }\n    this.data.writeInt32BE(offset + this.offset, value);\n    return offset + 4;\n  }\n\n  public writeFloatLE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkFloat(this, value, offset, 4);\n    }\n    this.data.writeFloatLE(offset + this.offset, value);\n    return offset + 4;\n  }\n\n  public writeFloatBE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkFloat(this, value, offset, 4);\n    }\n    this.data.writeFloatBE(offset + this.offset, value);\n    return offset + 4;\n  }\n\n  public writeDoubleLE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkFloat(this, value, offset, 8);\n    }\n    this.data.writeDoubleLE(offset + this.offset, value);\n    return offset + 8;\n  }\n\n  public writeDoubleBE(value: number, offset: number, noAssert = false): number {\n    offset = offset >>> 0;\n    if (!noAssert) {\n      checkFloat(this, value, offset, 8);\n    }\n    this.data.writeDoubleBE(offset + this.offset, value);\n    return offset + 8;\n  }\n\n  ///**************************STATIC METHODS********************************///\n\n  /**\n   * Checks if enc is a valid string encoding type.\n   * @param {string} enc - Name of a string encoding type.\n   * @return {boolean} Whether or not enc is a valid encoding type.\n   */\n  public static isEncoding(enc: string): boolean {\n    try {\n      FindUtil(enc);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  public static compare(a: NodeBuffer, b: NodeBuffer): number {\n    if (a === b) {\n      return 0;\n    } else {\n      var i: number,\n        aLen = a.length,\n        bLen = b.length,\n        cmpLength = Math.min(aLen, bLen),\n        u1: number, u2: number;\n      for (i = 0; i < cmpLength; i++) {\n        u1 = a.readUInt8(i);\n        u2 = b.readUInt8(i);\n        if (u1 !== u2) {\n          return u1 > u2 ? 1 : -1;\n        }\n      }\n      if (aLen === bLen) {\n        return 0;\n      } else {\n        return aLen > bLen ? 1 : -1;\n      }\n    }\n  }\n\n  /**\n   * Tests if obj is a Buffer.\n   * @param {object} obj - An arbitrary object\n   * @return {boolean} True if this object is a Buffer.\n   */\n  public static isBuffer(obj: any): obj is NodeBuffer {\n    return obj instanceof Buffer;\n  }\n\n  /**\n   * Gives the actual byte length of a string. This is not the same as\n   * String.prototype.length since that returns the number of characters in a\n   * string.\n   * @param {string} str - The string to get the byte length of\n   * @param {string} [encoding=utf8] - Character encoding of the string\n   * @return {number} The number of bytes in the string\n   */\n  public static byteLength(str: string, encoding: string = 'utf8'): number {\n    var strUtil: StringUtil;\n    try {\n      strUtil = FindUtil(encoding);\n    } catch (e) {\n      // Default to UTF8.\n      strUtil = FindUtil('utf8');\n    }\n    if (typeof(str) !== 'string') {\n      str = \"\" + str;\n    }\n    return strUtil.byteLength(str);\n  }\n\n  /**\n   * Returns a buffer which is the result of concatenating all the buffers in the\n   * list together.\n   * If the list has no items, or if the totalLength is 0, then it returns a\n   * zero-length buffer.\n   * If the list has exactly one item, then the first item of the list is\n   * returned.\n   * If the list has more than one item, then a new Buffer is created.\n   * If totalLength is not provided, it is read from the buffers in the list.\n   * However, this adds an additional loop to the function, so it is faster to\n   * provide the length explicitly.\n   * @param {Buffer[]} list - List of Buffer objects to concat\n   * @param {number} [totalLength] - Total length of the buffers when concatenated\n   * @return {Buffer}\n   */\n  public static concat(list: NodeBuffer[], totalLength?: number): NodeBuffer {\n    var item: NodeBuffer;\n    if (list.length === 0 || totalLength === 0) {\n      return new Buffer(0);\n    } else {\n      if (totalLength === undefined) {\n        // Calculate totalLength\n        totalLength = 0;\n        for (var i = 0; i < list.length; i++) {\n          item = list[i];\n          if (!Buffer.isBuffer(item)) {\n            throw new TypeError(`Concat only operates on Buffer objects.`);\n          }\n          totalLength += item.length;\n        }\n      }\n      var buf = new Buffer(totalLength);\n      var curPos = 0;\n      for (var j = 0; j < list.length; j++) {\n        item = list[j];\n        if (!Buffer.isBuffer(item)) {\n          throw new TypeError(`Concat only operates on Buffer objects.`);\n        }\n        curPos += item.copy(buf, curPos);\n      }\n      return buf;\n    }\n  }\n\n  /**\n   * Returns a boolean of whether this and otherBuffer have the same bytes.\n   */\n  public equals(buffer: NodeBuffer): boolean {\n    if (Buffer.isBuffer(buffer)) {\n      var i: number;\n      if (buffer.length !== this.length) {\n        return false;\n      } else {\n        // TODO: Bigger strides.\n        for (i = 0; i < this.length; i++) {\n          if (this.readUInt8(i) !== buffer.readUInt8(i)) {\n            return false;\n          }\n        }\n        return true;\n      }\n    } else {\n      throw new TypeError(`Argument must be a buffer.`);\n    }\n  }\n\n  /**\n   * Returns a number indicating whether this comes before or after or is\n   * the same as the otherBuffer in sort order.\n   */\n  public compare(buffer: NodeBuffer): number {\n    return Buffer.compare(this, buffer);\n  }\n}\n\n// Type-check the class.\nvar _: BFSBufferImplementation = Buffer;\n\n/**\n * Emulation of Node's SlowBuffer. We don't differentiate between the two.\n */\nexport class SlowBuffer extends Buffer implements NodeBuffer {\n  constructor (length: any, arg2?: any, arg3?: number) {\n    // Logic copied from Node; its constructor is simpler.\n    super(+length != length ? 0 : +length);\n    // Node apparently allows you to construct buffers w/o 'new'.\n    if (!(this instanceof SlowBuffer)) {\n      return new SlowBuffer(length, arg2, arg3);\n    }\n  }\n\n  public static isBuffer(obj: any): obj is NodeBuffer {\n    return Buffer.isBuffer(obj);\n  }\n\n  public static byteLength(str: string, encoding?: string): number {\n    return Buffer.byteLength(str, encoding);\n  }\n\n  public static concat(list: NodeBuffer[], totalLength?: number): NodeBuffer {\n    return Buffer.concat(list, totalLength);\n  }\n}\n// Type-check the class.\n_ = SlowBuffer;\n\n/**\n * Determines how many bytes to print via inspect().\n */\nexport var INSPECT_MAX_BYTES: number = 50;\n","/**\n * !!!NOTE: This file should not depend on any other file!!!\n *\n * Buffers are referenced everywhere, so it can cause a circular dependency.\n */\n\nvar FLOAT_POS_INFINITY = Math.pow(2, 128);\nvar FLOAT_NEG_INFINITY = -1 * FLOAT_POS_INFINITY;\nvar FLOAT_POS_INFINITY_AS_INT = 0x7F800000;\nvar FLOAT_NEG_INFINITY_AS_INT = -8388608;\nvar FLOAT_NaN_AS_INT = 0x7fc00000;\n\n/**\n * The core data-writing and reading methods of any buffer.\n */\nexport interface BufferCore {\n  /**\n   * Get the size of this buffer core, in bytes.\n   */\n  getLength(): number;\n  /**\n   * Writes bottom 8 bits of the given integer at the provided index.\n   */\n  writeInt8(i: number, data: number): void;\n  /**\n   * Writes bottom 16 bits of the given integer at the provided index.\n   * Little endian.\n   */\n  writeInt16LE(i: number, data: number): void;\n  /**\n   * Writes bottom 16 bits of the given integer at the provided index.\n   * Big endian.\n   */\n  writeInt16BE(i: number, data: number): void;\n  /**\n   * Writes all 32 bits of the given integer at the provided index.\n   * Little endian.\n   */\n  writeInt32LE(i: number, data: number): void;\n  /**\n   * Writes all 32 bits of the given integer at the provided index.\n   * Big endian.\n   */\n  writeInt32BE(i: number, data: number): void;\n  /**\n   * Writes the number as an 8 bit unsigned integer.\n   */\n  writeUInt8(i: number, data: number): void;\n  /**\n   * Writes the number as a 16 bit unsigned integer.\n   * Little endian.\n   */\n  writeUInt16LE(i: number, data: number): void;\n  /**\n   * Writes the number as a 16 bit unsigned integer.\n   * Big endian.\n   */\n  writeUInt16BE(i: number, data: number): void;\n  /**\n   * Writes the number as a 32 bit unsigned integer.\n   * Little endian.\n   */\n  writeUInt32LE(i: number, data: number): void;\n  /**\n   * Writes the number as a 32 bit unsigned integer.\n   * Big endian.\n   */\n  writeUInt32BE(i: number, data: number): void;\n  /**\n   * Writes the number as a 32-bit float.\n   * Little endian.\n   */\n  writeFloatLE(i: number, data: number): void;\n  /**\n   * Writes the number as a 32-bit float.\n   * Big endian.\n   */\n  writeFloatBE(i: number, data: number): void;\n  /**\n   * Writes the number as a 64-bit float.\n   * Little endian.\n   */\n  writeDoubleLE(i: number, data: number): void;\n  /**\n   * Writes the number as a 64-bit float.\n   * Big endian.\n   */\n  writeDoubleBE(i: number, data: number): void;\n  /**\n   * Reads the byte at the given index.\n   */\n  readInt8(i: number): number;\n  /**\n   * Reads the two bytes at the given index (little endian).\n   */\n  readInt16LE(i: number): number;\n  /**\n   * Reads the two bytes at the given index (big endian).\n   */\n  readInt16BE(i: number): number;\n  /**\n   * Reads the four bytes at the given index (little endian).\n   */\n  readInt32LE(i: number): number;\n  /**\n   * Reads the four bytes at the given index (big endian).\n   */\n  readInt32BE(i: number): number;\n  /**\n   * Reads the byte at the given index as an unsigned integer.\n   */\n  readUInt8(i: number): number;\n  /**\n   * Reads the two bytes at the given index as an unsigned integer (little endian).\n   */\n  readUInt16LE(i: number): number;\n  /**\n   * Reads the two bytes at the given index as an unsigned integer (big endian).\n   */\n  readUInt16BE(i: number): number;\n  /**\n   * Reads the four bytes at the given index as an unsigned integer (little endian).\n   */\n  readUInt32LE(i: number): number;\n  /**\n   * Reads the four bytes at the given index as an unsigned integer (big endian).\n   */\n  readUInt32BE(i: number): number;\n  /**\n   * Reads a 32-bit floating point number at the given index (little endian).\n   */\n  readFloatLE(i: number): number;\n  /**\n   * Reads a 32-bit floating point number at the given index (big endian).\n   */\n  readFloatBE(i: number): number;\n  /**\n   * Reads a 64-bit floating point number at the given index (little endian).\n   */\n  readDoubleLE(i: number): number;\n  /**\n   * Reads a 64-bit floating point number at the given index (big endian).\n   */\n  readDoubleBE(i: number): number;\n  /**\n   * Copies the contents of the buffer core, from start to end, into a new\n   * BufferCore.\n   * (the interval [start, end)).\n   */\n  copy(start: number, end: number): BufferCore;\n  /**\n   * Fills [start, end) with the given byte value.\n   */\n  fill(value: number, start: number, end: number): void;\n}\n\nexport interface BufferCoreImplementation {\n  /**\n   * The common constructor that all BufferCores need to support.\n   */\n  new(length: number): BufferCore;\n  /**\n   * Returns 'true' if the BufferCore is available in the current environment.\n   */\n  isAvailable(): boolean;\n  /**\n   * The name of this particular implementation. Used for unit testing purposes.\n   */\n  bufferType: string;\n}\n\n/**\n * Contains common definitions for most of the BufferCore classes.\n * Subclasses only need to implement write/readUInt8 for full functionality.\n */\nexport class BufferCoreCommon {\n  public getLength(): number {\n    throw new Error('BufferCore implementations should implement getLength.');\n  }\n  public writeInt8(i: number, data: number): void {\n    // Pack the sign bit as the highest bit.\n    // Note that we keep the highest bit in the value byte as the sign bit if it\n    // exists.\n    this.writeUInt8(i, (data & 0xFF) | ((data & 0x80000000) >>> 24));\n  }\n  public writeInt16LE(i: number, data: number): void {\n    this.writeUInt8(i, data & 0xFF);\n    // Pack the sign bit as the highest bit.\n    // Note that we keep the highest bit in the value byte as the sign bit if it\n    // exists.\n    this.writeUInt8(i+1, ((data >>> 8) & 0xFF) | ((data & 0x80000000) >>> 24));\n  }\n  public writeInt16BE(i: number, data: number): void {\n    this.writeUInt8(i+1, data & 0xFF);\n    // Pack the sign bit as the highest bit.\n    // Note that we keep the highest bit in the value byte as the sign bit if it\n    // exists.\n    this.writeUInt8(i, ((data >>> 8) & 0xFF) | ((data & 0x80000000) >>> 24));\n  }\n  public writeInt32LE(i: number, data: number): void {\n    this.writeUInt8(i, data & 0xFF);\n    this.writeUInt8(i+1, (data >>> 8) & 0xFF);\n    this.writeUInt8(i+2, (data >>> 16) & 0xFF);\n    this.writeUInt8(i+3, (data >>> 24) & 0xFF);\n  }\n  public writeInt32BE(i: number, data: number): void {\n    this.writeUInt8(i+3, data & 0xFF);\n    this.writeUInt8(i+2, (data >>> 8) & 0xFF);\n    this.writeUInt8(i+1, (data >>> 16) & 0xFF);\n    this.writeUInt8(i, (data >>> 24) & 0xFF);\n  }\n  public writeUInt8(i: number, data: number): void {\n    throw new Error('BufferCore implementations should implement writeUInt8.');\n  }\n  public writeUInt16LE(i: number, data: number): void {\n    this.writeUInt8(i, data & 0xFF);\n    this.writeUInt8(i+1, (data >> 8) & 0xFF);\n  }\n  public writeUInt16BE(i: number, data: number): void {\n    this.writeUInt8(i+1, data & 0xFF);\n    this.writeUInt8(i, (data >> 8) & 0xFF);\n  }\n  public writeUInt32LE(i: number, data: number): void {\n    this.writeInt32LE(i, data|0);\n  }\n  public writeUInt32BE(i: number, data: number): void {\n    this.writeInt32BE(i, data|0);\n  }\n  public writeFloatLE(i: number, data: number): void {\n    this.writeInt32LE(i, this.float2intbits(data));\n  }\n  public writeFloatBE(i: number, data: number): void {\n    this.writeInt32BE(i, this.float2intbits(data));\n  }\n  public writeDoubleLE(i: number, data: number): void {\n    var doubleBits = this.double2longbits(data);\n    this.writeInt32LE(i, doubleBits[0]);\n    this.writeInt32LE(i+4, doubleBits[1]);\n  }\n  public writeDoubleBE(i: number, data: number): void {\n    var doubleBits = this.double2longbits(data);\n    this.writeInt32BE(i+4, doubleBits[0]);\n    this.writeInt32BE(i, doubleBits[1]);\n  }\n  public readInt8(i: number): number {\n    var val = this.readUInt8(i);\n    if (val & 0x80) {\n      // Sign bit is set, so perform sign extension.\n      return val | 0xFFFFFF80;\n    } else {\n      return val;\n    }\n  }\n  public readInt16LE(i: number): number {\n    var val = this.readUInt16LE(i);\n    if (val & 0x8000) {\n      // Sign bit is set, so perform sign extension.\n      return val | 0xFFFF8000;\n    } else {\n      return val;\n    }\n  }\n  public readInt16BE(i: number): number {\n    var val = this.readUInt16BE(i);\n    if (val & 0x8000) {\n      // Sign bit is set, so perform sign extension.\n      return val | 0xFFFF8000;\n    } else {\n      return val;\n    }\n  }\n  public readInt32LE(i: number): number {\n    return this.readUInt32LE(i) | 0;\n  }\n  public readInt32BE(i: number): number {\n    return this.readUInt32BE(i) | 0;\n  }\n  public readUInt8(i: number): number {\n    throw new Error('BufferCore implementations should implement readUInt8.');\n  }\n  public readUInt16LE(i: number): number {\n    return (this.readUInt8(i+1) << 8) | this.readUInt8(i);\n  }\n  public readUInt16BE(i: number): number {\n    return (this.readUInt8(i) << 8) | this.readUInt8(i+1);\n  }\n  public readUInt32LE(i: number): number {\n    return ((this.readUInt8(i+3) << 24) | (this.readUInt8(i+2) << 16) | (this.readUInt8(i+1) << 8) | this.readUInt8(i)) >>> 0;\n  }\n  public readUInt32BE(i: number): number {\n    return ((this.readUInt8(i) << 24) | (this.readUInt8(i+1) << 16) | (this.readUInt8(i+2) << 8) | this.readUInt8(i+3)) >>> 0;\n  }\n  public readFloatLE(i: number): number {\n    return this.intbits2float(this.readInt32LE(i));\n  }\n  public readFloatBE(i: number): number {\n    return this.intbits2float(this.readInt32BE(i));\n  }\n  public readDoubleLE(i: number): number {\n    return this.longbits2double(this.readInt32LE(i+4), this.readInt32LE(i));\n  }\n  public readDoubleBE(i: number): number {\n    return this.longbits2double(this.readInt32BE(i), this.readInt32BE(i+4));\n  }\n  public copy(start: number, end: number): BufferCore {\n    throw new Error('BufferCore implementations should implement copy.');\n  }\n  public fill(value: number, start: number, end: number): void {\n    // Stupid unoptimized fill: Byte-by-byte.\n    for (var i = start; i < end; i++) {\n      this.writeUInt8(i, value);\n    }\n  }\n\n  private float2intbits(f_val: number) : number {\n    var exp: number, f_view: number, i_view: number, sig: number, sign: number;\n\n    // Special cases!\n    if (f_val === 0) {\n      return 0;\n    }\n    // We map the infinities to JavaScript infinities. Map them back.\n    if (f_val === Number.POSITIVE_INFINITY) {\n      return FLOAT_POS_INFINITY_AS_INT;\n    }\n    if (f_val === Number.NEGATIVE_INFINITY) {\n      return FLOAT_NEG_INFINITY_AS_INT;\n    }\n    // Convert JavaScript NaN to Float NaN value.\n    if (isNaN(f_val)) {\n      return FLOAT_NaN_AS_INT;\n    }\n\n    // We have more bits of precision than a float, so below we round to\n    // the nearest significand. This appears to be what the x86\n    // Java does for normal floating point operations.\n\n    sign = f_val < 0 ? 1 : 0;\n    f_val = Math.abs(f_val);\n    // Subnormal zone!\n    // (−1)^signbits×2^−126×0.significandbits\n    // Largest subnormal magnitude:\n    // 0000 0000 0111 1111 1111 1111 1111 1111\n    // Smallest subnormal magnitude:\n    // 0000 0000 0000 0000 0000 0000 0000 0001\n    if (f_val <= 1.1754942106924411e-38 && f_val >= 1.4012984643248170e-45) {\n      exp = 0;\n      sig = Math.round((f_val / Math.pow(2, -126)) * Math.pow(2, 23));\n      return (sign << 31) | (exp << 23) | sig;\n    } else {\n      // Regular FP numbers\n      exp = Math.floor(Math.log(f_val) / Math.LN2);\n      sig = Math.round((f_val / Math.pow(2, exp) - 1) * Math.pow(2, 23));\n      return (sign << 31) | ((exp + 127) << 23) | sig;\n    }\n  }\n\n  private double2longbits(d_val: number): number[] {\n    var d_view: number, exp: number, high_bits: number, i_view: number, sig: number, sign: number;\n\n    // Special cases\n    if (d_val === 0) {\n      return [0, 0];\n    }\n    if (d_val === Number.POSITIVE_INFINITY) {\n      // High bits: 0111 1111 1111 0000 0000 0000 0000 0000\n      //  Low bits: 0000 0000 0000 0000 0000 0000 0000 0000\n      return [0, 2146435072];\n    } else if (d_val === Number.NEGATIVE_INFINITY) {\n      // High bits: 1111 1111 1111 0000 0000 0000 0000 0000\n      //  Low bits: 0000 0000 0000 0000 0000 0000 0000 0000\n      return [0, -1048576];\n    } else if (isNaN(d_val)) {\n      // High bits: 0111 1111 1111 1000 0000 0000 0000 0000\n      //  Low bits: 0000 0000 0000 0000 0000 0000 0000 0000\n      return [0, 2146959360];\n    }\n    sign = d_val < 0 ? 1 << 31 : 0;\n    d_val = Math.abs(d_val);\n\n    // Check if it is a subnormal number.\n    // (-1)s × 0.f × 2-1022\n    // Largest subnormal magnitude:\n    // 0000 0000 0000 1111 1111 1111 1111 1111\n    // 1111 1111 1111 1111 1111 1111 1111 1111\n    // Smallest subnormal magnitude:\n    // 0000 0000 0000 0000 0000 0000 0000 0000\n    // 0000 0000 0000 0000 0000 0000 0000 0001\n    if (d_val <= 2.2250738585072010e-308 && d_val >= 5.0000000000000000e-324) {\n      exp = 0;\n      sig = (d_val / Math.pow(2, -1022)) * Math.pow(2, 52);\n    } else {\n      exp = Math.floor(Math.log(d_val) / Math.LN2);\n      // If d_val is close to a power of two, there's a chance that exp\n      // will be 1 greater than it should due to loss of accuracy in the\n      // log result.\n      if (d_val < Math.pow(2, exp)) {\n        exp = exp - 1;\n      }\n      sig = (d_val / Math.pow(2, exp) - 1) * Math.pow(2, 52);\n      exp = (exp + 1023) << 20;\n    }\n\n    // Simulate >> 32\n    high_bits = ((sig * Math.pow(2, -32)) | 0) | sign | exp;\n    return [sig & 0xFFFF, high_bits];\n  }\n\n  private intbits2float(int32: number) {\n    // Map +/- infinity to JavaScript equivalents\n    if (int32 === FLOAT_POS_INFINITY_AS_INT) {\n      return Number.POSITIVE_INFINITY;\n    } else if (int32 === FLOAT_NEG_INFINITY_AS_INT) {\n      return Number.NEGATIVE_INFINITY;\n    }\n    var sign = (int32 & 0x80000000) >>> 31;\n    var exponent = (int32 & 0x7F800000) >>> 23;\n    var significand = int32 & 0x007FFFFF;\n    var value : number;\n    if (exponent === 0) {  // we must denormalize!\n      value = Math.pow(-1, sign) * significand * Math.pow(2, -149);\n    } else {\n      value = Math.pow(-1, sign) * (1 + significand * Math.pow(2, -23)) * Math.pow(2, exponent - 127);\n    }\n    // NaN check\n    if (value < FLOAT_NEG_INFINITY || value > FLOAT_POS_INFINITY) {\n      value = NaN;\n    }\n    return value;\n  }\n\n  private longbits2double(uint32_a: number, uint32_b: number): number {\n    var sign = (uint32_a & 0x80000000) >>> 31;\n    var exponent = (uint32_a & 0x7FF00000) >>> 20;\n    var significand = ((uint32_a & 0x000FFFFF) * Math.pow(2, 32)) + uint32_b;\n\n    // Special values!\n    if (exponent === 0 && significand === 0) {\n      return 0;\n    }\n    if (exponent === 2047) {\n      if (significand === 0) {\n        if (sign === 1) {\n          return Number.NEGATIVE_INFINITY;\n        }\n        return Number.POSITIVE_INFINITY;\n      } else {\n        return NaN;\n      }\n    }\n    if (exponent === 0)  // we must denormalize!\n      return Math.pow(-1, sign) * significand * Math.pow(2, -1074);\n    return Math.pow(-1, sign) * (1 + significand * Math.pow(2, -52)) * Math.pow(2, exponent - 1023);\n  }\n}\n","import {BufferCoreCommon, BufferCore, BufferCoreImplementation} from './buffer_core';\n\n// Used to clear segments of an array index.\nvar clearMasks: number[] = [0xFFFFFF00, 0xFFFF00FF, 0xFF00FFFF, 0x00FFFFFF];\n\n/**\n * Implementation of BufferCore that is backed by an array of 32-bit ints.\n * Data is stored little endian.\n * Example: Bytes 0 through 3 are present in the first int:\n *  BYTE 3      BYTE 2      BYTE 1      BYTE 0\n * 0000 0000 | 0000 0000 | 0000 0000 | 0000 0000\n */\nclass BufferCoreArray extends BufferCoreCommon implements BufferCore {\n  public static isAvailable(): boolean {\n    return true;\n  }\n\n  public static bufferType = \"Array\";\n\n  private buff: number[];\n  private length: number;\n  constructor(length: number) {\n    super();\n    this.length = length;\n    this.buff = new Array(Math.ceil(length/4));\n    // Zero-fill the array.\n    var bufflen = this.buff.length;\n    for (var i = 0; i < bufflen; i++) {\n      this.buff[i] = 0;\n    }\n  }\n  public getLength(): number {\n    return this.length;\n  }\n  public writeUInt8(i: number, data: number): void {\n    data &= 0xFF;\n    // Which int? (Equivalent to (i/4)|0)\n    var arrIdx = i >> 2;\n    // Which offset? (Equivalent to i - arrIdx*4)\n    var intIdx = i & 3;\n    this.buff[arrIdx] = this.buff[arrIdx] & clearMasks[intIdx];\n    this.buff[arrIdx] = this.buff[arrIdx] | (data << (intIdx << 3));\n  }\n  public readUInt8(i: number): number {\n    // Which int?\n    var arrIdx = i >> 2;\n    // Which offset?\n    var intIdx = i & 3;\n    // Bring the data we want into the lowest 8 bits, and truncate.\n    return (this.buff[arrIdx] >> (intIdx << 3)) & 0xFF;\n  }\n  public copy(start: number, end: number): BufferCore {\n    // Stupid unoptimized copy. Later, we could do optimizations when aligned.\n    var newBC = new BufferCoreArray(end - start);\n    for (var i = start; i < end; i++) {\n      newBC.writeUInt8(i - start, this.readUInt8(i));\n    }\n    return newBC;\n  }\n}\n\n// Type-check the class.\nvar _: BufferCoreImplementation = BufferCoreArray;\n\nexport = BufferCoreArray;\n","import {BufferCoreCommon, BufferCore, BufferCoreImplementation} from './buffer_core';\nimport {isArrayBuffer, isArrayBufferView} from './util';\n\n/**\n * Represents data using an ArrayBuffer.\n */\nclass BufferCoreArrayBuffer extends BufferCoreCommon implements BufferCore {\n  public static isAvailable(): boolean {\n    return typeof DataView !== 'undefined';\n  }\n\n  public static bufferType = \"ArrayBuffer\";\n\n  private buff: DataView;\n  private length: number;\n  constructor(length: number);\n  constructor(buff: ArrayBufferView);\n  constructor(buff: ArrayBuffer);\n  constructor(arg1: number | ArrayBufferView | ArrayBuffer) {\n    super();\n    if (typeof arg1 === 'number') {\n      this.buff = new DataView(new ArrayBuffer(arg1));\n    } else if (arg1 instanceof DataView) {\n      this.buff = arg1;\n    } else if (isArrayBufferView(arg1)) {\n      this.buff = new DataView(arg1.buffer, arg1.byteOffset, arg1.byteLength);\n    } else if (isArrayBuffer(arg1)) {\n      this.buff = new DataView(<ArrayBuffer> arg1);\n    } else {\n      throw new TypeError(\"Invalid argument.\");\n    }\n    this.length = this.buff.byteLength;\n  }\n  public getLength(): number {\n    return this.length;\n  }\n  public writeInt8(i: number, data: number): void {\n    this.buff.setInt8(i, data);\n  }\n  public writeInt16LE(i: number, data: number): void {\n    this.buff.setInt16(i, data, true);\n  }\n  public writeInt16BE(i: number, data: number): void {\n    this.buff.setInt16(i, data, false);\n  }\n  public writeInt32LE(i: number, data: number): void {\n    this.buff.setInt32(i, data, true);\n  }\n  public writeInt32BE(i: number, data: number): void {\n    this.buff.setInt32(i, data, false);\n  }\n  public writeUInt8(i: number, data: number): void {\n    this.buff.setUint8(i, data);\n  }\n  public writeUInt16LE(i: number, data: number): void {\n    this.buff.setUint16(i, data, true);\n  }\n  public writeUInt16BE(i: number, data: number): void {\n    this.buff.setUint16(i, data, false);\n  }\n  public writeUInt32LE(i: number, data: number): void {\n    this.buff.setUint32(i, data, true);\n  }\n  public writeUInt32BE(i: number, data: number): void {\n    this.buff.setUint32(i, data, false);\n  }\n  public writeFloatLE(i: number, data: number): void {\n    this.buff.setFloat32(i, data, true);\n  }\n  public writeFloatBE(i: number, data: number): void {\n    this.buff.setFloat32(i, data, false);\n  }\n  public writeDoubleLE(i: number, data: number): void {\n    this.buff.setFloat64(i, data, true);\n  }\n  public writeDoubleBE(i: number, data: number): void {\n    this.buff.setFloat64(i, data, false);\n  }\n  public readInt8(i: number): number {\n    return this.buff.getInt8(i);\n  }\n  public readInt16LE(i: number): number {\n    return this.buff.getInt16(i, true);\n  }\n  public readInt16BE(i: number): number {\n    return this.buff.getInt16(i, false);\n  }\n  public readInt32LE(i: number): number {\n    return this.buff.getInt32(i, true);\n  }\n  public readInt32BE(i: number): number {\n    return this.buff.getInt32(i, false);\n  }\n  public readUInt8(i: number): number {\n    return this.buff.getUint8(i);\n  }\n  public readUInt16LE(i: number): number {\n    return this.buff.getUint16(i, true);\n  }\n  public readUInt16BE(i: number): number {\n    return this.buff.getUint16(i, false);\n  }\n  public readUInt32LE(i: number): number {\n    return this.buff.getUint32(i, true);\n  }\n  public readUInt32BE(i: number): number {\n    return this.buff.getUint32(i, false);\n  }\n  public readFloatLE(i: number): number {\n    return this.buff.getFloat32(i, true);\n  }\n  public readFloatBE(i: number): number {\n    return this.buff.getFloat32(i, false);\n  }\n  public readDoubleLE(i: number): number {\n    return this.buff.getFloat64(i, true);\n  }\n  public readDoubleBE(i: number): number {\n    return this.buff.getFloat64(i, false);\n  }\n  public copy(start: number, end: number): BufferCore {\n    let aBuff = this.buff.buffer;\n    let aBuffOff = this.buff.byteOffset;\n    let newBuff: ArrayBuffer;\n    // Some ArrayBuffer implementations (IE10) do not have 'slice'.\n    if (ArrayBuffer.prototype.slice) {\n      // ArrayBuffer.slice is copying; exactly what we want.\n      newBuff = aBuff.slice(aBuffOff + start, aBuffOff + end);\n    } else {\n      var len = end - start;\n      newBuff = new ArrayBuffer(len);\n      // Copy the old contents in.\n      var newUintArray = new Uint8Array(newBuff);\n      var oldUintArray = new Uint8Array(aBuff, aBuffOff);\n      newUintArray.set(oldUintArray.subarray(start, end));\n    }\n    return new BufferCoreArrayBuffer(newBuff);\n  }\n  /**\n   * (Nonstandard) Copy [start, end) to [offset+start, offset+end) in target.\n   */\n  public copyTo(target: BufferCoreArrayBuffer, offset: number, start: number, end: number): number {\n    let targetU8 = new Uint8Array(target.buff.buffer, target.buff.byteOffset);\n    let sourceU8 = new Uint8Array(this.buff.buffer, this.buff.byteOffset + start, end - start);\n    targetU8.set(sourceU8, offset);\n    return end - start;\n  }\n  public fill(value: number, start: number, end: number): void {\n    // Value must be a byte wide.\n    value = value & 0xFF;\n    var i: number;\n    var len = end - start;\n    var intBytes = (((len)/4)|0)*4;\n    // Optimization: Write 4 bytes at a time.\n    // TODO: Could we copy 8 bytes at a time using Float64, or could we\n    //       lose precision?\n    var intVal = (value << 24) | (value << 16) | (value << 8) | value\n    for (i = 0; i < intBytes; i += 4) {\n      this.writeInt32LE(i + start, intVal);\n    }\n    for (i = intBytes; i < len; i++) {\n      this.writeUInt8(i + start, value);\n    }\n  }\n\n  /**\n   * Custom method for this buffer core. Get the backing object.\n   */\n  public getDataView(): DataView {\n    return this.buff;\n  }\n}\n\n// Type-check the class.\nvar _: BufferCoreImplementation = BufferCoreArrayBuffer;\n\nexport = BufferCoreArrayBuffer;\n","import {BufferCoreCommon, BufferCore, BufferCoreImplementation} from './buffer_core';\n\n/**\n * Deprecated type, so it is not present in TypeScript's lib.d.ts.\n */\ninterface CanvasPixelArray {\n  // Values are [0,255].\n  [index: number]: number;\n  length: number;\n}\ndeclare var CanvasPixelArray: CanvasPixelArray;\n\n/**\n * Implementation of BufferCore that is backed by an ImageData object.\n * Useful in browsers with HTML5 canvas support, but no TypedArray support\n * (IE9).\n */\nclass BufferCoreImageData extends BufferCoreCommon implements BufferCore {\n  private static imageDataFactory: CanvasRenderingContext2D;\n  /**\n   * Constructs a CanvasPixelArray that represents the given amount of bytes.\n   */\n  private static getCanvasPixelArray(bytes: number): CanvasPixelArray {\n    var ctx: CanvasRenderingContext2D = BufferCoreImageData.imageDataFactory;\n    // Lazily initialize, otherwise every browser (even those that will never\n    // use this code) will create a canvas on script load.\n    if (ctx === undefined) {\n      BufferCoreImageData.imageDataFactory = ctx = document.createElement('canvas').getContext('2d');\n    }\n    // You cannot create image data with size 0, so up it to size 1.\n    if (bytes === 0) bytes = 1;\n    return ctx.createImageData(Math.ceil(bytes / 4), 1).data;\n  }\n  public static isAvailable(): boolean {\n    // Modern browsers have removed this deprecated API, so it is not always around.\n    // NOTE: IE11 in IE8 compat. mode has CanvasPixelArray defined, but you can't\n    // use it! Hence the check for getContext.\n    return typeof(CanvasPixelArray) !== 'undefined' && document.createElement('canvas')['getContext'] !== undefined;\n  }\n  public static bufferType = \"ImageData\";\n\n  private buff: CanvasPixelArray;\n  private length: number;\n  constructor(length: number) {\n    super();\n    this.length = length;\n    this.buff = BufferCoreImageData.getCanvasPixelArray(length);\n  }\n  public getLength(): number {\n    return this.length;\n  }\n  public writeUInt8(i: number, data: number): void {\n    this.buff[i] = data;\n  }\n  public readUInt8(i: number): number {\n    return this.buff[i];\n  }\n  public copy(start: number, end: number): BufferCore {\n    // AFAIK, there's no efficient way to clone ImageData.\n    var newBC = new BufferCoreImageData(end - start);\n    for (var i = start; i < end; i++) {\n      newBC.writeUInt8(i - start, this.buff[i]);\n    }\n    return newBC;\n  }\n}\n\n// Type-check the class.\nvar _: BufferCoreImplementation = BufferCoreImageData;\n\nexport = BufferCoreImageData;\n","/**\n * (Nonstandard) String utility function for 8-bit ASCII with the extended\n * character set. Unlike the ASCII above, we do not mask the high bits.\n *\n * Placed into a separate file so it can be used with other Buffer implementations.\n * @see http://en.wikipedia.org/wiki/Extended_ASCII\n */\nexport default class ExtendedASCII {\n  private static extendedChars = [ '\\u00C7', '\\u00FC', '\\u00E9', '\\u00E2', '\\u00E4',\n    '\\u00E0', '\\u00E5', '\\u00E7', '\\u00EA', '\\u00EB', '\\u00E8', '\\u00EF',\n    '\\u00EE', '\\u00EC', '\\u00C4', '\\u00C5', '\\u00C9', '\\u00E6', '\\u00C6',\n    '\\u00F4', '\\u00F6', '\\u00F2', '\\u00FB', '\\u00F9', '\\u00FF', '\\u00D6',\n    '\\u00DC', '\\u00F8', '\\u00A3', '\\u00D8', '\\u00D7', '\\u0192', '\\u00E1',\n    '\\u00ED', '\\u00F3', '\\u00FA', '\\u00F1', '\\u00D1', '\\u00AA', '\\u00BA',\n    '\\u00BF', '\\u00AE', '\\u00AC', '\\u00BD', '\\u00BC', '\\u00A1', '\\u00AB',\n    '\\u00BB', '_', '_', '_', '\\u00A6', '\\u00A6', '\\u00C1', '\\u00C2', '\\u00C0',\n    '\\u00A9', '\\u00A6', '\\u00A6', '+', '+', '\\u00A2', '\\u00A5', '+', '+', '-',\n    '-', '+', '-', '+', '\\u00E3', '\\u00C3', '+', '+', '-', '-', '\\u00A6', '-',\n    '+', '\\u00A4', '\\u00F0', '\\u00D0', '\\u00CA', '\\u00CB', '\\u00C8', 'i',\n    '\\u00CD', '\\u00CE', '\\u00CF', '+', '+', '_', '_', '\\u00A6', '\\u00CC', '_',\n    '\\u00D3', '\\u00DF', '\\u00D4', '\\u00D2', '\\u00F5', '\\u00D5', '\\u00B5',\n    '\\u00FE', '\\u00DE', '\\u00DA', '\\u00DB', '\\u00D9', '\\u00FD', '\\u00DD',\n    '\\u00AF', '\\u00B4', '\\u00AD', '\\u00B1', '_', '\\u00BE', '\\u00B6', '\\u00A7',\n    '\\u00F7', '\\u00B8', '\\u00B0', '\\u00A8', '\\u00B7', '\\u00B9', '\\u00B3',\n    '\\u00B2', '_', ' ' ];\n\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    var length = str.length > buf.length ? buf.length : str.length;\n    for (var i = 0; i < length; i++) {\n      var charCode = str.charCodeAt(i);\n      if (charCode > 0x7F) {\n        // Check if extended ASCII.\n        var charIdx = ExtendedASCII.extendedChars.indexOf(str.charAt(i));\n        if (charIdx > -1) {\n          charCode = charIdx + 0x80;\n        }\n        // Otherwise, keep it as-is.\n      }\n      buf.writeUInt8(charCode, i);\n    }\n    return length;\n  }\n\n  public static byte2str(buff: NodeBuffer): string {\n    var chars = new Array(buff.length);\n    for (var i = 0; i < buff.length; i++) {\n      var charCode = buff.readUInt8(i);\n      if (charCode > 0x7F) {\n        chars[i] = ExtendedASCII.extendedChars[charCode - 128]\n      } else {\n        chars[i] = String.fromCharCode(charCode);\n      }\n    }\n    return chars.join('');\n  }\n\n  public static byteLength(str: string): number { return str.length; }\n}\n","import buffer = require(\"./buffer\");\nimport ExtendedASCII from './extended_ascii';\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Efficiently converts an array of character codes into a JS string.\n * Avoids an issue with String.fromCharCode when the number of arguments is too large.\n */\nexport function fromCharCodes(charCodes: number[]): string {\n  // 8K blocks.\n  var numChars = charCodes.length,\n    numChunks = ((numChars - 1) >> 13) + 1,\n    chunks: string[] = new Array<string>(numChunks), i: number;\n  for (i = 0; i < numChunks; i++) {\n    chunks[i] = fromCharCode.apply(String, charCodes.slice(i * 0x2000, (i + 1) * 0x2000));\n  }\n  return chunks.join(\"\");\n}\n\n/**\n * Contains string utility functions, mainly for converting between JavaScript\n * strings and binary buffers of arbitrary encoding types.\n */\n\n/**\n * Encapsulates utility functions for a particular string encoding.\n */\nexport interface StringUtil {\n  /**\n   * Converts the string into its binary representation, and then writes the\n   * binary representation into the buffer at the given offset.\n   *\n   * We assume that the offset / length is pre-validated.\n   * @param [BrowserFS.node.Buffer] buf the buffer to write into\n   * @param [String] str the string that will be converted\n   * @param [Number] offset the offset to start writing into the buffer at\n   * @param [Number] length an upper bound on the length of the string that we\n   *   can write\n   * @return [Number] number of bytes written into the buffer\n   */\n  str2byte(str: string, buf: NodeBuffer): number;\n  /**\n   * Converts the data in the byte array into a string.\n   * @todo Is this the best API? Are we doing needless copying?\n   * @param [Array] byteArray an array of bytes\n   * @return [String] the array interpreted as a binary string\n   */\n  byte2str(buf: NodeBuffer): string;\n  /**\n   * Returns the number of bytes that the string will take up using the given\n   * encoding.\n   * @param [String] str the string to get the byte length for\n   * @return [Number] the number of bytes that the string will take up using the\n   * given encoding.\n   */\n  byteLength(str: string): number;\n}\n\n/**\n * Find the 'utility' object for the given string encoding. Throws an exception\n * if the encoding is invalid.\n * @param [String] encoding a string encoding\n * @return [BrowserFS.StringUtil.*] The StringUtil object for the given encoding\n */\nexport function FindUtil(encoding: string): StringUtil {\n  encoding = (function() {\n    switch (typeof encoding) {\n      case 'object':\n        return \"\" + encoding; // Implicitly calls toString on any object (Node does this)\n      case 'string':\n        return encoding; // No transformation needed.\n      default:\n        throw new TypeError('Invalid encoding argument specified');\n    }\n  })();\n  encoding = encoding.toLowerCase();\n  // This is the same logic as Node's source code.\n  switch (encoding) {\n    case 'utf8':\n    case 'utf-8':\n      return UTF8;\n    case 'ascii':\n      return ASCII;\n    case 'binary':\n      return BINARY;\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return UCS2;\n    case 'hex':\n      return HEX;\n    case 'base64':\n      return BASE64;\n    // Custom BFS: For efficiently representing data as JavaScript UTF-16\n    // strings.\n    case 'binary_string':\n      return BINSTR;\n    case 'binary_string_ie':\n      return BINSTRIE;\n    case 'extended_ascii':\n      return ExtendedASCII;\n    default:\n      throw new TypeError(`Unknown encoding: ${encoding}`);\n  }\n}\n\n/**\n * String utility functions for UTF-8. Note that some UTF-8 strings *cannot* be\n * expressed in terms of JavaScript UTF-16 strings.\n * @see http://en.wikipedia.org/wiki/UTF-8\n */\nexport class UTF8 {\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    var maxJ = buf.length,\n      i = 0,\n      j = 0,\n      strLen = str.length;\n    while (i < strLen && j < maxJ) {\n      var code = str.charCodeAt(i++);\n      if (0xD800 <= code && code <= 0xDBFF) {\n        // 4 bytes: Surrogate pairs! UTF-16 fun time.\n        if (j + 3 >= maxJ || i >= strLen) {\n          break;\n        }\n\n        // Get the next UTF16 character.\n        var next = str.charCodeAt(i);\n        if (0xDC00 <= next && next <= 0xDFFF) {\n          // First pair: 10 bits of data, with an implicitly set 11th bit\n          // Second pair: 10 bits of data\n          var codePoint = (((code & 0x3FF) | 0x400) << 10) | (next & 0x3FF);\n          // Highest 3 bits in first byte\n          buf.writeUInt8((codePoint >> 18) | 0xF0, j++);\n          // Rest are all 6 bits\n          buf.writeUInt8(((codePoint >> 12) & 0x3F) | 0x80, j++);\n          buf.writeUInt8(((codePoint >> 6) & 0x3F) | 0x80, j++);\n          buf.writeUInt8((codePoint & 0x3F) | 0x80, j++);\n          i++;\n        } else {\n          // This surrogate pair is missing a friend!\n          // Write unicode replacement character.\n          buf.writeUInt8(0xef, j++);\n          buf.writeUInt8(0xbf, j++);\n          buf.writeUInt8(0xbd, j++);\n        }\n      } else if (0xDC00 <= code && code <= 0xDFFF) {\n        // Unmatched second surrogate!\n        // Write unicode replacement character.\n        buf.writeUInt8(0xef, j++);\n        buf.writeUInt8(0xbf, j++);\n        buf.writeUInt8(0xbd, j++);\n      } else if (code < 0x80) {\n        // One byte\n        buf.writeUInt8(code, j++);\n      } else if (code < 0x800) {\n        // Two bytes\n        if (j + 1 >= maxJ) {\n          break;\n        }\n        // Highest 5 bits in first byte\n        buf.writeUInt8((code >> 6) | 0xC0, j++);\n        // Lower 6 bits in second byte\n        buf.writeUInt8((code & 0x3F) | 0x80, j++);\n      } else if (code < 0x10000) {\n        // Three bytes\n        if (j + 2 >= maxJ) {\n          break;\n        }\n        // Highest 4 bits in first byte\n        buf.writeUInt8((code >> 12) | 0xE0, j++);\n        // Middle 6 bits in second byte\n        buf.writeUInt8(((code >> 6) & 0x3F) | 0x80, j++);\n        // Lowest 6 bits in third byte\n        buf.writeUInt8((code & 0x3F) | 0x80, j++);\n      }\n    }\n    return j;\n  }\n\n  public static byte2str(buff: NodeBuffer): string {\n    var chars: number[] = [];\n    var i = 0;\n    while (i < buff.length) {\n      var code = buff.readUInt8(i++);\n      if (code < 0x80) {\n        chars.push(code);\n      } else if (code < 0xC0) {\n        // This is the second byte of a multibyte character. This shouldn't be\n        // possible.\n        throw new Error('Found incomplete part of character in string.');\n      } else if (code < 0xE0) {\n        // 2 bytes: 5 and 6 bits\n        chars.push(((code & 0x1F) << 6) | (buff.readUInt8(i++) & 0x3F));\n      } else if (code < 0xF0) {\n        // 3 bytes: 4, 6, and 6 bits\n        chars.push(((code & 0xF) << 12) | ((buff.readUInt8(i++) & 0x3F) << 6) | (buff.readUInt8(i++) & 0x3F));\n      } else if (code < 0xF8) {\n        // 4 bytes: 3, 6, 6, 6 bits; surrogate pairs time!\n        // First 11 bits; remove 11th bit as per UTF-16 standard\n        var byte3 = buff.readUInt8(i + 2);\n        chars.push(((((code & 0x7) << 8) | ((buff.readUInt8(i++) & 0x3F) << 2) | ((buff.readUInt8(i++) & 0x3F) >> 4)) & 0x3FF) | 0xD800);\n        // Final 10 bits\n        chars.push((((byte3 & 0xF) << 6) | (buff.readUInt8(i++) & 0x3F)) | 0xDC00);\n      } else {\n        throw new Error('Unable to represent UTF-8 string as UTF-16 JavaScript string.');\n      }\n    }\n    return fromCharCodes(chars);\n  }\n\n  // From http://stackoverflow.com/a/23329386\n  public static byteLength(str: string): number {\n    var s = str.length;\n    for (var i=str.length-1; i>=0; i--) {\n      var code = str.charCodeAt(i);\n      if (code > 0x7f && code <= 0x7ff) s++;\n      else if (code > 0x7ff && code <= 0xffff) s+=2;\n      if (code >= 0xDC00 && code <= 0xDFFF) i--; //trail surrogate\n    }\n    return s;\n  }\n}\n\n/**\n * String utility functions for 8-bit ASCII. Like Node, we mask the high bits of\n * characters in JavaScript UTF-16 strings.\n * @see http://en.wikipedia.org/wiki/ASCII\n */\nexport class ASCII {\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    var length = str.length > buf.length ? buf.length : str.length;\n    for (var i = 0; i < length; i++) {\n      buf.writeUInt8(str.charCodeAt(i) % 256, i);\n    }\n    return length;\n  }\n\n  public static byte2str(buff: NodeBuffer): string {\n    var chars = new Array<number>(buff.length);\n    for (var i = 0; i < buff.length; i++) {\n      chars[i] = buff.readUInt8(i) & 0x7F;\n    }\n    return fromCharCodes(chars);\n  }\n\n  public static byteLength(str: string): number { return str.length; }\n}\n\n/**\n * String utility functions for Node's BINARY strings, which represent a single\n * byte per character.\n */\nexport class BINARY {\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    var length = str.length > buf.length ? buf.length : str.length;\n    for (var i = 0; i < length; i++) {\n      buf.writeUInt8(str.charCodeAt(i) & 0xFF, i);\n    }\n    return length;\n  }\n\n  public static byte2str(buff: NodeBuffer): string {\n    var chars = new Array<number>(buff.length);\n    for (var i = 0; i < buff.length; i++) {\n      chars[i] = buff.readUInt8(i) & 0xFF;\n    }\n    return fromCharCodes(chars);\n  }\n\n  public static byteLength(str: string): number { return str.length; }\n}\n\n/**\n * Contains string utility functions for base-64 encoding.\n *\n * Adapted from the StackOverflow comment linked below.\n * @see http://stackoverflow.com/questions/246801/how-can-you-encode-to-base64-using-javascript#246813\n * @see http://en.wikipedia.org/wiki/Base64\n * @todo Bake in support for btoa() and atob() if available.\n */\nexport class BASE64 {\n  private static b64chars = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/', '='];\n  private static num2b64: string[] = (function() {\n    var obj = new Array(BASE64.b64chars.length);\n    for (var idx = 0; idx < BASE64.b64chars.length; idx++) {\n      var i = BASE64.b64chars[idx];\n      obj[idx] = i;\n    }\n    return obj;\n  })();\n\n  private static b642num: {[chr: string]: number} = (function(): {[chr: string]: number} {\n    var obj: {[chr: string]: number} = {};\n    for (var idx = 0; idx < BASE64.b64chars.length; idx++) {\n      var i = BASE64.b64chars[idx];\n      obj[i] = idx;\n    }\n    obj['-'] = 62;\n    obj['_'] = 63;\n    return obj;\n  })();\n\n  public static byte2str(buff: NodeBuffer): string {\n    var output = '';\n    var i = 0;\n    while (i < buff.length) {\n      var chr1 = buff.readUInt8(i++);\n      var chr2 = i < buff.length ? buff.readUInt8(i++) : NaN;\n      var chr3 = i < buff.length ? buff.readUInt8(i++) : NaN;\n      var enc1 = chr1 >> 2;\n      var enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      var enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      var enc4 = chr3 & 63;\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n      output = output + BASE64.num2b64[enc1] + BASE64.num2b64[enc2] + BASE64.num2b64[enc3] + BASE64.num2b64[enc4];\n    }\n    return output;\n  }\n\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    var length = buf.length;\n    var output = '';\n    var i = 0;\n    str = str.replace(/[^A-Za-z0-9\\+\\/\\=\\-\\_]/g, '');\n    var j = 0;\n    while (i < str.length && j < buf.length) {\n      var enc1 = BASE64.b642num[str.charAt(i++)];\n      var enc2 = BASE64.b642num[str.charAt(i++)];\n      var enc3 = BASE64.b642num[str.charAt(i++)];\n      var enc4 = BASE64.b642num[str.charAt(i++)];\n      var chr1 = (enc1 << 2) | (enc2 >> 4);\n      var chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      var chr3 = ((enc3 & 3) << 6) | enc4;\n      buf.writeUInt8(chr1, j++);\n      if (j === length) {\n        break;\n      }\n      if (enc3 !== 64) {\n        output += buf.writeUInt8(chr2, j++);\n      }\n      if (j === length) {\n        break;\n      }\n      if (enc4 !== 64) {\n        output += buf.writeUInt8(chr3, j++);\n      }\n      if (j === length) {\n        break;\n      }\n    }\n    return j;\n  }\n\n  public static byteLength(str: string): number {\n    return Math.floor(((str.replace(/[^A-Za-z0-9\\+\\/\\-\\_]/g, '')).length * 6) / 8);\n  }\n}\n\n/**\n * String utility functions for the UCS-2 encoding. Note that our UCS-2 handling\n * is identical to our UTF-16 handling.\n *\n * Note: UCS-2 handling is identical to UTF-16.\n * @see http://en.wikipedia.org/wiki/UCS2\n */\nexport class UCS2 {\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    var len = str.length;\n    // Clip length to longest string of valid characters that can fit in the\n    // byte range.\n    if (len * 2 > buf.length) {\n      len = buf.length % 2 === 1 ? (buf.length - 1) / 2 : buf.length / 2;\n    }\n    for (var i = 0; i < len; i++) {\n      buf.writeUInt16LE(str.charCodeAt(i), i * 2);\n    }\n    return len * 2;\n  }\n\n  public static byte2str(buff: NodeBuffer): string {\n    if (buff.length % 2 !== 0) {\n      throw new Error('Invalid UCS2 byte array.');\n    }\n    var chars = new Array(buff.length / 2);\n    for (var i = 0; i < buff.length; i += 2) {\n      chars[i / 2] = String.fromCharCode(buff.readUInt8(i) | (buff.readUInt8(i + 1) << 8));\n    }\n    return chars.join('');\n  }\n\n  public static byteLength(str: string): number {\n    return str.length * 2;\n  }\n}\n\n/**\n * Contains string utility functions for hex encoding.\n * @see http://en.wikipedia.org/wiki/Hexadecimal\n */\nexport class HEX {\n  private static HEXCHARS = '0123456789abcdef';\n\n  private static num2hex: string[] = (function() {\n    var obj = new Array(HEX.HEXCHARS.length);\n    for (var idx = 0; idx < HEX.HEXCHARS.length; idx++) {\n      var i = HEX.HEXCHARS[idx];\n      obj[idx] = i;\n    }\n    return obj;\n  })();\n\n  private static hex2num: {[chr: string]: number} = (function(): {[chr: string]: number} {\n    var idx: number, i: string;\n    var obj: {[chr: string]: number} = {};\n    for (idx = 0; idx < HEX.HEXCHARS.length; idx++) {\n      i = HEX.HEXCHARS[idx];\n      obj[i] = idx;\n    }\n    var capitals = 'ABCDEF';\n    for (idx = 0; idx < capitals.length; idx++) {\n      i = capitals[idx];\n      obj[i] = idx + 10;\n    }\n    return obj;\n  })();\n\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    if (str.length % 2 === 1) {\n      throw new Error('Invalid hex string');\n    }\n    // Each character is 1 byte encoded as two hex characters; so 1 byte becomes\n    // 2 bytes.\n    var numBytes = str.length >> 1;\n    if (numBytes > buf.length) {\n      numBytes = buf.length;\n    }\n    for (var i = 0; i < numBytes; i++) {\n      var char1 = this.hex2num[str.charAt(i << 1)];\n      var char2 = this.hex2num[str.charAt((i << 1) + 1)];\n      buf.writeUInt8((char1 << 4) | char2, i);\n    }\n    return numBytes;\n  }\n\n  public static byte2str(buff: NodeBuffer): string {\n    var len = buff.length;\n    var chars = new Array(len << 1);\n    var j = 0;\n    for (var i = 0; i < len; i++) {\n      var hex2 = buff.readUInt8(i) & 0xF;\n      var hex1 = buff.readUInt8(i) >> 4;\n      chars[j++] = this.num2hex[hex1];\n      chars[j++] = this.num2hex[hex2];\n    }\n    return chars.join('');\n  }\n\n  public static byteLength(str: string): number {\n    // Assuming a valid string.\n    return str.length >> 1;\n  }\n}\n\n/**\n * Contains string utility functions for binary string encoding. This is where we\n * pack arbitrary binary data as a UTF-16 string.\n *\n * Each character in the string is two bytes. The first character in the string\n * is special: The first byte specifies if the binary data is of odd byte length.\n * If it is, then it is a 1 and the second byte is the first byte of data; if\n * not, it is a 0 and the second byte is 0.\n *\n * Everything is little endian.\n */\nexport class BINSTR {\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    // Special case: Empty string\n    if (str.length === 0) {\n      return 0;\n    }\n    var numBytes = BINSTR.byteLength(str);\n    if (numBytes > buf.length) {\n      numBytes = buf.length;\n    }\n    var j = 0;\n    var startByte = 0;\n    var endByte = startByte + numBytes;\n    // Handle first character separately\n    var firstChar = str.charCodeAt(j++);\n    if (firstChar !== 0) {\n      buf.writeUInt8(firstChar & 0xFF, 0);\n      startByte = 1;\n    }\n    for (var i = startByte; i < endByte; i += 2) {\n      var chr = str.charCodeAt(j++);\n      if (endByte - i === 1) {\n        // Write first byte of character\n        buf.writeUInt8(chr >> 8, i);\n      }\n      if (endByte - i >= 2) {\n        // Write both bytes in character\n        buf.writeUInt16BE(chr, i);\n      }\n    }\n    return numBytes;\n  }\n\n  public static byte2str(buff: NodeBuffer): string {\n    var len = buff.length;\n    // Special case: Empty string\n    if (len === 0) {\n      return '';\n    }\n    var charLen = (len >> 1) + 1,\n      chars = new Array<number>(charLen),\n      j = 0, i: number;\n\n    // Even or odd length?\n    if ((len & 1) === 1) {\n      chars[0] = 0x100 | buff.readUInt8(j++);\n    } else {\n      chars[0] = 0;\n    }\n\n    for (i = 1; i < charLen; i++) {\n      chars[i] = buff.readUInt16BE(j);\n      j += 2;\n    }\n    return fromCharCodes(chars);\n  }\n\n  public static byteLength(str: string): number {\n    if (str.length === 0) {\n      // Special case: Empty string.\n      return 0;\n    }\n    var firstChar = str.charCodeAt(0);\n    var bytelen = (str.length - 1) << 1;\n    if (firstChar !== 0) {\n      bytelen++;\n    }\n    return bytelen;\n  }\n}\n\n/**\n * IE/older FF version of binary string. One byte per character, offset by 0x20.\n */\nexport class BINSTRIE {\n  public static str2byte(str: string, buf: NodeBuffer): number {\n    var length = str.length > buf.length ? buf.length : str.length;\n    for (var i = 0; i < length; i++) {\n      buf.writeUInt8(str.charCodeAt(i) - 0x20, i);\n    }\n    return length;\n  }\n\n  public static byte2str(buff: NodeBuffer): string {\n    var chars = new Array(buff.length);\n    for (var i = 0; i < buff.length; i++) {\n      chars[i] = String.fromCharCode(buff.readUInt8(i) + 0x20);\n    }\n    return chars.join('');\n  }\n\n  public static byteLength(str: string): number {\n    return str.length;\n  }\n}\n","/**\n * Check if the input is an array buffer view.\n */\nexport var isArrayBufferView: (ab: any) => ab is ArrayBufferView;\n/**\n * Check if the input is an array buffer.\n * (Note: Must check if ab is null / an object first.)\n */\nexport var isArrayBuffer: (ab: any) => ab is ArrayBuffer;\n\nif (typeof(ArrayBuffer) === 'undefined') {\n  isArrayBufferView = (ab: any): ab is ArrayBufferView => false;\n  isArrayBuffer = (ab: any): ab is ArrayBuffer => false;\n} else {\n  isArrayBuffer = function(ab: any): ab is ArrayBuffer {\n    return typeof ab.byteLength === 'number';\n  };\n  if (ArrayBuffer['isView']) {\n    isArrayBufferView = function(ab: any): ab is ArrayBufferView {\n      return ArrayBuffer.isView(ab);\n    };\n  } else {\n    isArrayBufferView = function(ab: any): ab is ArrayBufferView {\n      return isArrayBuffer(ab['buffer']);\n    }\n  }\n}","// Type information only.\nimport _path = require('path');\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nfunction posixSplitPath(filename: string): string[] {\n  var out = splitPathRe.exec(filename);\n  out.shift();\n  return out;\n}\n\n/**\n * Emulates Node's `path` module. This module contains utilities for handling and\n * transforming file paths. **All** of these methods perform only string\n * transformations. The file system is not consulted to check whether paths are\n * valid.\n * @see http://nodejs.org/api/path.html\n * @class\n */\nclass path {\n  /**\n   * Normalize a string path, taking care of '..' and '.' parts.\n   *\n   * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.\n   * @example Usage example\n   *   path.normalize('/foo/bar//baz/asdf/quux/..')\n   *   // returns\n   *   '/foo/bar/baz/asdf'\n   * @param [String] p The path to normalize.\n   * @return [String]\n   */\n  public static normalize(p: string): string {\n    // Special case: '' -> '.'\n    if (p === '') {\n      p = '.';\n    }\n    // It's very important to know if the path is relative or not, since it\n    // changes how we process .. and reconstruct the split string.\n    var absolute = p.charAt(0) === path.sep;\n    // Remove repeated //s\n    p = path._removeDuplicateSeps(p);\n    // Try to remove as many '../' as possible, and remove '.' completely.\n    var components = p.split(path.sep);\n    var goodComponents: string[] = [];\n    for (var idx = 0; idx < components.length; idx++) {\n      var c = components[idx];\n      if (c === '.') {\n        continue;\n      } else if (c === '..' && (absolute || (!absolute && goodComponents.length > 0 && goodComponents[0] !== '..'))) {\n        // In the absolute case: Path is relative to root, so we may pop even if\n        // goodComponents is empty (e.g. /../ => /)\n        // In the relative case: We're getting rid of a directory that preceded\n        // it (e.g. /foo/../bar -> /bar)\n        goodComponents.pop();\n      } else {\n        goodComponents.push(c);\n      }\n    }\n\n    // Add in '.' when it's a relative path with no other nonempty components.\n    // Possible results: '.' and './' (input: [''] or [])\n    // @todo Can probably simplify this logic.\n    if (!absolute && goodComponents.length < 2) {\n      switch (goodComponents.length) {\n        case 1:\n          if (goodComponents[0] === '') {\n            goodComponents.unshift('.');\n          }\n          break;\n        default:\n          goodComponents.push('.');\n      }\n    }\n    p = goodComponents.join(path.sep);\n    if (absolute && p.charAt(0) !== path.sep) {\n      p = path.sep + p;\n    }\n    return p;\n  }\n\n  /**\n   * Join all arguments together and normalize the resulting path.\n   *\n   * Arguments must be strings.\n   * @example Usage\n   *   path.join('/foo', 'bar', 'baz/asdf', 'quux', '..')\n   *   // returns\n   *   '/foo/bar/baz/asdf'\n   *\n   *   path.join('foo', {}, 'bar')\n   *   // throws exception\n   *   TypeError: Arguments to path.join must be strings\n   * @param [String,...] paths Each component of the path\n   * @return [String]\n   */\n  public static join(...paths: any[]): string {\n    // Required: Prune any non-strings from the path. I also prune empty segments\n    // so we can do a simple join of the array.\n    var processed: string[] = [];\n    for (var i = 0; i < paths.length; i++) {\n      var segment = paths[i];\n      if (typeof segment !== 'string') {\n        throw new TypeError(\"Invalid argument type to path.join: \" + (typeof segment));\n      } else if (segment !== '') {\n        processed.push(segment);\n      }\n    }\n    return path.normalize(processed.join(path.sep));\n  }\n\n  /**\n   * Resolves to to an absolute path.\n   *\n   * If to isn't already absolute from arguments are prepended in right to left\n   * order, until an absolute path is found. If after using all from paths still\n   * no absolute path is found, the current working directory is used as well.\n   * The resulting path is normalized, and trailing slashes are removed unless\n   * the path gets resolved to the root directory. Non-string arguments are\n   * ignored.\n   *\n   * Another way to think of it is as a sequence of cd commands in a shell.\n   *\n   *     path.resolve('foo/bar', '/tmp/file/', '..', 'a/../subfile')\n   *\n   * Is similar to:\n   *\n   *     cd foo/bar\n   *     cd /tmp/file/\n   *     cd ..\n   *     cd a/../subfile\n   *     pwd\n   *\n   * The difference is that the different paths don't need to exist and may also\n   * be files.\n   * @example Usage example\n   *   path.resolve('/foo/bar', './baz')\n   *   // returns\n   *   '/foo/bar/baz'\n   *\n   *   path.resolve('/foo/bar', '/tmp/file/')\n   *   // returns\n   *   '/tmp/file'\n   *\n   *   path.resolve('wwwroot', 'static_files/png/', '../gif/image.gif')\n   *   // if currently in /home/myself/node, it returns\n   *   '/home/myself/node/wwwroot/static_files/gif/image.gif'\n   * @param [String,...] paths\n   * @return [String]\n   */\n  public static resolve(...paths: string[]): string {\n    // Monitor for invalid paths, throw out empty paths, and look for the *last*\n    // absolute path that we see.\n    var processed: string[] = [];\n    for (var i = 0; i < paths.length; i++) {\n      var p = paths[i];\n      if (typeof p !== 'string') {\n        throw new TypeError(\"Invalid argument type to path.join: \" + (typeof p));\n      } else if (p !== '') {\n        // Remove anything that has occurred before this absolute path, as it\n        // doesn't matter.\n        if (p.charAt(0) === path.sep) {\n          processed = [];\n        }\n        processed.push(p);\n      }\n    }\n    // Special: Remove trailing slash unless it's the root\n    var resolved = path.normalize(processed.join(path.sep));\n    if (resolved.length > 1 && resolved.charAt(resolved.length - 1) === path.sep) {\n      return resolved.substr(0, resolved.length - 1);\n    }\n    // Special: If it doesn't start with '/', it's relative and we need to append\n    // the current directory.\n    if (resolved.charAt(0) !== path.sep) {\n      // Remove ./, since we're going to append the current directory.\n      if (resolved.charAt(0) === '.' && (resolved.length === 1 || resolved.charAt(1) === path.sep)) {\n        resolved = resolved.length === 1 ? '' : resolved.substr(2);\n      }\n      // Append the current directory, which *must* be an absolute path.\n      var cwd = process.cwd();\n      if (resolved !== '') {\n        // cwd will never end in a /... unless it's the root.\n        resolved = this.normalize(cwd + (cwd !== '/' ? path.sep : '') + resolved);\n      } else {\n        resolved = cwd;\n      }\n    }\n    return resolved;\n  }\n\n  /**\n   * Solve the relative path from from to to.\n   *\n   * At times we have two absolute paths, and we need to derive the relative path\n   * from one to the other. This is actually the reverse transform of\n   * path.resolve, which means we see that:\n   *\n   *    path.resolve(from, path.relative(from, to)) == path.resolve(to)\n   *\n   * @example Usage example\n   *   path.relative('C:\\\\orandea\\\\test\\\\aaa', 'C:\\\\orandea\\\\impl\\\\bbb')\n   *   // returns\n   *   '..\\\\..\\\\impl\\\\bbb'\n   *\n   *   path.relative('/data/orandea/test/aaa', '/data/orandea/impl/bbb')\n   *   // returns\n   *   '../../impl/bbb'\n   * @param [String] from\n   * @param [String] to\n   * @return [String]\n   */\n  public static relative(from: string, to: string): string {\n    var i: number;\n    // Alright. Let's resolve these two to absolute paths and remove any\n    // weirdness.\n    from = path.resolve(from);\n    to = path.resolve(to);\n    var fromSegs = from.split(path.sep);\n    var toSegs = to.split(path.sep);\n    // Remove the first segment on both, as it's '' (both are absolute paths)\n    toSegs.shift();\n    fromSegs.shift();\n    // There are two segments to this path:\n    // * Going *up* the directory hierarchy with '..'\n    // * Going *down* the directory hierarchy with foo/baz/bat.\n    var upCount = 0;\n    var downSegs: string[] = [];\n    // Figure out how many things in 'from' are shared with 'to'.\n    for (i = 0; i < fromSegs.length; i++) {\n      var seg = fromSegs[i];\n      if (seg === toSegs[i]) {\n        continue;\n      }\n      // The rest of 'from', including the current element, indicates how many\n      // directories we need to go up.\n      upCount = fromSegs.length - i;\n      break;\n    }\n    // The rest of 'to' indicates where we need to change to. We place this\n    // outside of the loop, as toSegs.length may be greater than fromSegs.length.\n    downSegs = toSegs.slice(i);\n    // Special case: If 'from' is '/'\n    if (fromSegs.length === 1 && fromSegs[0] === '') {\n      upCount = 0;\n    }\n    // upCount can't be greater than the number of fromSegs\n    // (cd .. from / is still /)\n    if (upCount > fromSegs.length) {\n      upCount = fromSegs.length;\n    }\n    // Create the final string!\n    var rv = '';\n    for (i = 0; i < upCount; i++) {\n      rv += '../';\n    }\n    rv += downSegs.join(path.sep);\n    // Special case: Remove trailing '/'. Happens if it's all up and no down.\n    if (rv.length > 1 && rv.charAt(rv.length - 1) === path.sep) {\n      rv = rv.substr(0, rv.length - 1);\n    }\n    return rv;\n  }\n\n  /**\n   * Return the directory name of a path. Similar to the Unix `dirname` command.\n   *\n   * Note that BrowserFS does not validate if the path is actually a valid\n   * directory.\n   * @example Usage example\n   *   path.dirname('/foo/bar/baz/asdf/quux')\n   *   // returns\n   *   '/foo/bar/baz/asdf'\n   * @param [String] p The path to get the directory name of.\n   * @return [String]\n   */\n  public static dirname(p: string): string {\n    // We get rid of //, but we don't modify anything else (e.g. any extraneous .\n    // and ../ are kept intact)\n    p = path._removeDuplicateSeps(p);\n    var absolute = p.charAt(0) === path.sep;\n    var sections = p.split(path.sep);\n    // Do 1 if it's /foo/bar, 2 if it's /foo/bar/\n    if (sections.pop() === '' && sections.length > 0) {\n      sections.pop();\n    }\n    // # of sections needs to be > 1 if absolute, since the first section is '' for '/'.\n    // If not absolute, the first section is the first part of the path, and is OK\n    // to return.\n    if (sections.length > 1 || (sections.length === 1 && !absolute)) {\n      return sections.join(path.sep);\n    } else if (absolute) {\n      return path.sep;\n    } else {\n      return '.';\n    }\n  }\n\n  /**\n   * Return the last portion of a path. Similar to the Unix basename command.\n   * @example Usage example\n   *   path.basename('/foo/bar/baz/asdf/quux.html')\n   *   // returns\n   *   'quux.html'\n   *\n   *   path.basename('/foo/bar/baz/asdf/quux.html', '.html')\n   *   // returns\n   *   'quux'\n   * @param [String] p\n   * @param [String?] ext\n   * @return [String]\n   */\n  public static basename(p: string, ext: string = \"\"): string {\n    // Special case: Normalize will modify this to '.'\n    if (p === '') {\n      return p;\n    }\n    // Normalize the string first to remove any weirdness.\n    p = path.normalize(p);\n    // Get the last part of the string.\n    var sections = p.split(path.sep);\n    var lastPart = sections[sections.length - 1];\n    // Special case: If it's empty, then we have a string like so: foo/\n    // Meaning, 'foo' is guaranteed to be a directory.\n    if (lastPart === '' && sections.length > 1) {\n      return sections[sections.length - 2];\n    }\n    // Remove the extension, if need be.\n    if (ext.length > 0) {\n      var lastPartExt = lastPart.substr(lastPart.length - ext.length);\n      if (lastPartExt === ext) {\n        return lastPart.substr(0, lastPart.length - ext.length);\n      }\n    }\n    return lastPart;\n  }\n\n  /**\n   * Return the extension of the path, from the last '.' to end of string in the\n   * last portion of the path. If there is no '.' in the last portion of the path\n   * or the first character of it is '.', then it returns an empty string.\n   * @example Usage example\n   *   path.extname('index.html')\n   *   // returns\n   *   '.html'\n   *\n   *   path.extname('index.')\n   *   // returns\n   *   '.'\n   *\n   *   path.extname('index')\n   *   // returns\n   *   ''\n   * @param [String] p\n   * @return [String]\n   */\n  public static extname(p: string): string {\n    p = path.normalize(p);\n    var sections = p.split(path.sep);\n    p = sections.pop();\n    // Special case: foo/file.ext/ should return '.ext'\n    if (p === '' && sections.length > 0) {\n      p = sections.pop();\n    }\n    if (p === '..') {\n      return '';\n    }\n    var i = p.lastIndexOf('.');\n    if (i === -1 || i === 0) {\n      return '';\n    }\n    return p.substr(i);\n  }\n\n  /**\n   * Checks if the given path is an absolute path.\n   *\n   * Despite not being documented, this is a tested part of Node's path API.\n   * @param [String] p\n   * @return [Boolean] True if the path appears to be an absolute path.\n   */\n  public static isAbsolute(p: string): boolean {\n    return p.length > 0 && p.charAt(0) === path.sep;\n  }\n\n  /**\n   * Unknown. Undocumented.\n   */\n  public static _makeLong(p: string): string {\n    return p;\n  }\n\n  /**\n   * Returns an object from a path string.\n   */\n  public static parse(p: string): _path.ParsedPath {\n    var allParts = posixSplitPath(p);\n    return {\n      root: allParts[0],\n      dir: allParts[0] + allParts[1].slice(0, -1),\n      base: allParts[2],\n      ext: allParts[3],\n      name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\n    };\n  }\n\n  public static format(pathObject: _path.ParsedPath): string {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError(`Parameter 'pathObject' must be an object, not ${typeof pathObject}`);\n    }\n\n    var root = pathObject.root || '';\n\n    if (typeof root !== 'string') {\n      throw new TypeError(\n          \"'pathObject.root' must be a string or undefined, not \" +\n          typeof pathObject.root\n      );\n    }\n\n    var dir = pathObject.dir ? pathObject.dir + path.sep : '';\n    var base = pathObject.base || '';\n    return dir + base;\n  }\n\n  // The platform-specific file separator. BrowserFS uses `/`.\n  public static sep: string = '/';\n\n  private static _replaceRegex = new RegExp(\"//+\", 'g');\n\n  private static _removeDuplicateSeps(p: string): string {\n    p = p.replace(this._replaceRegex, this.sep);\n    return p;\n  }\n\n  // The platform-specific path delimiter. BrowserFS uses `:`.\n  public static delimiter = ':';\n\n  public static posix = path;\n  // XXX: Typing hack. We don't actually support win32.\n  public static win32 = path;\n}\n\nvar _: typeof _path = path;\n\nexport = path;\n","import Process = require('./process');\nimport TTD = require('./tty');\n\nvar process = new Process(),\n  processProxy: Process = <any> {};\n\nfunction defineKey(key: string) {\n  if ((<any> processProxy)[key]) {\n    // Probably a builtin Object property we don't care about.\n    return;\n  }\n  if (typeof (<any> process)[key] === 'function') {\n    (<any> processProxy)[key] = function() {\n      return (<Function> (<any> process)[key]).apply(process, arguments);\n    };\n  } else {\n    (<any> processProxy)[key] = (<any> process)[key];\n  }\n}\n\nfor (var key in process) {\n  // Don't check if process.hasOwnProperty; we want to also expose objects\n  // up the prototype hierarchy.\n  defineKey(key);\n}\n\n// Special key: Ensure we update public-facing values of stdin/stdout/stderr.\nprocessProxy.initializeTTYs = function() {\n  if (process.stdin === null) {\n    process.initializeTTYs();\n    processProxy.stdin = process.stdin;\n    processProxy.stdout = process.stdout;\n    processProxy.stderr = process.stderr;\n  }\n};\n\nprocess.nextTick(() => {\n  processProxy.initializeTTYs();\n});\n\nexport = processProxy;\n","// Use path and TTY for type information only. We lazily pull them in\n// to avoid circular dependencies :(\n// (path depends on process for cwd(), TTY depends on streams which depends\n//  on process.nextTick/process.stdout/stderr/stdin).\nimport _path = require('path');\nimport _TTY = require('./tty');\nimport events = require('events');\n\n// Path depends on process. Avoid a circular reference by dynamically including path when we need it.\nvar path: typeof _path = null;\n\nclass Item {\n  private fun: Function;\n  private array: any[];\n  constructor(fun: Function, array: any[]) {\n    this.fun = fun;\n    this.array = array;\n  }\n\n  public run(): void {\n    this.fun.apply(null, this.array);\n  }\n}\n\n/**\n * Contains a queue of Items for process.nextTick.\n * Inspired by node-process: https://github.com/defunctzombie/node-process\n */\nclass NextTickQueue {\n  private _queue: Item[] = [];\n  private _draining = false;\n  // Used/assigned by the drainQueue function.\n  private _currentQueue: Item[] = null;\n  private _queueIndex = -1;\n\n  public push(item: Item): void {\n    if (this._queue.push(item) === 1 && !this._draining) {\n      setTimeout(() => this._drainQueue(), 0);\n    }\n  }\n\n  private _cleanUpNextTick() {\n    this._draining = false;\n    if (this._currentQueue && this._currentQueue.length) {\n      this._queue = this._currentQueue.concat(this._queue);\n    } else {\n      this._queueIndex = -1;\n    }\n    if (this._queue.length) {\n      this._drainQueue();\n    }\n  }\n\n  private _drainQueue() {\n    if (this._draining) {\n      return;\n    }\n    // If an Item throws an unhandled exception, this function will clean things up.\n    var timeout = setTimeout(() => this._cleanUpNextTick());\n    this._draining = true;\n\n    var len = this._queue.length;\n    while(len) {\n      this._currentQueue = this._queue;\n      this._queue = [];\n      while (++this._queueIndex < len) {\n        if (this._currentQueue) {\n          this._currentQueue[this._queueIndex].run();\n        }\n      }\n      this._queueIndex = -1;\n      len = this._queue.length;\n    }\n    this._currentQueue = null;\n    this._draining = false;\n    clearTimeout(timeout);\n  }\n}\n\n/**\n * Partial implementation of Node's `process` module.\n * We implement the portions that are relevant for the filesystem.\n * @see http://nodejs.org/api/process.html\n * @class\n */\nclass Process extends events.EventEmitter implements NodeJS.Process {\n  private startTime = Date.now();\n\n  private _cwd: string = '/';\n  /**\n   * Changes the current working directory.\n   *\n   * **Note**: BrowserFS does not validate that the directory actually exists.\n   *\n   * @example Usage example\n   *   console.log('Starting directory: ' + process.cwd());\n   *   process.chdir('/tmp');\n   *   console.log('New directory: ' + process.cwd());\n   * @param [String] dir The directory to change to.\n   */\n  public chdir(dir: string): void {\n    // XXX: Circular dependency hack.\n    if (path === null) {\n      path = require('path');\n    }\n    this._cwd = path.resolve(dir);\n  }\n  /**\n   * Returns the current working directory.\n   * @example Usage example\n   *   console.log('Current directory: ' + process.cwd());\n   * @return [String] The current working directory.\n   */\n  public cwd(): string {\n    return this._cwd;\n  }\n  /**\n   * Returns what platform you are running on.\n   * @return [String]\n   */\n  public platform: string = 'browser';\n  /**\n   * Number of seconds BrowserFS has been running.\n   * @return [Number]\n   */\n  public uptime(): number {\n    return ((Date.now() - this.startTime) / 1000) | 0;\n  }\n\n  public argv: string[] = [];\n  public execArgv: string[] = [];\n  public stdout: _TTY = null;\n  public stderr: _TTY = null;\n  public stdin: _TTY = null;\n  public domain: NodeJS.Domain = null;\n\n  private _queue: NextTickQueue = new NextTickQueue();\n\n  public nextTick(fun: any, ...args: any[]) {\n    this._queue.push(new Item(fun, args));\n  }\n\n  public execPath = __dirname;\n\n  public abort(): void {\n    this.emit('abort');\n  }\n\n  public env: {[name: string]: string} = {};\n  public exitCode: number = 0;\n  public exit(code: number): void {\n    this.exitCode = code;\n    this.emit('exit', [code]);\n  }\n\n  private _gid: number = 1;\n  public getgid(): number {\n    return this._gid;\n  }\n  public setgid(gid: number | string): void {\n    if (typeof gid === 'number') {\n      this._gid = gid;\n    } else {\n      this._gid = 1;\n    }\n  }\n\n  private _uid: number = 1;\n  public getuid(): number {\n    return this._uid;\n  }\n  public setuid(uid: number | string): void {\n    if (typeof uid === 'number') {\n      this._uid = uid;\n    } else {\n      this._uid = 1;\n    }\n  }\n\n  public version: string = 'v5.0';\n\n  public versions = {\n    http_parser: '0.0',\n    node: '5.0',\n    v8: '0.0',\n    uv: '0.0',\n    zlib: '0.0',\n    ares: '0.0',\n    icu: '0.0',\n    modules: '0',\n    openssl: '0.0'\n  };\n\n  public config = {\n    target_defaults:\n    { cflags: <any[]> [],\n      default_configuration: 'Release',\n      defines: <string[]> [],\n      include_dirs: <string[]> [],\n      libraries: <string[]> [] },\n    variables:\n    { clang: 0,\n      host_arch: 'x32',\n      node_install_npm: false,\n      node_install_waf: false,\n      node_prefix: '',\n      node_shared_cares: false,\n      node_shared_http_parser: false,\n      node_shared_libuv: false,\n      node_shared_zlib: false,\n      node_shared_v8: false,\n      node_use_dtrace: false,\n      node_use_etw: false,\n      node_use_openssl: false,\n      node_shared_openssl: false,\n      strict_aliasing: false,\n      target_arch: 'x32',\n      v8_use_snapshot: false,\n      v8_no_strict_aliasing: 0,\n      visibility: '' } };\n\n  public kill(pid: number, signal?: string): void {\n    this.emit('kill', [pid, signal]);\n  }\n\n  public pid = (Math.random()*1000)|0;\n\n  public title = 'node';\n  public arch = 'x32';\n  public memoryUsage(): {rss: number; heapTotal: number; heapUsed: number;} {\n    return { rss: 0, heapTotal: 0, heapUsed: 0 }\n  }\n\n  private _mask = 18;\n  public umask(mask: number = this._mask): number {\n    let oldMask = this._mask;\n    this._mask = mask;\n    this.emit('umask', [mask]);\n    return oldMask;\n  }\n\n  public hrtime(): [number, number] {\n    let timeinfo: number;\n    if (typeof performance !== 'undefined') {\n      timeinfo = performance.now();\n    } else if (Date['now']) {\n      timeinfo = Date.now();\n    } else {\n      timeinfo = (new Date()).getTime();\n    }\n    let secs = (timeinfo / 1000)|0;\n    timeinfo -= secs * 1000;\n    timeinfo = (timeinfo * 1000000)|0;\n    return [secs, timeinfo];\n  }\n\n  /**\n   * [BFS only] Initialize the TTY devices.\n   */\n  public initializeTTYs(): void {\n    // Guard against multiple invocations.\n    if (this.stdout === null) {\n      let TTY: typeof _TTY = require('./tty');\n      this.stdout = new TTY();\n      this.stderr = new TTY();\n      this.stdin = new TTY();\n    }\n  }\n\n  /**\n   * Worker-only function; irrelevant here.\n   */\n  public disconnect(): void {\n\n  }\n  // Undefined in main thread. Worker-only.\n  public connected: boolean = undefined;\n}\n\nexport = Process;","import stream = require('stream');\n\nclass TTY extends stream.Duplex {\n  public isRaw: boolean = false;\n  public columns: number = 80;\n  public rows: number = 120;\n  public isTTY: boolean = true;\n  private _bufferedWrites: Buffer[] = [];\n  private _waitingForWrites: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Toggle raw mode.\n   */\n  public setRawMode(mode: boolean): void {\n    if (this.isRaw !== mode) {\n      this.isRaw = mode;\n      // [BFS] TTY implementations can use this to change their event emitting\n      //       patterns.\n      this.emit('modeChange');\n    }\n  }\n\n  /**\n   * [BFS] Update the number of columns available on the terminal.\n   */\n  public changeColumns(columns: number): void {\n    if (columns !== this.columns) {\n      this.columns = columns;\n      // Resize event.\n      this.emit('resize');\n    }\n  }\n\n  /**\n   * [BFS] Update the number of rows available on the terminal.\n   */\n  public changeRows(rows: number): void {\n    if (rows !== this.rows) {\n      this.rows = rows;\n      // Resize event.\n      this.emit('resize');\n    }\n  }\n\n  /**\n   * Returns 'true' if the given object is a TTY.\n   */\n  public static isatty(fd: any): fd is TTY {\n    return fd && fd instanceof TTY;\n  }\n\n  public _write(chunk: any, encoding: string, cb: Function): void {\n    var error: any;\n    try {\n      var data: Buffer;\n      if (typeof(chunk) === 'string') {\n        data = new Buffer(chunk, encoding);\n      } else {\n        data = chunk;\n      }\n      this._bufferedWrites.push(data);\n      if (this._waitingForWrites) {\n        this._read(1024);\n      }\n    } catch (e) {\n      error = e;\n    } finally {\n      cb(error);\n    }\n  }\n\n  public _read(size: number): void {\n    // Size is advisory -- we can ignore it.\n    if (this._bufferedWrites.length === 0) {\n      this._waitingForWrites = true;\n    } else {\n      while (this._bufferedWrites.length > 0) {\n        this._waitingForWrites = this.push(this._bufferedWrites.shift());\n        if (!this._waitingForWrites) {\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport = TTY;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}","// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar hasPrependListener = typeof EE.prototype.prependListener === 'function';\n\nfunction prependListener(emitter, event, fn) {\n  if (hasPrependListener) return emitter.prependListener(event, fn);\n\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS. This is here\n  // only because this code needs to continue to work with older versions\n  // of Node.js that do not include the prependListener() method. The goal\n  // is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nvar Duplex;\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nvar Duplex;\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = bufferShim.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended) return 0;\n\n  if (state.objectMode) return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length) return state.buffer[0].length;else return state.length;\n  }\n\n  if (n <= 0) return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else {\n      return state.length;\n    }\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (typeof n !== 'number' || n > 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading) n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended) state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0) endReadable(this);\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && !this._readableState.endEmitted) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0) return null;\n\n  if (length === 0) ret = null;else if (objectMode) ret = list.shift();else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode) ret = list.join('');else if (list.length === 1) ret = list[0];else ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode) ret = '';else ret = bufferShim.allocUnsafe(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var _buf = list[0];\n        var cpy = Math.min(n - c, _buf.length);\n\n        if (stringMode) ret += _buf.slice(0, cpy);else _buf.copy(ret, c, 0, cpy);\n\n        if (cpy < _buf.length) list[0] = _buf.slice(cpy);else list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nvar Duplex;\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n    });\n  } catch (_) {}\n})();\n\nvar Duplex;\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = bufferShim.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) processNextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}","'use strict';\n\nvar buffer = require('buffer');\nvar Buffer = buffer.Buffer;\nvar SlowBuffer = buffer.SlowBuffer;\nvar MAX_LEN = buffer.kMaxLength || 2147483647;\nexports.alloc = function alloc(size, fill, encoding) {\n  if (typeof Buffer.alloc === 'function') {\n    return Buffer.alloc(size, fill, encoding);\n  }\n  if (typeof encoding === 'number') {\n    throw new TypeError('encoding must not be number');\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  var enc = encoding;\n  var _fill = fill;\n  if (_fill === undefined) {\n    enc = undefined;\n    _fill = 0;\n  }\n  var buf = new Buffer(size);\n  if (typeof _fill === 'string') {\n    var fillBuf = new Buffer(_fill, enc);\n    var flen = fillBuf.length;\n    var i = -1;\n    while (++i < size) {\n      buf[i] = fillBuf[i % flen];\n    }\n  } else {\n    buf.fill(_fill);\n  }\n  return buf;\n}\nexports.allocUnsafe = function allocUnsafe(size) {\n  if (typeof Buffer.allocUnsafe === 'function') {\n    return Buffer.allocUnsafe(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new Buffer(size);\n}\nexports.from = function from(value, encodingOrOffset, length) {\n  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {\n    return Buffer.from(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (typeof value === 'string') {\n    return new Buffer(value, encodingOrOffset);\n  }\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    var offset = encodingOrOffset;\n    if (arguments.length === 1) {\n      return new Buffer(value);\n    }\n    if (typeof offset === 'undefined') {\n      offset = 0;\n    }\n    var len = length;\n    if (typeof len === 'undefined') {\n      len = value.byteLength - offset;\n    }\n    if (offset >= value.byteLength) {\n      throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (len > value.byteLength - offset) {\n      throw new RangeError('\\'length\\' is out of bounds');\n    }\n    return new Buffer(value.slice(offset, offset + len));\n  }\n  if (Buffer.isBuffer(value)) {\n    var out = new Buffer(value.length);\n    value.copy(out, 0, 0, value.length);\n    return out;\n  }\n  if (value) {\n    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {\n      return new Buffer(value);\n    }\n    if (value.type === 'Buffer' && Array.isArray(value.data)) {\n      return new Buffer(value.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');\n}\nexports.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  if (typeof Buffer.allocUnsafeSlow === 'function') {\n    return Buffer.allocUnsafeSlow(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size >= MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new SlowBuffer(size);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = require(\"./lib/_stream_passthrough.js\")\n","var Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\nif (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream;\n}\n","module.exports = require(\"./lib/_stream_transform.js\")\n","module.exports = require(\"./lib/_stream_writable.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install is-buffer`\n */\n\nmodule.exports = function (obj) {\n  return !!(obj != null &&\n    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n      (obj.constructor &&\n      typeof obj.constructor.isBuffer === 'function' &&\n      obj.constructor.isBuffer(obj))\n    ))\n}\n","/* pako 1.0.3 nodeca/pako */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var t;t=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,t.pako=e()}}(function(){return function e(t,i,n){function a(o,s){if(!i[o]){if(!t[o]){var f=\"function\"==typeof require&&require;if(!s&&f)return f(o,!0);if(r)return r(o,!0);var l=new Error(\"Cannot find module '\"+o+\"'\");throw l.code=\"MODULE_NOT_FOUND\",l}var d=i[o]={exports:{}};t[o][0].call(d.exports,function(e){var i=t[o][1][e];return a(i?i:e)},d,d.exports,e,t,i,n)}return i[o].exports}for(var r=\"function\"==typeof require&&require,o=0;o<n.length;o++)a(n[o]);return a}({1:[function(e,t,i){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;i.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var i=t.shift();if(i){if(\"object\"!=typeof i)throw new TypeError(i+\"must be non-object\");for(var n in i)i.hasOwnProperty(n)&&(e[n]=i[n])}}return e},i.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var a={arraySet:function(e,t,i,n,a){if(t.subarray&&e.subarray)return void e.set(t.subarray(i,i+n),a);for(var r=0;r<n;r++)e[a+r]=t[i+r]},flattenChunks:function(e){var t,i,n,a,r,o;for(n=0,t=0,i=e.length;t<i;t++)n+=e[t].length;for(o=new Uint8Array(n),a=0,t=0,i=e.length;t<i;t++)r=e[t],o.set(r,a),a+=r.length;return o}},r={arraySet:function(e,t,i,n,a){for(var r=0;r<n;r++)e[a+r]=t[i+r]},flattenChunks:function(e){return[].concat.apply([],e)}};i.setTyped=function(e){e?(i.Buf8=Uint8Array,i.Buf16=Uint16Array,i.Buf32=Int32Array,i.assign(i,a)):(i.Buf8=Array,i.Buf16=Array,i.Buf32=Array,i.assign(i,r))},i.setTyped(n)},{}],2:[function(e,t,i){\"use strict\";function n(e,t){if(t<65537&&(e.subarray&&o||!e.subarray&&r))return String.fromCharCode.apply(null,a.shrinkBuf(e,t));for(var i=\"\",n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i}var a=e(\"./common\"),r=!0,o=!0;try{String.fromCharCode.apply(null,[0])}catch(e){r=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){o=!1}for(var s=new a.Buf8(256),f=0;f<256;f++)s[f]=f>=252?6:f>=248?5:f>=240?4:f>=224?3:f>=192?2:1;s[254]=s[254]=1,i.string2buf=function(e){var t,i,n,r,o,s=e.length,f=0;for(r=0;r<s;r++)i=e.charCodeAt(r),55296===(64512&i)&&r+1<s&&(n=e.charCodeAt(r+1),56320===(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),f+=i<128?1:i<2048?2:i<65536?3:4;for(t=new a.Buf8(f),o=0,r=0;o<f;r++)i=e.charCodeAt(r),55296===(64512&i)&&r+1<s&&(n=e.charCodeAt(r+1),56320===(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),i<128?t[o++]=i:i<2048?(t[o++]=192|i>>>6,t[o++]=128|63&i):i<65536?(t[o++]=224|i>>>12,t[o++]=128|i>>>6&63,t[o++]=128|63&i):(t[o++]=240|i>>>18,t[o++]=128|i>>>12&63,t[o++]=128|i>>>6&63,t[o++]=128|63&i);return t},i.buf2binstring=function(e){return n(e,e.length)},i.binstring2buf=function(e){for(var t=new a.Buf8(e.length),i=0,n=t.length;i<n;i++)t[i]=e.charCodeAt(i);return t},i.buf2string=function(e,t){var i,a,r,o,f=t||e.length,l=new Array(2*f);for(a=0,i=0;i<f;)if(r=e[i++],r<128)l[a++]=r;else if(o=s[r],o>4)l[a++]=65533,i+=o-1;else{for(r&=2===o?31:3===o?15:7;o>1&&i<f;)r=r<<6|63&e[i++],o--;o>1?l[a++]=65533:r<65536?l[a++]=r:(r-=65536,l[a++]=55296|r>>10&1023,l[a++]=56320|1023&r)}return n(l,a)},i.utf8border=function(e,t){var i;for(t=t||e.length,t>e.length&&(t=e.length),i=t-1;i>=0&&128===(192&e[i]);)i--;return i<0?t:0===i?t:i+s[e[i]]>t?i:t}},{\"./common\":1}],3:[function(e,t,i){\"use strict\";function n(e,t,i,n){for(var a=65535&e|0,r=e>>>16&65535|0,o=0;0!==i;){o=i>2e3?2e3:i,i-=o;do a=a+t[n++]|0,r=r+a|0;while(--o);a%=65521,r%=65521}return a|r<<16|0}t.exports=n},{}],4:[function(e,t,i){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],5:[function(e,t,i){\"use strict\";function n(){for(var e,t=[],i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t}function a(e,t,i,n){var a=r,o=n+i;e^=-1;for(var s=n;s<o;s++)e=e>>>8^a[255&(e^t[s])];return e^-1}var r=n();t.exports=a},{}],6:[function(e,t,i){\"use strict\";function n(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}t.exports=n},{}],7:[function(e,t,i){\"use strict\";var n=30,a=12;t.exports=function(e,t){var i,r,o,s,f,l,d,u,c,h,b,w,m,k,_,g,v,p,x,y,S,E,B,Z,A;i=e.state,r=e.next_in,Z=e.input,o=r+(e.avail_in-5),s=e.next_out,A=e.output,f=s-(t-e.avail_out),l=s+(e.avail_out-257),d=i.dmax,u=i.wsize,c=i.whave,h=i.wnext,b=i.window,w=i.hold,m=i.bits,k=i.lencode,_=i.distcode,g=(1<<i.lenbits)-1,v=(1<<i.distbits)-1;e:do{m<15&&(w+=Z[r++]<<m,m+=8,w+=Z[r++]<<m,m+=8),p=k[w&g];t:for(;;){if(x=p>>>24,w>>>=x,m-=x,x=p>>>16&255,0===x)A[s++]=65535&p;else{if(!(16&x)){if(0===(64&x)){p=k[(65535&p)+(w&(1<<x)-1)];continue t}if(32&x){i.mode=a;break e}e.msg=\"invalid literal/length code\",i.mode=n;break e}y=65535&p,x&=15,x&&(m<x&&(w+=Z[r++]<<m,m+=8),y+=w&(1<<x)-1,w>>>=x,m-=x),m<15&&(w+=Z[r++]<<m,m+=8,w+=Z[r++]<<m,m+=8),p=_[w&v];i:for(;;){if(x=p>>>24,w>>>=x,m-=x,x=p>>>16&255,!(16&x)){if(0===(64&x)){p=_[(65535&p)+(w&(1<<x)-1)];continue i}e.msg=\"invalid distance code\",i.mode=n;break e}if(S=65535&p,x&=15,m<x&&(w+=Z[r++]<<m,m+=8,m<x&&(w+=Z[r++]<<m,m+=8)),S+=w&(1<<x)-1,S>d){e.msg=\"invalid distance too far back\",i.mode=n;break e}if(w>>>=x,m-=x,x=s-f,S>x){if(x=S-x,x>c&&i.sane){e.msg=\"invalid distance too far back\",i.mode=n;break e}if(E=0,B=b,0===h){if(E+=u-x,x<y){y-=x;do A[s++]=b[E++];while(--x);E=s-S,B=A}}else if(h<x){if(E+=u+h-x,x-=h,x<y){y-=x;do A[s++]=b[E++];while(--x);if(E=0,h<y){x=h,y-=x;do A[s++]=b[E++];while(--x);E=s-S,B=A}}}else if(E+=h-x,x<y){y-=x;do A[s++]=b[E++];while(--x);E=s-S,B=A}for(;y>2;)A[s++]=B[E++],A[s++]=B[E++],A[s++]=B[E++],y-=3;y&&(A[s++]=B[E++],y>1&&(A[s++]=B[E++]))}else{E=s-S;do A[s++]=A[E++],A[s++]=A[E++],A[s++]=A[E++],y-=3;while(y>2);y&&(A[s++]=A[E++],y>1&&(A[s++]=A[E++]))}break}}break}}while(r<o&&s<l);y=m>>3,r-=y,m-=y<<3,w&=(1<<m)-1,e.next_in=r,e.next_out=s,e.avail_in=r<o?5+(o-r):5-(r-o),e.avail_out=s<l?257+(l-s):257-(s-l),i.hold=w,i.bits=m}},{}],8:[function(e,t,i){\"use strict\";function n(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function a(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new _.Buf16(320),this.work=new _.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function r(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=D,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new _.Buf32(we),t.distcode=t.distdyn=new _.Buf32(me),t.sane=1,t.back=-1,z):C}function o(e){var t;return e&&e.state?(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,r(e)):C}function s(e,t){var i,n;return e&&e.state?(n=e.state,t<0?(i=0,t=-t):(i=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15)?C:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,o(e))):C}function f(e,t){var i,n;return e?(n=new a,e.state=n,n.window=null,i=s(e,t),i!==z&&(e.state=null),i):C}function l(e){return f(e,_e)}function d(e){if(ge){var t;for(m=new _.Buf32(512),k=new _.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(x(S,e.lens,0,288,m,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;x(E,e.lens,0,32,k,0,e.work,{bits:5}),ge=!1}e.lencode=m,e.lenbits=9,e.distcode=k,e.distbits=5}function u(e,t,i,n){var a,r=e.state;return null===r.window&&(r.wsize=1<<r.wbits,r.wnext=0,r.whave=0,r.window=new _.Buf8(r.wsize)),n>=r.wsize?(_.arraySet(r.window,t,i-r.wsize,r.wsize,0),r.wnext=0,r.whave=r.wsize):(a=r.wsize-r.wnext,a>n&&(a=n),_.arraySet(r.window,t,i-n,a,r.wnext),n-=a,n?(_.arraySet(r.window,t,i-n,n,0),r.wnext=n,r.whave=r.wsize):(r.wnext+=a,r.wnext===r.wsize&&(r.wnext=0),r.whave<r.wsize&&(r.whave+=a))),0}function c(e,t){var i,a,r,o,s,f,l,c,h,b,w,m,k,we,me,ke,_e,ge,ve,pe,xe,ye,Se,Ee,Be=0,Ze=new _.Buf8(4),Ae=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return C;i=e.state,i.mode===X&&(i.mode=W),s=e.next_out,r=e.output,l=e.avail_out,o=e.next_in,a=e.input,f=e.avail_in,c=i.hold,h=i.bits,b=f,w=l,ye=z;e:for(;;)switch(i.mode){case D:if(0===i.wrap){i.mode=W;break}for(;h<16;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(2&i.wrap&&35615===c){i.check=0,Ze[0]=255&c,Ze[1]=c>>>8&255,i.check=v(i.check,Ze,2,0),c=0,h=0,i.mode=F;break}if(i.flags=0,i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&c)<<8)+(c>>8))%31){e.msg=\"incorrect header check\",i.mode=ce;break}if((15&c)!==U){e.msg=\"unknown compression method\",i.mode=ce;break}if(c>>>=4,h-=4,xe=(15&c)+8,0===i.wbits)i.wbits=xe;else if(xe>i.wbits){e.msg=\"invalid window size\",i.mode=ce;break}i.dmax=1<<xe,e.adler=i.check=1,i.mode=512&c?q:X,c=0,h=0;break;case F:for(;h<16;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(i.flags=c,(255&i.flags)!==U){e.msg=\"unknown compression method\",i.mode=ce;break}if(57344&i.flags){e.msg=\"unknown header flags set\",i.mode=ce;break}i.head&&(i.head.text=c>>8&1),512&i.flags&&(Ze[0]=255&c,Ze[1]=c>>>8&255,i.check=v(i.check,Ze,2,0)),c=0,h=0,i.mode=L;case L:for(;h<32;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}i.head&&(i.head.time=c),512&i.flags&&(Ze[0]=255&c,Ze[1]=c>>>8&255,Ze[2]=c>>>16&255,Ze[3]=c>>>24&255,i.check=v(i.check,Ze,4,0)),c=0,h=0,i.mode=H;case H:for(;h<16;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}i.head&&(i.head.xflags=255&c,i.head.os=c>>8),512&i.flags&&(Ze[0]=255&c,Ze[1]=c>>>8&255,i.check=v(i.check,Ze,2,0)),c=0,h=0,i.mode=M;case M:if(1024&i.flags){for(;h<16;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}i.length=c,i.head&&(i.head.extra_len=c),512&i.flags&&(Ze[0]=255&c,Ze[1]=c>>>8&255,i.check=v(i.check,Ze,2,0)),c=0,h=0}else i.head&&(i.head.extra=null);i.mode=j;case j:if(1024&i.flags&&(m=i.length,m>f&&(m=f),m&&(i.head&&(xe=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Array(i.head.extra_len)),_.arraySet(i.head.extra,a,o,m,xe)),512&i.flags&&(i.check=v(i.check,a,m,o)),f-=m,o+=m,i.length-=m),i.length))break e;i.length=0,i.mode=K;case K:if(2048&i.flags){if(0===f)break e;m=0;do xe=a[o+m++],i.head&&xe&&i.length<65536&&(i.head.name+=String.fromCharCode(xe));while(xe&&m<f);if(512&i.flags&&(i.check=v(i.check,a,m,o)),f-=m,o+=m,xe)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=P;case P:if(4096&i.flags){if(0===f)break e;m=0;do xe=a[o+m++],i.head&&xe&&i.length<65536&&(i.head.comment+=String.fromCharCode(xe));while(xe&&m<f);if(512&i.flags&&(i.check=v(i.check,a,m,o)),f-=m,o+=m,xe)break e}else i.head&&(i.head.comment=null);i.mode=Y;case Y:if(512&i.flags){for(;h<16;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(c!==(65535&i.check)){e.msg=\"header crc mismatch\",i.mode=ce;break}c=0,h=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=X;break;case q:for(;h<32;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}e.adler=i.check=n(c),c=0,h=0,i.mode=G;case G:if(0===i.havedict)return e.next_out=s,e.avail_out=l,e.next_in=o,e.avail_in=f,i.hold=c,i.bits=h,N;e.adler=i.check=1,i.mode=X;case X:if(t===Z||t===A)break e;case W:if(i.last){c>>>=7&h,h-=7&h,i.mode=le;break}for(;h<3;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}switch(i.last=1&c,c>>>=1,h-=1,3&c){case 0:i.mode=J;break;case 1:if(d(i),i.mode=ie,t===A){c>>>=2,h-=2;break e}break;case 2:i.mode=$;break;case 3:e.msg=\"invalid block type\",i.mode=ce}c>>>=2,h-=2;break;case J:for(c>>>=7&h,h-=7&h;h<32;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if((65535&c)!==(c>>>16^65535)){e.msg=\"invalid stored block lengths\",i.mode=ce;break}if(i.length=65535&c,c=0,h=0,i.mode=Q,t===A)break e;case Q:i.mode=V;case V:if(m=i.length){if(m>f&&(m=f),m>l&&(m=l),0===m)break e;_.arraySet(r,a,o,m,s),f-=m,o+=m,l-=m,s+=m,i.length-=m;break}i.mode=X;break;case $:for(;h<14;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(i.nlen=(31&c)+257,c>>>=5,h-=5,i.ndist=(31&c)+1,c>>>=5,h-=5,i.ncode=(15&c)+4,c>>>=4,h-=4,i.nlen>286||i.ndist>30){e.msg=\"too many length or distance symbols\",i.mode=ce;break}i.have=0,i.mode=ee;case ee:for(;i.have<i.ncode;){for(;h<3;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}i.lens[Ae[i.have++]]=7&c,c>>>=3,h-=3}for(;i.have<19;)i.lens[Ae[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,Se={bits:i.lenbits},ye=x(y,i.lens,0,19,i.lencode,0,i.work,Se),i.lenbits=Se.bits,ye){e.msg=\"invalid code lengths set\",i.mode=ce;break}i.have=0,i.mode=te;case te:for(;i.have<i.nlen+i.ndist;){for(;Be=i.lencode[c&(1<<i.lenbits)-1],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(me<=h);){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(_e<16)c>>>=me,h-=me,i.lens[i.have++]=_e;else{if(16===_e){for(Ee=me+2;h<Ee;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(c>>>=me,h-=me,0===i.have){e.msg=\"invalid bit length repeat\",i.mode=ce;break}xe=i.lens[i.have-1],m=3+(3&c),c>>>=2,h-=2}else if(17===_e){for(Ee=me+3;h<Ee;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}c>>>=me,h-=me,xe=0,m=3+(7&c),c>>>=3,h-=3}else{for(Ee=me+7;h<Ee;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}c>>>=me,h-=me,xe=0,m=11+(127&c),c>>>=7,h-=7}if(i.have+m>i.nlen+i.ndist){e.msg=\"invalid bit length repeat\",i.mode=ce;break}for(;m--;)i.lens[i.have++]=xe}}if(i.mode===ce)break;if(0===i.lens[256]){e.msg=\"invalid code -- missing end-of-block\",i.mode=ce;break}if(i.lenbits=9,Se={bits:i.lenbits},ye=x(S,i.lens,0,i.nlen,i.lencode,0,i.work,Se),i.lenbits=Se.bits,ye){e.msg=\"invalid literal/lengths set\",i.mode=ce;break}if(i.distbits=6,i.distcode=i.distdyn,Se={bits:i.distbits},ye=x(E,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,Se),i.distbits=Se.bits,ye){e.msg=\"invalid distances set\",i.mode=ce;break}if(i.mode=ie,t===A)break e;case ie:i.mode=ne;case ne:if(f>=6&&l>=258){e.next_out=s,e.avail_out=l,e.next_in=o,e.avail_in=f,i.hold=c,i.bits=h,p(e,w),s=e.next_out,r=e.output,l=e.avail_out,o=e.next_in,a=e.input,f=e.avail_in,c=i.hold,h=i.bits,i.mode===X&&(i.back=-1);break}for(i.back=0;Be=i.lencode[c&(1<<i.lenbits)-1],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(me<=h);){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(ke&&0===(240&ke)){for(ge=me,ve=ke,pe=_e;Be=i.lencode[pe+((c&(1<<ge+ve)-1)>>ge)],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(ge+me<=h);){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}c>>>=ge,h-=ge,i.back+=ge}if(c>>>=me,h-=me,i.back+=me,i.length=_e,0===ke){i.mode=fe;break}if(32&ke){i.back=-1,i.mode=X;break}if(64&ke){e.msg=\"invalid literal/length code\",i.mode=ce;break}i.extra=15&ke,i.mode=ae;case ae:if(i.extra){for(Ee=i.extra;h<Ee;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}i.length+=c&(1<<i.extra)-1,c>>>=i.extra,h-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=re;case re:for(;Be=i.distcode[c&(1<<i.distbits)-1],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(me<=h);){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(0===(240&ke)){for(ge=me,ve=ke,pe=_e;Be=i.distcode[pe+((c&(1<<ge+ve)-1)>>ge)],me=Be>>>24,ke=Be>>>16&255,_e=65535&Be,!(ge+me<=h);){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}c>>>=ge,h-=ge,i.back+=ge}if(c>>>=me,h-=me,i.back+=me,64&ke){e.msg=\"invalid distance code\",i.mode=ce;break}i.offset=_e,i.extra=15&ke,i.mode=oe;case oe:if(i.extra){for(Ee=i.extra;h<Ee;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}i.offset+=c&(1<<i.extra)-1,c>>>=i.extra,h-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg=\"invalid distance too far back\",i.mode=ce;break}i.mode=se;case se:if(0===l)break e;if(m=w-l,i.offset>m){if(m=i.offset-m,m>i.whave&&i.sane){e.msg=\"invalid distance too far back\",i.mode=ce;break}m>i.wnext?(m-=i.wnext,k=i.wsize-m):k=i.wnext-m,m>i.length&&(m=i.length),we=i.window}else we=r,k=s-i.offset,m=i.length;m>l&&(m=l),l-=m,i.length-=m;do r[s++]=we[k++];while(--m);0===i.length&&(i.mode=ne);break;case fe:if(0===l)break e;r[s++]=i.length,l--,i.mode=ne;break;case le:if(i.wrap){for(;h<32;){if(0===f)break e;f--,c|=a[o++]<<h,h+=8}if(w-=l,e.total_out+=w,i.total+=w,w&&(e.adler=i.check=i.flags?v(i.check,r,w,s-w):g(i.check,r,w,s-w)),w=l,(i.flags?c:n(c))!==i.check){e.msg=\"incorrect data check\",i.mode=ce;break}c=0,h=0}i.mode=de;case de:if(i.wrap&&i.flags){for(;h<32;){if(0===f)break e;f--,c+=a[o++]<<h,h+=8}if(c!==(4294967295&i.total)){e.msg=\"incorrect length check\",i.mode=ce;break}c=0,h=0}i.mode=ue;case ue:ye=R;break e;case ce:ye=O;break e;case he:return I;case be:default:return C}return e.next_out=s,e.avail_out=l,e.next_in=o,e.avail_in=f,i.hold=c,i.bits=h,(i.wsize||w!==e.avail_out&&i.mode<ce&&(i.mode<le||t!==B))&&u(e,e.output,e.next_out,w-e.avail_out)?(i.mode=he,I):(b-=e.avail_in,w-=e.avail_out,e.total_in+=b,e.total_out+=w,i.total+=w,i.wrap&&w&&(e.adler=i.check=i.flags?v(i.check,r,w,e.next_out-w):g(i.check,r,w,e.next_out-w)),e.data_type=i.bits+(i.last?64:0)+(i.mode===X?128:0)+(i.mode===ie||i.mode===Q?256:0),(0===b&&0===w||t===B)&&ye===z&&(ye=T),ye)}function h(e){if(!e||!e.state)return C;var t=e.state;return t.window&&(t.window=null),e.state=null,z}function b(e,t){var i;return e&&e.state?(i=e.state,0===(2&i.wrap)?C:(i.head=t,t.done=!1,z)):C}function w(e,t){var i,n,a,r=t.length;return e&&e.state?(i=e.state,0!==i.wrap&&i.mode!==G?C:i.mode===G&&(n=1,n=g(n,t,r,0),n!==i.check)?O:(a=u(e,t,r,r))?(i.mode=he,I):(i.havedict=1,z)):C}var m,k,_=e(\"../utils/common\"),g=e(\"./adler32\"),v=e(\"./crc32\"),p=e(\"./inffast\"),x=e(\"./inftrees\"),y=0,S=1,E=2,B=4,Z=5,A=6,z=0,R=1,N=2,C=-2,O=-3,I=-4,T=-5,U=8,D=1,F=2,L=3,H=4,M=5,j=6,K=7,P=8,Y=9,q=10,G=11,X=12,W=13,J=14,Q=15,V=16,$=17,ee=18,te=19,ie=20,ne=21,ae=22,re=23,oe=24,se=25,fe=26,le=27,de=28,ue=29,ce=30,he=31,be=32,we=852,me=592,ke=15,_e=ke,ge=!0;i.inflateReset=o,i.inflateReset2=s,i.inflateResetKeep=r,i.inflateInit=l,i.inflateInit2=f,i.inflate=c,i.inflateEnd=h,i.inflateGetHeader=b,i.inflateSetDictionary=w,i.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":1,\"./adler32\":3,\"./crc32\":5,\"./inffast\":7,\"./inftrees\":9}],9:[function(e,t,i){\"use strict\";var n=e(\"../utils/common\"),a=15,r=852,o=592,s=0,f=1,l=2,d=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],u=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],c=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],h=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,i,b,w,m,k,_){var g,v,p,x,y,S,E,B,Z,A=_.bits,z=0,R=0,N=0,C=0,O=0,I=0,T=0,U=0,D=0,F=0,L=null,H=0,M=new n.Buf16(a+1),j=new n.Buf16(a+1),K=null,P=0;for(z=0;z<=a;z++)M[z]=0;for(R=0;R<b;R++)M[t[i+R]]++;for(O=A,C=a;C>=1&&0===M[C];C--);if(O>C&&(O=C),0===C)return w[m++]=20971520,w[m++]=20971520,_.bits=1,0;for(N=1;N<C&&0===M[N];N++);for(O<N&&(O=N),U=1,z=1;z<=a;z++)if(U<<=1,U-=M[z],U<0)return-1;if(U>0&&(e===s||1!==C))return-1;for(j[1]=0,z=1;z<a;z++)j[z+1]=j[z]+M[z];for(R=0;R<b;R++)0!==t[i+R]&&(k[j[t[i+R]]++]=R);if(e===s?(L=K=k,S=19):e===f?(L=d,H-=257,K=u,P-=257,S=256):(L=c,K=h,S=-1),F=0,R=0,z=N,y=m,I=O,T=0,p=-1,D=1<<O,x=D-1,e===f&&D>r||e===l&&D>o)return 1;for(var Y=0;;){Y++,E=z-T,k[R]<S?(B=0,Z=k[R]):k[R]>S?(B=K[P+k[R]],Z=L[H+k[R]]):(B=96,Z=0),g=1<<z-T,v=1<<I,N=v;do v-=g,w[y+(F>>T)+v]=E<<24|B<<16|Z|0;while(0!==v);for(g=1<<z-1;F&g;)g>>=1;if(0!==g?(F&=g-1,F+=g):F=0,R++,0===--M[z]){if(z===C)break;z=t[i+k[R]]}if(z>O&&(F&x)!==p){for(0===T&&(T=O),y+=N,I=z-T,U=1<<I;I+T<C&&(U-=M[I+T],!(U<=0));)I++,U<<=1;if(D+=1<<I,e===f&&D>r||e===l&&D>o)return 1;p=F&x,w[p]=O<<24|I<<16|y-m|0}}return 0!==F&&(w[y+F]=z-T<<24|64<<16|0),_.bits=O,0}},{\"../utils/common\":1}],10:[function(e,t,i){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],11:[function(e,t,i){\"use strict\";function n(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}t.exports=n},{}],\"/lib/inflate.js\":[function(e,t,i){\"use strict\";function n(e){if(!(this instanceof n))return new n(e);this.options=s.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0===(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new u,this.strm.avail_out=0;var i=o.inflateInit2(this.strm,t.windowBits);if(i!==l.Z_OK)throw new Error(d[i]);this.header=new c,o.inflateGetHeader(this.strm,this.header)}function a(e,t){var i=new n(t);if(i.push(e,!0),i.err)throw i.msg;return i.result}function r(e,t){return t=t||{},t.raw=!0,a(e,t)}var o=e(\"./zlib/inflate\"),s=e(\"./utils/common\"),f=e(\"./utils/strings\"),l=e(\"./zlib/constants\"),d=e(\"./zlib/messages\"),u=e(\"./zlib/zstream\"),c=e(\"./zlib/gzheader\"),h=Object.prototype.toString;n.prototype.push=function(e,t){var i,n,a,r,d,u,c=this.strm,b=this.options.chunkSize,w=this.options.dictionary,m=!1;if(this.ended)return!1;n=t===~~t?t:t===!0?l.Z_FINISH:l.Z_NO_FLUSH,\"string\"==typeof e?c.input=f.binstring2buf(e):\"[object ArrayBuffer]\"===h.call(e)?c.input=new Uint8Array(e):c.input=e,c.next_in=0,c.avail_in=c.input.length;do{if(0===c.avail_out&&(c.output=new s.Buf8(b),c.next_out=0,c.avail_out=b),i=o.inflate(c,l.Z_NO_FLUSH),i===l.Z_NEED_DICT&&w&&(u=\"string\"==typeof w?f.string2buf(w):\"[object ArrayBuffer]\"===h.call(w)?new Uint8Array(w):w,i=o.inflateSetDictionary(this.strm,u)),i===l.Z_BUF_ERROR&&m===!0&&(i=l.Z_OK,m=!1),i!==l.Z_STREAM_END&&i!==l.Z_OK)return this.onEnd(i),this.ended=!0,!1;c.next_out&&(0!==c.avail_out&&i!==l.Z_STREAM_END&&(0!==c.avail_in||n!==l.Z_FINISH&&n!==l.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(a=f.utf8border(c.output,c.next_out),r=c.next_out-a,d=f.buf2string(c.output,a),c.next_out=r,c.avail_out=b-r,r&&s.arraySet(c.output,c.output,a,r,0),this.onData(d)):this.onData(s.shrinkBuf(c.output,c.next_out)))),0===c.avail_in&&0===c.avail_out&&(m=!0)}while((c.avail_in>0||0===c.avail_out)&&i!==l.Z_STREAM_END);return i===l.Z_STREAM_END&&(n=l.Z_FINISH),n===l.Z_FINISH?(i=o.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===l.Z_OK):n!==l.Z_SYNC_FLUSH||(this.onEnd(l.Z_OK),c.avail_out=0,!0)},n.prototype.onData=function(e){this.chunks.push(e)},n.prototype.onEnd=function(e){e===l.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=s.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},i.Inflate=n,i.inflate=a,i.inflateRaw=r,i.ungzip=a},{\"./utils/common\":1,\"./utils/strings\":2,\"./zlib/constants\":4,\"./zlib/gzheader\":6,\"./zlib/inflate\":8,\"./zlib/messages\":10,\"./zlib/zstream\":11}]},{},[])(\"/lib/inflate.js\")});\n","import file_system = require('../core/file_system');\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport file_flag = require('../core/file_flag');\nimport file = require('../core/file');\nimport Stats from '../core/node_fs_stats';\nimport preload_file = require('../generic/preload_file');\nimport * as path from 'path';\n\ninterface IAsyncOperation {\n\tapiMethod: string;\n\targuments: any[];\n}\n\n/**\n * We define our own file to interpose on syncSync() for mirroring purposes.\n */\nclass MirrorFile extends preload_file.PreloadFile<AsyncMirror> implements file.File {\n  constructor(fs: AsyncMirror, path: string, flag: file_flag.FileFlag, stat: Stats, data: Buffer) {\n    super(fs, path, flag, stat, data);\n  }\n\n  public syncSync(): void {\n    if (this.isDirty()) {\n      this._fs._syncSync(this);\n      this.resetDirty();\n    }\n  }\n\n  public closeSync(): void {\n    this.syncSync();\n  }\n}\n\n/**\n * AsyncMirrorFS mirrors a synchronous filesystem into an asynchronous filesystem\n * by:\n * * Performing operations over the in-memory copy, while asynchronously pipelining them\n *   to the backing store.\n * * During application loading, the contents of the async file system can be reloaded into\n *   the synchronous store, if desired.\n * The two stores will be kept in sync. The most common use-case is to pair a synchronous\n * in-memory filesystem with an asynchronous backing store.\n */\nexport default class AsyncMirror extends file_system.SynchronousFileSystem implements file_system.FileSystem {\n  /**\n   * Queue of pending asynchronous operations.\n   */\n  private _queue: IAsyncOperation[] = [];\n  private _queueRunning: boolean = false;\n  private _sync: file_system.FileSystem;\n  private _async: file_system.FileSystem;\n  private _isInitialized: boolean = false;\n  private _initializeCallbacks: ((e?: ApiError) => void)[] = [];\n  constructor(sync: file_system.FileSystem, async: file_system.FileSystem) {\n    super();\n    this._sync = sync;\n    this._async = async;\n    if (!sync.supportsSynch()) {\n      throw new Error(\"Expected synchronous storage.\");\n    }\n    if (async.supportsSynch()) {\n      throw new Error(\"Expected asynchronous storage.\");\n    }\n  }\n\n  public getName(): string {\n\t \treturn \"AsyncMirror\";\n  }\n\n  public static isAvailable(): boolean {\n    return true;\n  }\n\n  public _syncSync(fd: preload_file.PreloadFile<any>) {\n    this._sync.writeFileSync(fd.getPath(), fd.getBuffer(), null, file_flag.FileFlag.getFileFlag('w'), fd.getStats().mode);\n    this.enqueueOp({\n      apiMethod: 'writeFile',\n      arguments: [fd.getPath(), fd.getBuffer(), null, fd.getFlag(), fd.getStats().mode]\n    });\n  }\n\n  /**\n   * Called once to load up files from async storage into sync storage.\n   */\n  public initialize(userCb: (err?: ApiError) => void): void {\n    const callbacks = this._initializeCallbacks;\n\n    const end = (e?: ApiError): void => {\n      this._isInitialized = !e;\n      this._initializeCallbacks = [];\n      callbacks.forEach((cb) => cb(e));\n    };\n\n    if (!this._isInitialized) {\n      // First call triggers initialization, the rest wait.\n      if (callbacks.push(userCb) === 1) {\n        const copyDirectory = (p: string, mode: number, cb: (err?: ApiError) => void) => {\n          if (p !== '/') {\n            this._sync.mkdirSync(p, mode);\n          }\n          this._async.readdir(p, (err, files) => {\n            if (err) {\n              cb(err);\n            } else {\n              var i = 0;\n              function copyNextFile(err?: ApiError) {\n                if (err) {\n                  cb(err);\n                } else if (i < files.length) {\n                  copyItem(path.join(p, files[i]), copyNextFile);\n                  i++;\n                } else {\n                  cb();\n                }\n              }\n              copyNextFile();\n            }\n          });\n        }, copyFile = (p: string, mode: number, cb: (err?: ApiError) => void) => {\n          this._async.readFile(p, null, file_flag.FileFlag.getFileFlag('r'), (err, data) => {\n            if (err) {\n              cb(err);\n            } else {\n              try {\n                this._sync.writeFileSync(p, data, null, file_flag.FileFlag.getFileFlag('w'), mode);\n              } catch (e) {\n                err = e;\n              } finally {\n                cb(err);\n              }\n            }\n          });\n        }, copyItem = (p: string, cb: (err?: ApiError) => void) => {\n          this._async.stat(p, false, (err, stats) => {\n            if (err) {\n              cb(err);\n            } else if (stats.isDirectory()) {\n              copyDirectory(p, stats.mode, cb);\n            } else {\n              copyFile(p, stats.mode, cb);\n            }\n          });\n        };\n        copyDirectory('/', 0, end);\n      }\n    } else {\n      userCb();\n    }\n  }\n\n  private checkInitialized(): void {\n    if (!this._isInitialized) {\n      throw new ApiError(ErrorCode.EPERM, \"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.\");\n    }\n  }\n\n  public isReadOnly(): boolean { return false; }\n  public supportsSynch(): boolean { return true; }\n  public supportsLinks(): boolean { return false; }\n  public supportsProps(): boolean { return this._sync.supportsProps() && this._async.supportsProps(); }\n\n  private enqueueOp(op: IAsyncOperation) {\n    this._queue.push(op);\n    if (!this._queueRunning) {\n      this._queueRunning = true;\n      var doNextOp = (err?: ApiError) => {\n        if (err) {\n          console.error(`WARNING: File system has desynchronized. Received following error: ${err}\\n$`);\n        }\n        if (this._queue.length > 0) {\n          var op = this._queue.shift(),\n            args = op.arguments;\n          args.push(doNextOp);\n          (<Function> (<any> this._async)[op.apiMethod]).apply(this._async, args);\n        } else {\n          this._queueRunning = false;\n        }\n      };\n      doNextOp();\n    }\n  }\n\n  public renameSync(oldPath: string, newPath: string): void {\n    this.checkInitialized();\n    this._sync.renameSync(oldPath, newPath);\n    this.enqueueOp({\n      apiMethod: 'rename',\n      arguments: [oldPath, newPath]\n    });\n  }\n  public statSync(p: string, isLstat: boolean): Stats {\n    this.checkInitialized();\n    return this._sync.statSync(p, isLstat);\n  }\n  public openSync(p: string, flag: file_flag.FileFlag, mode: number): file.File {\n    this.checkInitialized();\n    // Sanity check: Is this open/close permitted?\n    var fd = this._sync.openSync(p, flag, mode);\n    fd.closeSync();\n    return new MirrorFile(this, p, flag, this._sync.statSync(p, false), this._sync.readFileSync(p, null, file_flag.FileFlag.getFileFlag('r')));\n  }\n  public unlinkSync(p: string): void {\n    this.checkInitialized();\n    this._sync.unlinkSync(p);\n    this.enqueueOp({\n      apiMethod: 'unlink',\n      arguments: [p]\n    });\n  }\n  public rmdirSync(p: string): void {\n    this.checkInitialized();\n    this._sync.rmdirSync(p);\n    this.enqueueOp({\n      apiMethod: 'rmdir',\n      arguments: [p]\n    });\n  }\n  public mkdirSync(p: string, mode: number): void {\n    this.checkInitialized();\n    this._sync.mkdirSync(p, mode);\n    this.enqueueOp({\n      apiMethod: 'mkdir',\n      arguments: [p, mode]\n    });\n  }\n  public readdirSync(p: string): string[] {\n    this.checkInitialized();\n    return this._sync.readdirSync(p);\n  }\n  public existsSync(p: string): boolean {\n    this.checkInitialized();\n    return this._sync.existsSync(p);\n  }\n  public chmodSync(p: string, isLchmod: boolean, mode: number): void {\n    this.checkInitialized();\n    this._sync.chmodSync(p, isLchmod, mode);\n    this.enqueueOp({\n      apiMethod: 'chmod',\n      arguments: [p, isLchmod, mode]\n    });\n  }\n  public chownSync(p: string, isLchown: boolean, uid: number, gid: number): void {\n    this.checkInitialized();\n    this._sync.chownSync(p, isLchown, uid, gid);\n    this.enqueueOp({\n      apiMethod: 'chown',\n      arguments: [p, isLchown, uid, gid]\n    });\n  }\n  public utimesSync(p: string, atime: Date, mtime: Date): void {\n    this.checkInitialized();\n    this._sync.utimesSync(p, atime, mtime);\n    this.enqueueOp({\n      apiMethod: 'utimes',\n      arguments: [p, atime, mtime]\n    });\n  }\n}\n","import preload_file = require('../generic/preload_file');\nimport file_system = require('../core/file_system');\nimport file_flag = require('../core/file_flag');\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport file = require('../core/file');\nimport async = require('async');\nimport path = require('path');\nimport {arrayBuffer2Buffer, buffer2ArrayBuffer} from '../core/util';\n\nvar errorCodeLookup: {[dropboxErrorCode: number]: ErrorCode} = null;\n// Lazily construct error code lookup, since DropboxJS might be loaded *after* BrowserFS (or not at all!)\nfunction constructErrorCodeLookup() {\n  if (errorCodeLookup !== null) {\n    return;\n  }\n  errorCodeLookup = {};\n  // This indicates a network transmission error on modern browsers. Internet Explorer might cause this code to be reported on some API server errors.\n  errorCodeLookup[Dropbox.ApiError.NETWORK_ERROR] = ErrorCode.EIO;\n  // This happens when the contentHash parameter passed to a Dropbox.Client#readdir or Dropbox.Client#stat matches the most recent content, so the API call response is omitted, to save bandwidth.\n  // errorCodeLookup[Dropbox.ApiError.NO_CONTENT];\n  // The error property on {Dropbox.ApiError#response} should indicate which input parameter is invalid and why.\n  errorCodeLookup[Dropbox.ApiError.INVALID_PARAM] = ErrorCode.EINVAL;\n  // The OAuth token used for the request will never become valid again, so the user should be re-authenticated.\n  errorCodeLookup[Dropbox.ApiError.INVALID_TOKEN] = ErrorCode.EPERM;\n  // This indicates a bug in dropbox.js and should never occur under normal circumstances.\n  // ^ Actually, that's false. This occurs when you try to move folders to themselves, or move a file over another file.\n  errorCodeLookup[Dropbox.ApiError.OAUTH_ERROR] = ErrorCode.EPERM;\n  // This happens when trying to read from a non-existing file, readdir a non-existing directory, write a file into a non-existing directory, etc.\n  errorCodeLookup[Dropbox.ApiError.NOT_FOUND] = ErrorCode.ENOENT;\n  // This indicates a bug in dropbox.js and should never occur under normal circumstances.\n  errorCodeLookup[Dropbox.ApiError.INVALID_METHOD] = ErrorCode.EINVAL;\n  // This happens when a Dropbox.Client#readdir or Dropbox.Client#stat call would return more than a maximum amount of directory entries.\n  errorCodeLookup[Dropbox.ApiError.NOT_ACCEPTABLE] = ErrorCode.EINVAL;\n  // This is used by some backend methods to indicate that the client needs to download server-side changes and perform conflict resolution. Under normal usage, errors with this code should never surface to the code using dropbox.js.\n  errorCodeLookup[Dropbox.ApiError.CONFLICT] = ErrorCode.EINVAL;\n  // Status value indicating that the application is making too many requests.\n  errorCodeLookup[Dropbox.ApiError.RATE_LIMITED] = ErrorCode.EBUSY;\n  // The request should be retried after some time.\n  errorCodeLookup[Dropbox.ApiError.SERVER_ERROR] = ErrorCode.EBUSY;\n  // Status value indicating that the user's Dropbox is over its storage quota.\n  errorCodeLookup[Dropbox.ApiError.OVER_QUOTA] = ErrorCode.ENOSPC;\n}\n\ninterface ICachedPathInfo {\n  stat: Dropbox.File.Stat;\n}\n\ninterface ICachedFileInfo extends ICachedPathInfo {\n  contents: ArrayBuffer;\n}\n\nfunction isFileInfo(cache: ICachedPathInfo): cache is ICachedFileInfo {\n  return cache && cache.stat.isFile;\n}\n\ninterface ICachedDirInfo extends ICachedPathInfo {\n  contents: string[];\n}\n\nfunction isDirInfo(cache: ICachedPathInfo): cache is ICachedDirInfo {\n  return cache && cache.stat.isFolder;\n}\n\nfunction isArrayBuffer(ab: any): ab is ArrayBuffer {\n  // Accept null / undefined, too.\n  return ab === null || ab === undefined || (typeof(ab) === 'object' && typeof(ab['byteLength']) === 'number');\n}\n\n/**\n * Wraps a Dropbox client and caches operations.\n */\nclass CachedDropboxClient {\n  private _cache: {[path: string]: ICachedPathInfo} = {};\n  private _client: Dropbox.Client;\n\n  constructor(client: Dropbox.Client) {\n    this._client = client;\n  }\n\n  private getCachedInfo(p: string): ICachedPathInfo {\n    return this._cache[p.toLowerCase()];\n  }\n\n  private putCachedInfo(p: string, cache: ICachedPathInfo): void {\n    this._cache[p.toLowerCase()] = cache;\n  }\n\n  private deleteCachedInfo(p: string): void {\n    delete this._cache[p.toLowerCase()];\n  }\n\n  private getCachedDirInfo(p: string): ICachedDirInfo {\n    var info = this.getCachedInfo(p);\n    if (isDirInfo(info)) {\n      return info;\n    } else {\n      return null;\n    }\n  }\n\n  private getCachedFileInfo(p: string): ICachedFileInfo {\n    var info = this.getCachedInfo(p);\n    if (isFileInfo(info)) {\n      return info;\n    } else {\n      return null;\n    }\n  }\n\n  private updateCachedDirInfo(p: string, stat: Dropbox.File.Stat, contents: string[] = null): void {\n    var cachedInfo = this.getCachedInfo(p);\n    // Dropbox uses the *contentHash* property for directories.\n    // Ignore stat objects w/o a contentHash defined; those actually exist!!!\n    // (Example: readdir returns an array of stat objs; stat objs for dirs in that context have no contentHash)\n    if (stat.contentHash !== null && (cachedInfo === undefined || cachedInfo.stat.contentHash !== stat.contentHash)) {\n      this.putCachedInfo(p, <ICachedDirInfo> {\n        stat: stat,\n        contents: contents\n      });\n    }\n  }\n\n  private updateCachedFileInfo(p: string, stat: Dropbox.File.Stat, contents: ArrayBuffer = null): void {\n    var cachedInfo = this.getCachedInfo(p);\n    // Dropbox uses the *versionTag* property for files.\n    // Ignore stat objects w/o a versionTag defined.\n    if (stat.versionTag !== null && (cachedInfo === undefined || cachedInfo.stat.versionTag !== stat.versionTag)) {\n      this.putCachedInfo(p, <ICachedFileInfo> {\n        stat: stat,\n        contents: contents\n      });\n    }\n  }\n\n  private updateCachedInfo(p: string, stat: Dropbox.File.Stat, contents: ArrayBuffer | string[] = null): void {\n    if (stat.isFile && isArrayBuffer(contents)) {\n      this.updateCachedFileInfo(p, stat, contents);\n    } else if (stat.isFolder && Array.isArray(contents)) {\n      this.updateCachedDirInfo(p, stat, contents);\n    }\n  }\n\n  public readdir(p: string, cb: (error: Dropbox.ApiError, contents?: string[]) => void): void {\n    var cacheInfo = this.getCachedDirInfo(p);\n\n    this._wrap((interceptCb) => {\n      if (cacheInfo !== null && cacheInfo.contents) {\n        this._client.readdir(p, {\n          contentHash: cacheInfo.stat.contentHash\n        }, interceptCb);\n      } else {\n        this._client.readdir(p, interceptCb);\n      }\n    }, (err: Dropbox.ApiError, filenames: string[], stat: Dropbox.File.Stat, folderEntries: Dropbox.File.Stat[]) => {\n      if (err) {\n        if (err.status === Dropbox.ApiError.NO_CONTENT && cacheInfo !== null) {\n          cb(null, cacheInfo.contents.slice(0));\n        } else {\n          cb(err);\n        }\n      } else {\n        this.updateCachedDirInfo(p, stat, filenames.slice(0));\n        folderEntries.forEach((entry) => {\n          this.updateCachedInfo(path.join(p, entry.name), entry);\n        });\n        cb(null, filenames);\n      }\n    });\n  }\n\n  public remove(p: string, cb: (error?: Dropbox.ApiError) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.remove(p, interceptCb);\n    }, (err: Dropbox.ApiError, stat?: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat);\n      }\n      cb(err);\n    });\n  }\n\n  public move(src: string, dest: string, cb: (error?: Dropbox.ApiError) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.move(src, dest, interceptCb);\n    }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.deleteCachedInfo(src);\n        this.updateCachedInfo(dest, stat);\n      }\n      cb(err);\n    });\n  }\n\n  public stat(p: string, cb: (error: Dropbox.ApiError, stat?: Dropbox.File.Stat) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.stat(p, interceptCb);\n    }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat);\n      }\n      cb(err, stat);\n    });\n  }\n\n  public readFile(p: string, cb: (error: Dropbox.ApiError, file?: ArrayBuffer, stat?: Dropbox.File.Stat) => void): void {\n    var cacheInfo = this.getCachedFileInfo(p);\n    if (cacheInfo !== null && cacheInfo.contents !== null) {\n      // Try to use cached info; issue a stat to see if contents are up-to-date.\n      this.stat(p, (error, stat?) => {\n        if (error) {\n          cb(error);\n        } else if (stat.contentHash === cacheInfo.stat.contentHash) {\n          // No file changes.\n          cb(error, cacheInfo.contents.slice(0), cacheInfo.stat);\n        } else {\n          // File changes; rerun to trigger actual readFile.\n          this.readFile(p, cb);\n        }\n      });\n    } else {\n      this._wrap((interceptCb) => {\n        this._client.readFile(p, { arrayBuffer: true }, interceptCb);\n      }, (err: Dropbox.ApiError, contents: any, stat: Dropbox.File.Stat) => {\n        if (!err) {\n          this.updateCachedInfo(p, stat, contents.slice(0));\n        }\n        cb(err, contents, stat);\n      });\n    }\n  }\n\n  public writeFile(p: string, contents: ArrayBuffer, cb: (error: Dropbox.ApiError, stat?: Dropbox.File.Stat) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.writeFile(p, contents, interceptCb);\n    },(err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat, contents.slice(0));\n      }\n      cb(err, stat);\n    });\n  }\n\n  public mkdir(p: string, cb: (error?: Dropbox.ApiError) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.mkdir(p, interceptCb);\n    }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat, []);\n      }\n      cb(err);\n    });\n  }\n\n  /**\n   * Wraps an operation such that we retry a failed operation 3 times.\n   * Necessary to deal with Dropbox rate limiting.\n   *\n   * @param performOp Function that performs the operation. Will be called up to three times.\n   * @param cb Called when the operation succeeds, fails in a non-temporary manner, or fails three times.\n   */\n  private _wrap(performOp: (interceptCb: (error: Dropbox.ApiError) => void) => void, cb: Function): void {\n    var numRun = 0,\n      interceptCb = function (error: Dropbox.ApiError): void {\n        // Timeout duration, in seconds.\n        var timeoutDuration: number = 2;\n        if (error && 3 > (++numRun)) {\n          switch(error.status) {\n            case Dropbox.ApiError.SERVER_ERROR:\n            case Dropbox.ApiError.NETWORK_ERROR:\n            case Dropbox.ApiError.RATE_LIMITED:\n              setTimeout(() => {\n                performOp(interceptCb);\n              }, timeoutDuration * 1000);\n              break;\n            default:\n              cb.apply(null, arguments);\n              break;\n          }\n        } else {\n          cb.apply(null, arguments);\n        }\n      };\n\n    performOp(interceptCb);\n  }\n}\n\nexport class DropboxFile extends preload_file.PreloadFile<DropboxFileSystem> implements file.File {\n  constructor(_fs: DropboxFileSystem, _path: string, _flag: file_flag.FileFlag, _stat: Stats, contents?: NodeBuffer) {\n    super(_fs, _path, _flag, _stat, contents)\n  }\n\n  public sync(cb: (e?: ApiError) => void): void {\n    if (this.isDirty()) {\n      var buffer = this.getBuffer(),\n        arrayBuffer = buffer2ArrayBuffer(buffer);\n      this._fs._writeFileStrict(this.getPath(), arrayBuffer, (e?: ApiError) => {\n        if (!e) {\n          this.resetDirty();\n        }\n        cb(e);\n      });\n    } else {\n      cb();\n    }\n  }\n\n  public close(cb: (e?: ApiError) => void): void {\n    this.sync(cb);\n  }\n}\n\nexport default class DropboxFileSystem extends file_system.BaseFileSystem implements file_system.FileSystem {\n  // The Dropbox client.\n  private _client: CachedDropboxClient;\n\n  /**\n   * Arguments: an authenticated Dropbox.js client\n   */\n  constructor(client: Dropbox.Client) {\n    super();\n    this._client = new CachedDropboxClient(client);\n    constructErrorCodeLookup();\n  }\n\n  public getName(): string {\n    return 'Dropbox';\n  }\n\n  public static isAvailable(): boolean {\n    // Checks if the Dropbox library is loaded.\n    return typeof Dropbox !== 'undefined';\n  }\n\n  public isReadOnly(): boolean {\n    return false;\n  }\n\n  // Dropbox doesn't support symlinks, properties, or synchronous calls\n\n  public supportsSymlinks(): boolean {\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return false;\n  }\n\n  public empty(mainCb: (e?: ApiError) => void): void {\n    this._client.readdir('/', (error, files) => {\n      if (error) {\n        mainCb(this.convert(error, '/'));\n      } else {\n        var deleteFile = (file: string, cb: (err?: ApiError) => void) => {\n          var p = path.join('/', file);\n          this._client.remove(p, (err) => {\n            cb(err ? this.convert(err, p) : null);\n          });\n        };\n        var finished = (err?: ApiError) => {\n          if (err) {\n            mainCb(err);\n          } else {\n            mainCb();\n          }\n        };\n        // XXX: <any> typing is to get around overly-restrictive ErrorCallback typing.\n        async.each(files, <any> deleteFile, <any> finished);\n      }\n    });\n  }\n\n public rename(oldPath: string, newPath: string, cb: (e?: ApiError) => void): void {\n    this._client.move(oldPath, newPath, (error) => {\n      if (error) {\n        // the move is permitted if newPath is a file.\n        // Check if this is the case, and remove if so.\n        this._client.stat(newPath, (error2, stat) => {\n          if (error2 || stat.isFolder) {\n            var missingPath = (<any> error.response).error.indexOf(oldPath) > -1 ? oldPath : newPath;\n            cb(this.convert(error, missingPath));\n          } else {\n            // Delete file, repeat rename.\n            this._client.remove(newPath, (error2) => {\n              if (error2) {\n                cb(this.convert(error2, newPath));\n              } else {\n                this.rename(oldPath, newPath, cb);\n              }\n            });\n          }\n        });\n      } else {\n        cb();\n      }\n    });\n  }\n\n  public stat(path: string, isLstat: boolean, cb: (err: ApiError, stat?: Stats) => void): void {\n    // Ignore lstat case -- Dropbox doesn't support symlinks\n    // Stat the file\n    this._client.stat(path, (error, stat) => {\n      if (error) {\n        cb(this.convert(error, path));\n      } else if ((stat != null) && stat.isRemoved) {\n        // Dropbox keeps track of deleted files, so if a file has existed in the\n        // past but doesn't any longer, you wont get an error\n        cb(ApiError.FileError(ErrorCode.ENOENT, path));\n      } else {\n        var stats = new Stats(this._statType(stat), stat.size);\n        return cb(null, stats);\n      }\n    });\n  }\n\n  public open(path: string, flags: file_flag.FileFlag, mode: number, cb: (err: ApiError, fd?: file.File) => any): void {\n    // Try and get the file's contents\n    this._client.readFile(path, (error, content, dbStat) => {\n      if (error) {\n        // If the file's being opened for reading and doesn't exist, return an\n        // error\n        if (flags.isReadable()) {\n          cb(this.convert(error, path));\n        } else {\n          switch (error.status) {\n            // If it's being opened for writing or appending, create it so that\n            // it can be written to\n            case Dropbox.ApiError.NOT_FOUND:\n              var ab = new ArrayBuffer(0);\n              return this._writeFileStrict(path, ab, (error2: ApiError, stat?: Dropbox.File.Stat) => {\n                if (error2) {\n                  cb(error2);\n                } else {\n                  var file = this._makeFile(path, flags, stat, arrayBuffer2Buffer(ab));\n                  cb(null, file);\n                }\n              });\n            default:\n              return cb(this.convert(error, path));\n          }\n        }\n      } else {\n        // No error\n        var buffer: Buffer;\n        // Dropbox.js seems to set `content` to `null` rather than to an empty\n        // buffer when reading an empty file. Not sure why this is.\n        if (content === null) {\n          buffer = new Buffer(0);\n        } else {\n          buffer = arrayBuffer2Buffer(content);\n        }\n        var file = this._makeFile(path, flags, dbStat, buffer);\n        return cb(null, file);\n      }\n    });\n  }\n\n  public _writeFileStrict(p: string, data: ArrayBuffer, cb: (e: ApiError, stat?: Dropbox.File.Stat) => void): void {\n    var parent = path.dirname(p);\n    this.stat(parent, false, (error: ApiError, stat?: Stats): void => {\n      if (error) {\n        cb(ApiError.FileError(ErrorCode.ENOENT, parent));\n      } else {\n        this._client.writeFile(p, data, (error2, stat) => {\n          if (error2) {\n            cb(this.convert(error2, p));\n          } else {\n            cb(null, stat);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Private\n   * Returns a BrowserFS object representing the type of a Dropbox.js stat object\n   */\n  public _statType(stat: Dropbox.File.Stat): FileType {\n    return stat.isFile ? FileType.FILE : FileType.DIRECTORY;\n  }\n\n  /**\n   * Private\n   * Returns a BrowserFS object representing a File, created from the data\n   * returned by calls to the Dropbox API.\n   */\n  public _makeFile(path: string, flag: file_flag.FileFlag, stat: Dropbox.File.Stat, buffer: NodeBuffer): DropboxFile {\n    var type = this._statType(stat);\n    var stats = new Stats(type, stat.size);\n    return new DropboxFile(this, path, flag, stats, buffer);\n  }\n\n  /**\n   * Private\n   * Delete a file or directory from Dropbox\n   * isFile should reflect which call was made to remove the it (`unlink` or\n   * `rmdir`). If this doesn't match what's actually at `path`, an error will be\n   * returned\n   */\n  public _remove(path: string, cb: (e?: ApiError) => void, isFile: boolean): void {\n    this._client.stat(path, (error, stat) => {\n      if (error) {\n        cb(this.convert(error, path));\n      } else {\n        if (stat.isFile && !isFile) {\n          cb(ApiError.FileError(ErrorCode.ENOTDIR, path));\n        } else if (!stat.isFile && isFile) {\n          cb(ApiError.FileError(ErrorCode.EISDIR, path));\n        } else {\n          this._client.remove(path, (error) => {\n            if (error) {\n              cb(this.convert(error, path));\n            } else {\n              cb(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Delete a file\n   */\n  public unlink(path: string, cb: (e?: ApiError) => void): void {\n    this._remove(path, cb, true);\n  }\n\n  /**\n   * Delete a directory\n   */\n  public rmdir(path: string, cb: (e?: ApiError) => void): void {\n    this._remove(path, cb, false);\n  }\n\n  /**\n   * Create a directory\n   */\n  public mkdir(p: string, mode: number, cb: (e?: ApiError) => void): void {\n    // Dropbox.js' client.mkdir() behaves like `mkdir -p`, i.e. it creates a\n    // directory and all its ancestors if they don't exist.\n    // Node's fs.mkdir() behaves like `mkdir`, i.e. it throws an error if an attempt\n    // is made to create a directory without a parent.\n    // To handle this inconsistency, a check for the existence of `path`'s parent\n    // must be performed before it is created, and an error thrown if it does\n    // not exist\n    var parent = path.dirname(p);\n    this._client.stat(parent, (error, stat) => {\n      if (error) {\n        cb(this.convert(error, parent));\n      } else {\n        this._client.mkdir(p, (error) => {\n          if (error) {\n            cb(ApiError.FileError(ErrorCode.EEXIST, p));\n          } else {\n            cb(null);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Get the names of the files in a directory\n   */\n  public readdir(path: string, cb: (err: ApiError, files?: string[]) => void): void {\n    this._client.readdir(path, (error, files) => {\n      if (error) {\n        return cb(this.convert(error));\n      } else {\n        return cb(null, files);\n      }\n    });\n  }\n\n  /**\n   * Converts a Dropbox-JS error into a BFS error.\n   */\n  public convert(err: Dropbox.ApiError, path: string = null): ApiError {\n    var errorCode = errorCodeLookup[err.status];\n    if (errorCode === undefined) {\n      errorCode = ErrorCode.EIO;\n    }\n\n    if (path == null) {\n      return new ApiError(errorCode);\n    } else {\n      return ApiError.FileError(errorCode, path);\n    }\n  }\n}\n","import {BaseFileSystem, FileSystem} from '../core/file_system';\nimport path = require('path');\nimport {ApiError} from '../core/api_error';\n\n/**\n * The FolderAdapter file system wraps a file system, and scopes all interactions to a subfolder of that file system.\n */\nexport default class FolderAdapter extends BaseFileSystem implements FileSystem {\n  private _wrapped: FileSystem;\n  private _folder: string;\n  constructor(folder: string, wrapped: FileSystem) {\n    super();\n    this._folder = folder;\n    this._wrapped = wrapped;\n  }\n\n  /**\n   * Initialize the file system. Ensures that the wrapped file system\n   * has the given folder.\n   */\n  public initialize(cb: (e?: ApiError) => void) {\n    this._wrapped.exists(this._folder, (exists: boolean) => {\n      if (exists) {\n        cb();\n      } else if (this._wrapped.isReadOnly()) {\n        cb(ApiError.ENOENT(this._folder));\n      } else {\n        this._wrapped.mkdir(this._folder, 0x1ff, cb);\n      }\n    });\n  }\n\n  public getName(): string { return this._wrapped.getName(); }\n  public isReadOnly(): boolean { return this._wrapped.isReadOnly(); }\n  public supportsProps(): boolean { return this._wrapped.supportsProps(); }\n  public supportsSynch(): boolean { return this._wrapped.supportsSynch(); }\n  public supportsLinks(): boolean { return false; }\n\n  public static isAvailable(): boolean {\n    return true;\n  }\n}\n\nfunction translateError(folder: string, e: any): any {\n  if (e !== null && typeof e === 'object') {\n    let err = <ApiError> e;\n    let p = err.path;\n    if (p) {\n      p = '/' + path.relative(folder, p);\n      err.message = err.message.replace(err.path, p);\n      err.path = p;\n    }\n  }\n  return e;\n}\n\nfunction wrapCallback(folder: string, cb: any): any {\n  if (typeof cb === 'function') {\n    return function(err) {\n      if (arguments.length > 0) {\n        arguments[0] = translateError(folder, err);\n      }\n      (<Function> cb).apply(null, arguments);\n    };\n  } else {\n    return cb;\n  }\n}\n\nfunction wrapFunction(name: string, wrapFirst: boolean, wrapSecond: boolean): Function {\n  if (name.slice(name.length - 4) !== 'Sync') {\n    // Async function. Translate error in callback.\n    return function() {\n      if (arguments.length > 0) {\n        if (wrapFirst) {\n          arguments[0] = path.join(this._folder, arguments[0]);\n        }\n        if (wrapSecond) {\n          arguments[1] = path.join(this._folder, arguments[1]);\n        }\n        arguments[arguments.length - 1] = wrapCallback(this._folder, arguments[arguments.length - 1]);\n      }\n      return this._wrapped[name].apply(this._wrapped, arguments);\n    };\n  } else {\n    // Sync function. Translate error in catch.\n    return function() {\n      try {\n        if (wrapFirst) {\n          arguments[0] = path.join(this._folder, arguments[0]);\n        }\n        if (wrapSecond) {\n          arguments[1] = path.join(this._folder, arguments[1]);\n        }\n        return this._wrapped[name].apply(this._wrapped, arguments);\n      } catch (e) {\n        throw translateError(this._folder, e);\n      }\n    };\n  }\n}\n\n// First argument is a path.\n['diskSpace', 'stat', 'statSync', 'open', 'openSync', 'unlink', 'unlinkSync',\n 'rmdir', 'rmdirSync' ,'mkdir', 'mkdirSync', 'readdir', 'readdirSync', 'exists',\n 'existsSync', 'realpath', 'realpathSync', 'truncate', 'truncateSync', 'readFile',\n 'readFileSync', 'writeFile', 'writeFileSync', 'appendFile', 'appendFileSync',\n 'chmod', 'chmodSync', 'chown', 'chownSync', 'utimes', 'utimeSync', 'readlink',\n 'readlinkSync'].forEach((name: string) => {\n  FolderAdapter.prototype[name] = wrapFunction(name, true, false);\n});\n\n// First and second arguments are paths.\n['rename', 'renameSync', 'link', 'linkSync', 'symlink', 'symlinkSync'].forEach((name: string) => {\n  FolderAdapter.prototype[name] = wrapFunction(name, true, true);\n});\n","import preload_file = require('../generic/preload_file');\nimport file_system = require('../core/file_system');\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {FileFlag, ActionType} from '../core/file_flag';\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport file = require('../core/file');\nimport path = require('path');\nimport global = require('../core/global');\nimport async = require('async');\nimport {buffer2ArrayBuffer, arrayBuffer2Buffer} from '../core/util';\n\nfunction isDirectoryEntry(entry: Entry): entry is DirectoryEntry {\n  return entry.isDirectory;\n}\n\nvar _getFS: (type:number, size:number, successCallback: FileSystemCallback, errorCallback?: ErrorCallback) => void = global.webkitRequestFileSystem || global.requestFileSystem || null;\n\nfunction _requestQuota(type: number, size: number, success: (size: number) => void, errorCallback: ErrorCallback) {\n  // We cast navigator and window to '<any>' because everything here is\n  // nonstandard functionality, despite the fact that Chrome has the only\n  // implementation of the HTML5FS and is likely driving the standardization\n  // process. Thus, these objects defined off of navigator and window are not\n  // present in the DefinitelyTyped TypeScript typings for FileSystem.\n  if (typeof (<any> navigator)['webkitPersistentStorage'] !== 'undefined') {\n    switch(type) {\n      case global.PERSISTENT:\n        (<any> navigator).webkitPersistentStorage.requestQuota(size, success, errorCallback);\n        break;\n      case global.TEMPORARY:\n        (<any> navigator).webkitTemporaryStorage.requestQuota(size, success, errorCallback);\n        break\n      default:\n        errorCallback(new TypeError(`Invalid storage type: ${type}`));\n        break;\n    }\n  } else {\n    (<any> global).webkitStorageInfo.requestQuota(type, size, success, errorCallback);\n  }\n}\n\nfunction _toArray(list?: any[]): any[] {\n  return Array.prototype.slice.call(list || [], 0);\n}\n\n// A note about getFile and getDirectory options:\n// These methods are called at numerous places in this file, and are passed\n// some combination of these two options:\n//   - create: If true, the entry will be created if it doesn't exist.\n//             If false, an error will be thrown if it doesn't exist.\n//   - exclusive: If true, only create the entry if it doesn't already exist,\n//                and throw an error if it does.\n\nexport class HTML5FSFile extends preload_file.PreloadFile<HTML5FS> implements file.File {\n  constructor(_fs: HTML5FS, _path: string, _flag: FileFlag, _stat: Stats, contents?: NodeBuffer) {\n    super(_fs, _path, _flag, _stat, contents);\n  }\n\n  public sync(cb: (e?: ApiError) => void): void {\n    if (this.isDirty()) {\n      // Don't create the file (it should already have been created by `open`)\n      var opts = {\n        create: false\n      };\n      var _fs = this._fs;\n      var success: FileEntryCallback = (entry) => {\n        entry.createWriter((writer) => {\n          var buffer = this.getBuffer();\n          var blob = new Blob([buffer2ArrayBuffer(buffer)]);\n          var length = blob.size;\n          writer.onwriteend = () => {\n            writer.onwriteend = null;\n            writer.truncate(length);\n            this.resetDirty();\n            cb();\n          };\n          writer.onerror = (err: DOMError) => {\n            cb(_fs.convert(err, this.getPath(), false));\n          };\n          writer.write(blob);\n        });\n      };\n      var error = (err: DOMError) => {\n        cb(_fs.convert(err, this.getPath(), false));\n      };\n      _fs.fs.root.getFile(this.getPath(), opts, success, error);\n    } else {\n      cb();\n    }\n  }\n\n  public close(cb: (e?: ApiError) => void): void {\n    this.sync(cb);\n  }\n}\n\nexport default class HTML5FS extends file_system.BaseFileSystem implements file_system.FileSystem {\n  private size: number;\n  private type: number;\n  // HTML5File reaches into HTML5FS. :/\n  public fs: FileSystem;\n  /**\n   * Arguments:\n   *   - type: PERSISTENT or TEMPORARY\n   *   - size: storage quota to request, in megabytes. Allocated value may be less.\n   */\n  constructor(size: number = 5, type: number = global.PERSISTENT) {\n    super();\n    // Convert MB to bytes.\n    this.size = 1024 * 1024 * size;\n    this.type = type;\n  }\n\n  public getName(): string {\n    return 'HTML5 FileSystem';\n  }\n\n  public static isAvailable(): boolean {\n    return _getFS != null;\n  }\n\n  public isReadOnly(): boolean {\n    return false;\n  }\n\n  public supportsSymlinks(): boolean {\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return false;\n  }\n\n  /**\n   * Converts the given DOMError into an appropriate ApiError.\n   * Full list of values here:\n   * https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n   */\n  public convert(err: DOMError, p: string, expectedDir: boolean): ApiError {\n    switch (err.name) {\n      /* The user agent failed to create a file or directory due to the existence of a file or\n         directory with the same path.  */\n      case \"PathExistsError\":\n        return ApiError.EEXIST(p);\n      /* The operation failed because it would cause the application to exceed its storage quota.  */\n      case 'QuotaExceededError':\n        return ApiError.FileError(ErrorCode.ENOSPC, p);\n      /*  A required file or directory could not be found at the time an operation was processed.   */\n      case 'NotFoundError':\n        return ApiError.ENOENT(p);\n      /* This is a security error code to be used in situations not covered by any other error codes.\n         - A required file was unsafe for access within a Web application\n         - Too many calls are being made on filesystem resources */\n      case 'SecurityError':\n        return ApiError.FileError(ErrorCode.EACCES, p);\n      /* The modification requested was illegal. Examples of invalid modifications include moving a\n         directory into its own child, moving a file into its parent directory without changing its name,\n         or copying a directory to a path occupied by a file.  */\n      case 'InvalidModificationError':\n        return ApiError.FileError(ErrorCode.EPERM, p);\n      /* The user has attempted to look up a file or directory, but the Entry found is of the wrong type\n         [e.g. is a DirectoryEntry when the user requested a FileEntry].  */\n      case 'TypeMismatchError':\n        return ApiError.FileError(expectedDir ? ErrorCode.ENOTDIR : ErrorCode.EISDIR, p);\n      /* A path or URL supplied to the API was malformed.  */\n      case \"EncodingError\":\n      /* An operation depended on state cached in an interface object, but that state that has changed\n         since it was read from disk.  */\n      case \"InvalidStateError\":\n      /* The user attempted to write to a file or directory which could not be modified due to the state\n         of the underlying filesystem.  */\n      case \"NoModificationAllowedError\":\n      default:\n        return ApiError.FileError(ErrorCode.EINVAL, p);\n    }\n  }\n\n  /**\n   * Nonstandard\n   * Requests a storage quota from the browser to back this FS.\n   */\n  public allocate(cb: (e?: ApiError) => void = function(){}): void {\n    var success = (fs: FileSystem): void => {\n      this.fs = fs;\n      cb()\n    };\n    var error = (err: DOMException): void => {\n      cb(this.convert(err, \"/\", true));\n    };\n    if (this.type === global.PERSISTENT) {\n      _requestQuota(this.type, this.size, (granted: number) => {\n        _getFS(this.type, granted, success, error);\n      }, error);\n    } else {\n      _getFS(this.type, this.size, success, error);\n    }\n  }\n\n  /**\n   * Nonstandard\n   * Deletes everything in the FS. Used for testing.\n   * Karma clears the storage after you quit it but not between runs of the test\n   * suite, and the tests expect an empty FS every time.\n   */\n  public empty(mainCb: (e?: ApiError) => void): void {\n    // Get a list of all entries in the root directory to delete them\n    this._readdir('/', (err: ApiError, entries?: Entry[]): void => {\n      if (err) {\n        console.error('Failed to empty FS');\n        mainCb(err);\n      } else {\n        // Called when every entry has been operated on\n        var finished = (er: any): void => {\n          if (err) {\n            console.error(\"Failed to empty FS\");\n            mainCb(err);\n          } else {\n            mainCb();\n          }\n        };\n        // Removes files and recursively removes directories\n        var deleteEntry = (entry: Entry, cb: (e?: any) => void): void => {\n          var succ = () => {\n            cb();\n          };\n          var error = (err: DOMException) => {\n            cb(this.convert(err, entry.fullPath, !entry.isDirectory));\n          };\n          if (isDirectoryEntry(entry)) {\n            entry.removeRecursively(succ, error);\n          } else {\n            entry.remove(succ, error);\n          }\n        };\n        // Loop through the entries and remove them, then call the callback\n        // when they're all finished.\n        async.each(entries, deleteEntry, finished);\n      }\n    });\n  }\n\n  public rename(oldPath: string, newPath: string, cb: (e?: ApiError) => void): void {\n    var semaphore: number = 2,\n      successCount: number = 0,\n      root: DirectoryEntry = this.fs.root,\n      currentPath: string = oldPath,\n      error = (err: DOMException): void => {\n        if (--semaphore <= 0) {\n            cb(this.convert(err, currentPath, false));\n        }\n      },\n      success = (file: Entry): void => {\n        if (++successCount === 2) {\n          return cb(new ApiError(ErrorCode.EINVAL, \"Something was identified as both a file and a directory. This should never happen.\"));\n        }\n\n        // SPECIAL CASE: If newPath === oldPath, and the path exists, then\n        // this operation trivially succeeds.\n        if (oldPath === newPath) {\n          return cb();\n        }\n\n        // Get the new parent directory.\n        currentPath = path.dirname(newPath);\n        root.getDirectory(currentPath, {}, (parentDir: DirectoryEntry): void => {\n          currentPath = path.basename(newPath);\n          file.moveTo(parentDir, currentPath, (entry: Entry): void => { cb(); }, (err: DOMException): void => {\n            // SPECIAL CASE: If oldPath is a directory, and newPath is a\n            // file, rename should delete the file and perform the move.\n            if (file.isDirectory) {\n              currentPath = newPath;\n              // Unlink only works on files. Try to delete newPath.\n              this.unlink(newPath, (e?): void => {\n                if (e) {\n                  // newPath is probably a directory.\n                  error(err);\n                } else {\n                  // Recur, now that newPath doesn't exist.\n                  this.rename(oldPath, newPath, cb);\n                }\n              });\n            } else {\n              error(err);\n            }\n          });\n        }, error);\n      };\n\n    // We don't know if oldPath is a *file* or a *directory*, and there's no\n    // way to stat items. So launch both requests, see which one succeeds.\n    root.getFile(oldPath, {}, success, error);\n    root.getDirectory(oldPath, {}, success, error);\n  }\n\n  public stat(path: string, isLstat: boolean, cb: (err: ApiError, stat?: Stats) => void): void {\n    // Throw an error if the entry doesn't exist, because then there's nothing\n    // to stat.\n    var opts = {\n      create: false\n    };\n    // Called when the path has been successfully loaded as a file.\n    var loadAsFile = (entry: FileEntry): void => {\n      var fileFromEntry = (file: File): void => {\n        var stat = new Stats(FileType.FILE, file.size);\n        cb(null, stat);\n      };\n      entry.file(fileFromEntry, failedToLoad);\n    };\n    // Called when the path has been successfully loaded as a directory.\n    var loadAsDir = (dir: DirectoryEntry): void => {\n      // Directory entry size can't be determined from the HTML5 FS API, and is\n      // implementation-dependant anyway, so a dummy value is used.\n      var size = 4096;\n      var stat = new Stats(FileType.DIRECTORY, size);\n      cb(null, stat);\n    };\n    // Called when the path couldn't be opened as a directory or a file.\n    var failedToLoad = (err: DOMException): void => {\n      cb(this.convert(err, path, false /* Unknown / irrelevant */));\n    };\n    // Called when the path couldn't be opened as a file, but might still be a\n    // directory.\n    var failedToLoadAsFile = (): void => {\n      this.fs.root.getDirectory(path, opts, loadAsDir, failedToLoad);\n    };\n    // No method currently exists to determine whether a path refers to a\n    // directory or a file, so this implementation tries both and uses the first\n    // one that succeeds.\n    this.fs.root.getFile(path, opts, loadAsFile, failedToLoadAsFile);\n  }\n\n  public open(p: string, flags: FileFlag, mode: number, cb: (err: ApiError, fd?: file.File) => any): void {\n    var error = (err: DOMError): void => {\n      if (err.name === 'InvalidModificationError' && flags.isExclusive()) {\n        cb(ApiError.EEXIST(p));\n      } else {\n        cb(this.convert(err, p, false));\n      }\n    };\n\n    this.fs.root.getFile(p, {\n      create: flags.pathNotExistsAction() === ActionType.CREATE_FILE,\n      exclusive: flags.isExclusive()\n    }, (entry: FileEntry): void => {\n      // Try to fetch corresponding file.\n      entry.file((file: File): void => {\n        var reader = new FileReader();\n        reader.onloadend = (event: Event): void => {\n          var bfs_file = this._makeFile(p, flags, file, <ArrayBuffer> reader.result);\n          cb(null, bfs_file);\n        };\n        reader.onerror = (ev: Event) => {\n          error(reader.error);\n        };\n        reader.readAsArrayBuffer(file);\n      }, error);\n    }, error);\n  }\n\n  /**\n   * Returns a BrowserFS object representing the type of a Dropbox.js stat object\n   */\n  private _statType(stat: Entry): FileType {\n    return stat.isFile ? FileType.FILE : FileType.DIRECTORY;\n  }\n\n  /**\n   * Returns a BrowserFS object representing a File, created from the data\n   * returned by calls to the Dropbox API.\n   */\n  private _makeFile(path: string, flag: FileFlag, stat: File, data: ArrayBuffer = new ArrayBuffer(0)): HTML5FSFile {\n    var stats = new Stats(FileType.FILE, stat.size);\n    var buffer = arrayBuffer2Buffer(data);\n    return new HTML5FSFile(this, path, flag, stats, buffer);\n  }\n\n  /**\n   * Delete a file or directory from the file system\n   * isFile should reflect which call was made to remove the it (`unlink` or\n   * `rmdir`). If this doesn't match what's actually at `path`, an error will be\n   * returned\n   */\n  private _remove(path: string, cb: (e?: ApiError) => void, isFile: boolean): void {\n    var success = (entry: Entry): void => {\n      var succ = () => {\n        cb();\n      };\n      var err = (err: DOMException) => {\n        cb(this.convert(err, path, !isFile));\n      };\n      entry.remove(succ, err);\n    };\n    var error = (err: DOMException): void => {\n      cb(this.convert(err, path, !isFile));\n    };\n    // Deleting the entry, so don't create it\n    var opts = {\n      create: false\n    };\n\n    if (isFile) {\n      this.fs.root.getFile(path, opts, success, error);\n    } else {\n      this.fs.root.getDirectory(path, opts, success, error);\n    }\n  }\n\n  public unlink(path: string, cb: (e?: ApiError) => void): void {\n    this._remove(path, cb, true);\n  }\n\n  public rmdir(path: string, cb: (e?: ApiError) => void): void {\n    // Check if directory is non-empty, first.\n    this.readdir(path, (e, files?) => {\n      if (e) {\n        cb(e);\n      } else if (files.length > 0) {\n        cb(ApiError.ENOTEMPTY(path));\n      } else {\n        this._remove(path, cb, false);\n      }\n    });\n  }\n\n  public mkdir(path: string, mode: number, cb: (e?: ApiError) => void): void {\n    // Create the directory, but throw an error if it already exists, as per\n    // mkdir(1)\n    var opts = {\n      create: true,\n      exclusive: true\n    };\n    var success = (dir: DirectoryEntry): void => {\n      cb();\n    };\n    var error = (err: DOMException): void => {\n      cb(this.convert(err, path, true));\n    };\n    this.fs.root.getDirectory(path, opts, success, error);\n  }\n\n  /**\n   * Returns an array of `FileEntry`s. Used internally by empty and readdir.\n   */\n  private _readdir(path: string, cb: (e: ApiError, entries?: Entry[]) => void): void {\n    var error = (err: DOMException): void => {\n      cb(this.convert(err, path, true));\n    };\n    // Grab the requested directory.\n    this.fs.root.getDirectory(path, { create: false }, (dirEntry: DirectoryEntry) => {\n      var reader = dirEntry.createReader();\n      var entries: Entry[] = [];\n\n      // Call the reader.readEntries() until no more results are returned.\n      var readEntries = () => {\n        reader.readEntries(((results) => {\n          if (results.length) {\n            entries = entries.concat(_toArray(results));\n            readEntries();\n          } else {\n            cb(null, entries);\n          }\n        }), error);\n      };\n      readEntries();\n    }, error);\n  }\n\n  /**\n   * Map _readdir's list of `FileEntry`s to their names and return that.\n   */\n  public readdir(path: string, cb: (err: ApiError, files?: string[]) => void): void {\n    this._readdir(path, (e: ApiError, entries?: Entry[]): void => {\n      if (e) {\n        return cb(e);\n      }\n      var rv: string[] = [];\n      for (var i = 0; i < entries.length; i++) {\n        rv.push(entries[i].name);\n      }\n      cb(null, rv);\n    });\n  }\n}\n","import kvfs = require('../generic/key_value_filesystem');\n\n/**\n * A simple in-memory key-value store backed by a JavaScript object.\n */\nexport class InMemoryStore implements kvfs.SyncKeyValueStore, kvfs.SimpleSyncStore {\n  private store: { [key: string]: NodeBuffer } = {};\n\n  public name() { return 'In-memory'; }\n  public clear() { this.store = {}; }\n\n  public beginTransaction(type: string): kvfs.SyncKeyValueRWTransaction {\n    return new kvfs.SimpleSyncRWTransaction(this);\n  }\n\n  public get(key: string): NodeBuffer {\n    return this.store[key];\n  }\n\n  public put(key: string, data: NodeBuffer, overwrite: boolean): boolean {\n    if (!overwrite && this.store.hasOwnProperty(key)) {\n      return false;\n    }\n    this.store[key] = data;\n    return true;\n  }\n\n  public del(key: string): void {\n    delete this.store[key];\n  }\n}\n\n/**\n * A simple in-memory file system backed by an InMemoryStore.\n */\nexport default class InMemoryFileSystem extends kvfs.SyncKeyValueFileSystem {\n  constructor() {\n    super({ store: new InMemoryStore() });\n  }\n}\n","import kvfs = require('../generic/key_value_filesystem');\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport global = require('../core/global');\nimport {arrayBuffer2Buffer, buffer2ArrayBuffer} from '../core/util';\n/**\n * Get the indexedDB constructor for the current browser.\n */\nvar indexedDB: IDBFactory = global.indexedDB ||\n                          (<any>global).mozIndexedDB ||\n                          (<any>global).webkitIndexedDB ||\n                          global.msIndexedDB;\n\n/**\n * Converts a DOMException or a DOMError from an IndexedDB event into a\n * standardized BrowserFS API error.\n */\nfunction convertError(e: {name: string}, message: string = e.toString()): ApiError {\n  switch(e.name) {\n    case \"NotFoundError\":\n      return new ApiError(ErrorCode.ENOENT, message);\n    case \"QuotaExceededError\":\n      return new ApiError(ErrorCode.ENOSPC, message);\n    default:\n      // The rest do not seem to map cleanly to standard error codes.\n      return new ApiError(ErrorCode.EIO, message);\n  }\n}\n\n/**\n * Produces a new onerror handler for IDB. Our errors are always fatal, so we\n * handle them generically: Call the user-supplied callback with a translated\n * version of the error, and let the error bubble up.\n */\nfunction onErrorHandler(cb: (e: ApiError) => void,\n  code: ErrorCode = ErrorCode.EIO, message: string = null): (e?: any) => void {\n  return function (e?: any): void {\n    // Prevent the error from canceling the transaction.\n    e.preventDefault();\n    cb(new ApiError(code, message));\n  };\n}\n\nexport class IndexedDBROTransaction implements kvfs.AsyncKeyValueROTransaction {\n  constructor(public tx: IDBTransaction, public store: IDBObjectStore) { }\n\n  get(key: string, cb: (e: ApiError, data?: NodeBuffer) => void): void {\n    try {\n      var r: IDBRequest = this.store.get(key);\n      r.onerror = onErrorHandler(cb);\n      r.onsuccess = (event) => {\n        // IDB returns the value 'undefined' when you try to get keys that\n        // don't exist. The caller expects this behavior.\n        var result: any = (<any>event.target).result;\n        if (result === undefined) {\n          cb(null, result);\n        } else {\n          // IDB data is stored as an ArrayBuffer\n          cb(null, arrayBuffer2Buffer(result));\n        }\n      };\n    } catch (e) {\n      cb(convertError(e));\n    }\n  }\n}\n\nexport class IndexedDBRWTransaction extends IndexedDBROTransaction implements kvfs.AsyncKeyValueRWTransaction, kvfs.AsyncKeyValueROTransaction {\n  constructor(tx: IDBTransaction, store: IDBObjectStore) {\n    super(tx, store);\n  }\n\n  public put(key: string, data: NodeBuffer, overwrite: boolean, cb: (e: ApiError, committed?: boolean) => void): void {\n    try {\n      var arraybuffer = buffer2ArrayBuffer(data),\n        r: IDBRequest;\n      if (overwrite) {\n        r = this.store.put(arraybuffer, key);\n      } else {\n        // 'add' will never overwrite an existing key.\n        r = this.store.add(arraybuffer, key);\n      }\n      // XXX: NEED TO RETURN FALSE WHEN ADD HAS A KEY CONFLICT. NO ERROR.\n      r.onerror = onErrorHandler(cb);\n      r.onsuccess = (event) => {\n        cb(null, true);\n      };\n    } catch (e) {\n      cb(convertError(e));\n    }\n  }\n\n  public del(key: string, cb: (e?: ApiError) => void): void {\n    try {\n      // NOTE: IE8 has a bug with identifiers named 'delete' unless used as a string\n      // like this.\n      // http://stackoverflow.com/a/26479152\n      var r: IDBRequest = this.store['delete'](key);\n      r.onerror = onErrorHandler(cb);\n      r.onsuccess = (event) => {\n        cb();\n      };\n    } catch (e) {\n      cb(convertError(e));\n    }\n  }\n\n  public commit(cb: (e?: ApiError) => void): void {\n    // Return to the event loop to commit the transaction.\n    setTimeout(cb, 0);\n  }\n\n  public abort(cb: (e?: ApiError) => void): void {\n    var _e: ApiError;\n    try {\n      this.tx.abort();\n    } catch (e) {\n      _e = convertError(e);\n    } finally {\n      cb(_e);\n    }\n  }\n}\n\nexport class IndexedDBStore implements kvfs.AsyncKeyValueStore {\n  private db: IDBDatabase;\n\n  /**\n   * Constructs an IndexedDB file system.\n   * @param cb Called once the database is instantiated and ready for use.\n   *   Passes an error if there was an issue instantiating the database.\n   * @param objectStoreName The name of this file system. You can have\n   *   multiple IndexedDB file systems operating at once, but each must have\n   *   a different name.\n   */\n  constructor(cb: (e: ApiError, store?: IndexedDBStore) => void, private storeName: string = 'browserfs') {\n    var openReq: IDBOpenDBRequest = indexedDB.open(this.storeName, 1);\n\n    openReq.onupgradeneeded = (event) => {\n      var db: IDBDatabase = (<any>event.target).result;\n      // Huh. This should never happen; we're at version 1. Why does another\n      // database exist?\n      if (db.objectStoreNames.contains(this.storeName)) {\n        db.deleteObjectStore(this.storeName);\n      }\n      db.createObjectStore(this.storeName);\n    };\n\n    openReq.onsuccess = (event) => {\n      this.db = (<any>event.target).result;\n      cb(null, this);\n    };\n\n    openReq.onerror = onErrorHandler(cb, ErrorCode.EACCES);\n  }\n\n  public name(): string {\n    return \"IndexedDB - \" + this.storeName;\n  }\n\n  public clear(cb: (e?: ApiError) => void): void {\n    try {\n      var tx = this.db.transaction(this.storeName, 'readwrite'),\n        objectStore = tx.objectStore(this.storeName),\n        r: IDBRequest = objectStore.clear();\n      r.onsuccess = (event) => {\n        // Use setTimeout to commit transaction.\n        setTimeout(cb, 0);\n      };\n      r.onerror = onErrorHandler(cb);\n    } catch (e) {\n      cb(convertError(e));\n    }\n  }\n\n  public beginTransaction(type: string = 'readonly'): kvfs.AsyncKeyValueROTransaction {\n    var tx = this.db.transaction(this.storeName, type),\n      objectStore = tx.objectStore(this.storeName);\n    if (type === 'readwrite') {\n      return new IndexedDBRWTransaction(tx, objectStore);\n    } else if (type === 'readonly') {\n      return new IndexedDBROTransaction(tx, objectStore);\n    } else {\n      throw new ApiError(ErrorCode.EINVAL, 'Invalid transaction type.');\n    }\n  }\n}\n\n/**\n * A file system that uses the IndexedDB key value file system.\n */\nexport default class IndexedDBFileSystem extends kvfs.AsyncKeyValueFileSystem {\n  constructor(cb: (e: ApiError, fs?: IndexedDBFileSystem) => void, storeName?: string) {\n    super();\n    new IndexedDBStore((e, store?): void => {\n      if (e) {\n        cb(e);\n      } else {\n        this.init(store, (e?) => {\n          cb(e, this);\n        });\n      }\n    }, storeName);\n  }\n\n  public static isAvailable(): boolean {\n    // In Safari's private browsing mode, indexedDB.open returns NULL.\n    // In Firefox, it throws an exception.\n    // In Chrome, it \"just works\", and clears the database when you leave the page.\n    // Untested: Opera, IE.\n    try {\n      return typeof indexedDB !== 'undefined' && null !== indexedDB.open(\"__browserfs_test__\");\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import kvfs = require('../generic/key_value_filesystem');\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport global = require('../core/global');\n\n// Some versions of FF and all versions of IE do not support the full range of\n// 16-bit numbers encoded as characters, as they enforce UTF-16 restrictions.\n// http://stackoverflow.com/questions/11170716/are-there-any-characters-that-are-not-allowed-in-localstorage/11173673#11173673\nvar supportsBinaryString: boolean = false,\n  binaryEncoding: string;\ntry {\n  global.localStorage.setItem(\"__test__\", String.fromCharCode(0xD800));\n  supportsBinaryString = global.localStorage.getItem(\"__test__\") === String.fromCharCode(0xD800);\n} catch (e) {\n  // IE throws an exception.\n  supportsBinaryString = false;\n}\nbinaryEncoding = supportsBinaryString ? 'binary_string' : 'binary_string_ie';\nif (!Buffer.isEncoding(binaryEncoding)) {\n  // Fallback for non BrowserFS implementations of buffer that lack a\n  // binary_string format.\n  binaryEncoding = \"base64\";\n}\n\n/**\n * A synchronous key-value store backed by localStorage.\n */\nexport class LocalStorageStore implements kvfs.SyncKeyValueStore, kvfs.SimpleSyncStore {\n  constructor() { }\n\n  public name(): string {\n    return 'LocalStorage';\n  }\n\n  public clear(): void {\n    global.localStorage.clear();\n  }\n\n  public beginTransaction(type: string): kvfs.SyncKeyValueRWTransaction {\n    // No need to differentiate.\n    return new kvfs.SimpleSyncRWTransaction(this);\n  }\n\n  public get(key: string): NodeBuffer {\n    try {\n      var data = global.localStorage.getItem(key);\n      if (data !== null) {\n        return new Buffer(data, binaryEncoding);\n      }\n    } catch (e) {\n\n    }\n    // Key doesn't exist, or a failure occurred.\n    return undefined;\n  }\n\n  public put(key: string, data: NodeBuffer, overwrite: boolean): boolean {\n    try {\n      if (!overwrite && global.localStorage.getItem(key) !== null) {\n        // Don't want to overwrite the key!\n        return false;\n      }\n      global.localStorage.setItem(key, data.toString(binaryEncoding));\n      return true;\n    } catch (e) {\n      throw new ApiError(ErrorCode.ENOSPC, \"LocalStorage is full.\");\n    }\n  }\n\n  public del(key: string): void {\n    try {\n      global.localStorage.removeItem(key);\n    } catch (e) {\n      throw new ApiError(ErrorCode.EIO, \"Unable to delete key \" + key + \": \" + e);\n    }\n  }\n}\n\n/**\n * A synchronous file system backed by localStorage. Connects our\n * LocalStorageStore to our SyncKeyValueFileSystem.\n */\nexport default class LocalStorageFileSystem extends kvfs.SyncKeyValueFileSystem {\n  constructor() { super({ store: new LocalStorageStore() }); }\n  public static isAvailable(): boolean {\n    return typeof global.localStorage !== 'undefined';\n  }\n}\n","import file_system = require('../core/file_system');\nimport InMemoryFileSystem from './InMemory';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport fs = require('../core/node_fs');\nimport path = require('path');\nimport {mkdirpSync} from '../core/util';\n\n/**\n * The MountableFileSystem allows you to mount multiple backend types or\n * multiple instantiations of the same backend into a single file system tree.\n * The file systems do not need to know about each other; all interactions are\n * automatically facilitated through this interface.\n *\n * For example, if a file system is mounted at /mnt/blah, and a request came in\n * for /mnt/blah/foo.txt, the file system would see a request for /foo.txt.\n */\nexport default class MountableFileSystem extends file_system.BaseFileSystem implements file_system.FileSystem {\n  private mntMap: {[path: string]: file_system.FileSystem};\n  // Contains the list of mount points in mntMap, sorted by string length in decreasing order.\n  // Ensures that we scan the most specific mount points for a match first, which lets us\n  // nest mount points.\n  private mountList: string[] = [];\n  private rootFs: file_system.FileSystem;\n  constructor() {\n    super();\n    this.mntMap = {};\n    // The InMemory file system serves purely to provide directory listings for\n    // mounted file systems.\n    this.rootFs = new InMemoryFileSystem();\n  }\n\n  /**\n   * Mounts the file system at the given mount point.\n   */\n  public mount(mountPoint: string, fs: file_system.FileSystem): void {\n    if (mountPoint[0] !== '/') {\n      mountPoint = `/${mountPoint}`;\n    }\n    mountPoint = path.resolve(mountPoint);\n    if (this.mntMap[mountPoint]) {\n      throw new ApiError(ErrorCode.EINVAL, \"Mount point \" + mountPoint + \" is already taken.\");\n    }\n    mkdirpSync(mountPoint, 0x1ff, this.rootFs);\n    this.mntMap[mountPoint] = fs;\n    this.mountList.push(mountPoint);\n    this.mountList = this.mountList.sort((a, b) => b.length - a.length);\n  }\n\n  public umount(mountPoint: string): void {\n    if (mountPoint[0] !== '/') {\n      mountPoint = `/${mountPoint}`;\n    }\n    mountPoint = path.resolve(mountPoint);\n    if (!this.mntMap[mountPoint]) {\n      throw new ApiError(ErrorCode.EINVAL, \"Mount point \" + mountPoint + \" is already unmounted.\");\n    }\n    delete this.mntMap[mountPoint];\n    this.mountList.splice(this.mountList.indexOf(mountPoint), 1);\n\n    while (mountPoint !== '/') {\n      if (this.rootFs.readdirSync(mountPoint).length === 0) {\n        this.rootFs.rmdirSync(mountPoint);\n        mountPoint = path.dirname(mountPoint);\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Returns the file system that the path points to.\n   */\n  public _getFs(path: string): {fs: file_system.FileSystem; path: string} {\n    let mountList = this.mountList, len = mountList.length;\n    for (let i = 0; i < len; i++) {\n      let mountPoint = mountList[i];\n      // We know path is normalized, so it is a substring of the mount point.\n      if (mountPoint.length <= path.length && path.indexOf(mountPoint) === 0) {\n        path = path.substr(mountPoint.length > 1 ? mountPoint.length : 0);\n        if (path === '') {\n          path = '/';\n        }\n        return {fs: this.mntMap[mountPoint], path: path};\n      }\n    }\n    // Query our root file system.\n    return {fs: this.rootFs, path: path};\n  }\n\n  // Global information methods\n\n  public getName(): string {\n    return 'MountableFileSystem';\n  }\n\n  public static isAvailable(): boolean {\n    return true;\n  }\n\n  public diskSpace(path: string, cb: (total: number, free: number) => void): void {\n    cb(0, 0);\n  }\n\n  public isReadOnly(): boolean {\n    return false;\n  }\n\n  public supportsLinks(): boolean {\n    // I'm not ready for cross-FS links yet.\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return true;\n  }\n\n  /**\n   * Fixes up error messages so they mention the mounted file location relative\n   * to the MFS root, not to the particular FS's root.\n   * Mutates the input error, and returns it.\n   */\n  private standardizeError(err: ApiError, path: string, realPath: string): ApiError {\n    var index: number;\n    if (-1 !== (index = err.message.indexOf(path))) {\n      err.message = err.message.substr(0, index) + realPath + err.message.substr(index + path.length);\n      err.path = realPath;\n    }\n    return err;\n  }\n\n  // The following methods involve multiple file systems, and thus have custom\n  // logic.\n  // Note that we go through the Node API to use its robust default argument\n  // processing.\n\n  public rename(oldPath: string, newPath: string, cb: (e?: ApiError) => void): void {\n    // Scenario 1: old and new are on same FS.\n    var fs1_rv = this._getFs(oldPath);\n    var fs2_rv = this._getFs(newPath);\n    if (fs1_rv.fs === fs2_rv.fs) {\n      var _this = this;\n      return fs1_rv.fs.rename(fs1_rv.path, fs2_rv.path, function(e?: ApiError) {\n        if (e) _this.standardizeError(_this.standardizeError(e, fs1_rv.path, oldPath), fs2_rv.path, newPath);\n        cb(e);\n      });\n    }\n\n    // Scenario 2: Different file systems.\n    // Read old file, write new file, delete old file.\n    return fs.readFile(oldPath, function(err: ApiError, data?: any) {\n      if (err) {\n        return cb(err);\n      }\n      fs.writeFile(newPath, data, function(err) {\n        if (err) {\n          return cb(err);\n        }\n        fs.unlink(oldPath, cb);\n      });\n    });\n  }\n\n  public renameSync(oldPath: string, newPath: string): void {\n    // Scenario 1: old and new are on same FS.\n    var fs1_rv = this._getFs(oldPath);\n    var fs2_rv = this._getFs(newPath);\n    if (fs1_rv.fs === fs2_rv.fs) {\n      try {\n        return fs1_rv.fs.renameSync(fs1_rv.path, fs2_rv.path);\n      } catch(e) {\n        this.standardizeError(this.standardizeError(e, fs1_rv.path, oldPath), fs2_rv.path, newPath);\n        throw e;\n      }\n    }\n    // Scenario 2: Different file systems.\n    var data = fs.readFileSync(oldPath);\n    fs.writeFileSync(newPath, data);\n    return fs.unlinkSync(oldPath);\n  }\n\n  public readdirSync(p: string): string[] {\n    let fsInfo = this._getFs(p);\n\n    // If null, rootfs did not have the directory\n    // (or the target FS is the root fs).\n    let rv = null;\n    // Mount points are all defined in the root FS.\n    // Ensure that we list those, too.\n    if (fsInfo.fs !== this.rootFs) {\n      try {\n        rv = this.rootFs.readdirSync(p);\n      } catch (e) {\n        // Ignore.\n      }\n    }\n\n    try {\n      let rv2 = fsInfo.fs.readdirSync(fsInfo.path);\n      if (rv === null) {\n        return rv2;\n      } else {\n        // Filter out duplicates.\n        return rv2.concat(rv.filter((val) => rv2.indexOf(val) === -1));\n      }\n    } catch(e) {\n      if (rv === null) {\n        throw this.standardizeError(e, fsInfo.path, p);\n      } else {\n        // The root FS had something.\n        return rv;\n      }\n    }\n  }\n\n  public readdir(p: string, cb: (err: NodeJS.ErrnoException, listing?: string[]) => any): void {\n    let fsInfo = this._getFs(p);\n    fsInfo.fs.readdir(fsInfo.path, (err, files) => {\n      if (fsInfo.fs !== this.rootFs) {\n        try {\n          let rv = this.rootFs.readdirSync(p);\n          if (files) {\n            // Filter out duplicates.\n            files = files.concat(rv.filter((val) => files.indexOf(val) === -1));\n          } else {\n            files = rv;\n          }\n        } catch (e) {\n          // Root FS and target FS did not have directory.\n          if (err) {\n            return cb(this.standardizeError(err, fsInfo.path, p));\n          }\n        }\n      } else if (err) {\n        // Root FS and target FS are the same, and did not have directory.\n        return cb(this.standardizeError(err, fsInfo.path, p));\n      }\n\n      cb(null, files);\n    });\n  }\n\n  public rmdirSync(p: string): void {\n    let fsInfo = this._getFs(p);\n    if (this._containsMountPt(p)) {\n      throw ApiError.ENOTEMPTY(p);\n    } else {\n      try {\n        fsInfo.fs.rmdirSync(fsInfo.path);\n      } catch (e) {\n        throw this.standardizeError(e, fsInfo.path, p);\n      }\n    }\n  }\n\n  /**\n   * Returns true if the given path contains a mount point.\n   */\n  private _containsMountPt(p: string): boolean {\n    let mountPoints = this.mountList, len = mountPoints.length;\n    for (let i = 0; i < len; i++) {\n      let pt = mountPoints[i];\n      if (pt.length >= p.length && pt.slice(0, p.length) === p) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public rmdir(p: string, cb: (err?: NodeJS.ErrnoException) => any): void {\n    let fsInfo = this._getFs(p);\n    if (this._containsMountPt(p)) {\n      cb(ApiError.ENOTEMPTY(p));\n    } else {\n      fsInfo.fs.rmdir(fsInfo.path, (err?) => {\n        cb(err ? this.standardizeError(err, fsInfo.path, p) : null);\n      });\n    }\n  }\n}\n\n/**\n * Tricky: Define all of the functions that merely forward arguments to the\n * relevant file system, or return/throw an error.\n * Take advantage of the fact that the *first* argument is always the path, and\n * the *last* is the callback function (if async).\n * @todo Can use numArgs to make proxying more efficient.\n */\nfunction defineFcn(name: string, isSync: boolean, numArgs: number): (...args: any[]) => any {\n  if (isSync) {\n    return function(...args: any[]) {\n      let self: MountableFileSystem = this;\n      var path = args[0];\n      var rv = self._getFs(path);\n      args[0] = rv.path;\n      try {\n        return rv.fs[name].apply(rv.fs, args);\n      } catch (e) {\n        (<any> self).standardizeError(e, rv.path, path);\n        throw e;\n      }\n    };\n  } else {\n    return function(...args: any[]) {\n      let self: MountableFileSystem = this;\n      var path = args[0];\n      var rv = self._getFs(path);\n      args[0] = rv.path;\n      if (typeof args[args.length-1] === 'function') {\n        var cb = args[args.length - 1];\n        args[args.length - 1] = function(...args: any[]) {\n          if (args.length > 0 && args[0] instanceof ApiError) {\n            (<any> self).standardizeError(args[0], rv.path, path);\n          }\n          cb.apply(null, args);\n        }\n      }\n      return rv.fs[name].apply(rv.fs, args);\n    };\n  }\n}\n\nvar fsCmdMap = [\n   // 1 arg functions\n   ['exists', 'unlink', 'readlink'],\n   // 2 arg functions\n   ['stat', 'mkdir', 'realpath', 'truncate'],\n   // 3 arg functions\n   ['open', 'readFile', 'chmod', 'utimes'],\n   // 4 arg functions\n   ['chown'],\n   // 5 arg functions\n   ['writeFile', 'appendFile']];\n\nfor (var i = 0; i < fsCmdMap.length; i++) {\n  var cmds = fsCmdMap[i];\n  for (var j = 0; j < cmds.length; j++) {\n    var fnName = cmds[j];\n    (<any> MountableFileSystem.prototype)[fnName] = defineFcn(fnName, false, i + 1);\n    (<any> MountableFileSystem.prototype)[fnName + 'Sync'] = defineFcn(fnName + 'Sync', true, i + 1);\n  }\n}\n","import {FileSystem, BaseFileSystem} from '../core/file_system';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {FileFlag, ActionType} from '../core/file_flag';\nimport util = require('../core/util');\nimport {File} from '../core/file';\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport {PreloadFile} from '../generic/preload_file';\nimport LockedFS from '../generic/locked_fs';\nimport path = require('path');\nlet deletionLogPath = '/.deletedFiles.log';\n\n/**\n * Given a read-only mode, makes it writable.\n */\nfunction makeModeWritable(mode: number): number {\n  return 0o222 | mode;\n}\n\nfunction getFlag(f: string): FileFlag {\n  return FileFlag.getFileFlag(f);\n}\n\n/**\n * Overlays a RO file to make it writable.\n */\nclass OverlayFile extends PreloadFile<UnlockedOverlayFS> implements File {\n  constructor(fs: UnlockedOverlayFS, path: string, flag: FileFlag, stats: Stats, data: Buffer) {\n    super(fs, path, flag, stats, data);\n  }\n\n  public sync(cb: (e?: ApiError) => void): void {\n    if (!this.isDirty()) {\n      cb(null);\n      return;\n    }\n\n    this._fs._syncAsync(this, (err: ApiError) => {\n      this.resetDirty();\n      cb(err);\n    });\n  }\n\n  public syncSync(): void {\n    if (this.isDirty()) {\n      this._fs._syncSync(this);\n      this.resetDirty();\n    }\n  }\n\n  public close(cb: (e?: ApiError) => void): void {\n    this.sync(cb);\n  }\n\n  public closeSync(): void {\n    this.syncSync();\n  }\n}\n\n/**\n * OverlayFS makes a read-only filesystem writable by storing writes on a second,\n * writable file system. Deletes are persisted via metadata stored on the writable\n * file system.\n */\nexport class UnlockedOverlayFS extends BaseFileSystem implements FileSystem {\n  private _writable: FileSystem;\n  private _readable: FileSystem;\n  private _isInitialized: boolean = false;\n  private _initializeCallbacks: ((e?: ApiError) => void)[] = [];\n  private _deletedFiles: {[path: string]: boolean} = {};\n  private _deleteLog: File = null;\n\n  constructor(writable: FileSystem, readable: FileSystem) {\n    super();\n    this._writable = writable;\n    this._readable = readable;\n    if (this._writable.isReadOnly()) {\n      throw new ApiError(ErrorCode.EINVAL, \"Writable file system must be writable.\");\n    }\n  }\n\n  private checkInitialized(): void {\n    if (!this._isInitialized) {\n      throw new ApiError(ErrorCode.EPERM, \"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.\");\n    }\n  }\n\n  public getOverlayedFileSystems(): { readable: FileSystem; writable: FileSystem; } {\n    return {\n      readable: this._readable,\n      writable: this._writable\n    };\n  }\n\n  private createParentDirectoriesAsync(p: string, cb: (err?: ApiError)=>void): void {\n    let parent = path.dirname(p)\n    let toCreate: string[] = [];\n    let _this = this;\n\n    this._writable.stat(parent, false, statDone);\n    function statDone(err: ApiError, stat?: Stats): void {\n      if (err) {\n        toCreate.push(parent);\n        parent = path.dirname(parent);\n        _this._writable.stat(parent, false, statDone);\n      } else {\n        createParents();\n      }\n    }\n\n    function createParents(): void {\n      if (!toCreate.length) {\n        return cb();\n      }\n\n      let dir = toCreate.pop();\n      _this._readable.stat(dir, false, (err: ApiError, stats?: Stats) => {\n        // stop if we couldn't read the dir\n        if (!stats) {\n          return cb();\n        }\n\n        _this._writable.mkdir(dir, stats.mode, (err?: ApiError) => {\n          if (err) {\n            return cb(err);\n          }\n          createParents();\n        });\n      });\n    }\n  }\n\n  /**\n   * With the given path, create the needed parent directories on the writable storage\n   * should they not exist. Use modes from the read-only storage.\n   */\n  private createParentDirectories(p: string): void {\n    var parent = path.dirname(p), toCreate: string[] = [];\n    while (!this._writable.existsSync(parent)) {\n      toCreate.push(parent);\n      parent = path.dirname(parent);\n    }\n    toCreate = toCreate.reverse();\n\n    toCreate.forEach((p: string) => {\n      this._writable.mkdirSync(p, this.statSync(p, false).mode);\n    });\n  }\n\n  public static isAvailable(): boolean {\n    return true;\n  }\n\n  public _syncAsync(file: PreloadFile<UnlockedOverlayFS>, cb: (err: ApiError)=>void): void {\n    this.createParentDirectoriesAsync(file.getPath(), (err?: ApiError) => {\n      if (err) {\n        return cb(err);\n      }\n      this._writable.writeFile(file.getPath(), file.getBuffer(), null, getFlag('w'), file.getStats().mode, cb);\n    });\n  }\n\n  public _syncSync(file: PreloadFile<UnlockedOverlayFS>): void {\n    this.createParentDirectories(file.getPath());\n    this._writable.writeFileSync(file.getPath(), file.getBuffer(), null, getFlag('w'), file.getStats().mode);\n  }\n\n  public getName() {\n    return \"OverlayFS\";\n  }\n\n  /**\n   * Called once to load up metadata stored on the writable file system.\n   */\n  public initialize(cb: (err?: ApiError) => void): void {\n    const callbackArray = this._initializeCallbacks;\n\n    const end = (e?: ApiError): void => {\n      this._isInitialized = !e;\n      this._initializeCallbacks = [];\n      callbackArray.forEach(((cb) => cb(e)));\n    };\n\n    // if we're already initialized, immediately invoke the callback\n    if (this._isInitialized) {\n      return cb();\n    }\n\n    callbackArray.push(cb);\n    // The first call to initialize initializes, the rest wait for it to complete.\n    if (callbackArray.length !== 1) {\n      return;\n    }\n\n    // Read deletion log, process into metadata.\n    this._writable.readFile(deletionLogPath, 'utf8', getFlag('r'), (err: ApiError, data?: string) => {\n      if (err) {\n        // ENOENT === Newly-instantiated file system, and thus empty log.\n        if (err.errno !== ErrorCode.ENOENT) {\n          return end(err);\n        }\n      } else {\n        data.split('\\n').forEach((path: string) => {\n          // If the log entry begins w/ 'd', it's a deletion. Otherwise, it's\n          // an undeletion.\n          // TODO: Clean up log during initialization phase.\n          this._deletedFiles[path.slice(1)] = path.slice(0, 1) === 'd';\n        });\n      }\n      // Open up the deletion log for appending.\n      this._writable.open(deletionLogPath, getFlag('a'), 0o644, (err: ApiError, fd?: File) => {\n        if (!err) {\n          this._deleteLog = fd;\n        }\n        end(err);\n      });\n    });\n  }\n\n  public isReadOnly(): boolean { return false; }\n  public supportsSynch(): boolean { return this._readable.supportsSynch() && this._writable.supportsSynch(); }\n  public supportsLinks(): boolean { return false; }\n  public supportsProps(): boolean { return this._readable.supportsProps() && this._writable.supportsProps(); }\n\n  private deletePath(p: string): void {\n    this._deletedFiles[p] = true;\n    var buff = new Buffer(\"d\" + p + \"\\n\");\n    this._deleteLog.writeSync(buff, 0, buff.length, null);\n    this._deleteLog.syncSync();\n  }\n\n  private undeletePath(p: string): void {\n    if (this._deletedFiles[p]) {\n      this._deletedFiles[p] = false;\n      var buff = new Buffer(\"u\" + p);\n      this._deleteLog.writeSync(buff, 0, buff.length, null);\n      this._deleteLog.syncSync();\n    }\n  }\n\n  public rename(oldPath: string, newPath: string, cb: (err?: ApiError) => void): void {\n    this.checkInitialized();\n    // nothing to do if paths match\n    if (oldPath === newPath) {\n      return cb();\n    }\n\n    this.stat(oldPath, false, (oldErr: ApiError, oldStats?: Stats) => {\n      if (oldErr) {\n        return cb(oldErr);\n      }\n\n      return this.stat(newPath, false, (newErr: ApiError, newStats?: Stats) => {\n\n        // precondition: both oldPath and newPath exist and are dirs.\n        // decreases: |files|\n        // Need to move *every file/folder* currently stored on\n        // readable to its new location on writable.\n        function copyDirContents(files: string[]): void {\n          let file = files.shift();\n          if (!file) {\n            return cb();\n          }\n\n          let oldFile = path.resolve(oldPath, file);\n          let newFile = path.resolve(newPath, file);\n\n          // Recursion! Should work for any nested files / folders.\n          this.rename(oldFile, newFile, (err?: ApiError) => {\n            if (err) {\n              return cb(err);\n            }\n            copyDirContents(files);\n          });\n        }\n\n        let mode = 0o777;\n\n        // from linux's rename(2) manpage: oldpath can specify a\n        // directory.  In this case, newpath must either not exist, or\n        // it must specify an empty directory.\n        if (oldStats.isDirectory()) {\n          if (newErr) {\n            if (newErr.errno !== ErrorCode.ENOENT) {\n              return cb(newErr);\n            }\n\n            return this._writable.exists(oldPath, (exists: boolean) => {\n              // simple case - both old and new are on the writable layer\n              if (exists) {\n                return this._writable.rename(oldPath, newPath, cb);\n              }\n\n              this._writable.mkdir(newPath, mode, (mkdirErr?: ApiError) => {\n                if (mkdirErr) {\n                  return cb(mkdirErr);\n                }\n\n                this._readable.readdir(oldPath, (err: ApiError, files?: string[]) => {\n                  if (err) {\n                    return cb();\n                  }\n                  copyDirContents(files);\n                });\n              });\n            });\n          }\n\n          mode = newStats.mode;\n          if (!newStats.isDirectory()) {\n            return cb(ApiError.ENOTDIR(newPath));\n          }\n\n          this.readdir(newPath, (readdirErr: ApiError, files?: string[]) => {\n            if (files && files.length) {\n              return cb(ApiError.ENOTEMPTY(newPath));\n            }\n\n            this._readable.readdir(oldPath, (err: ApiError, files?: string[]) => {\n              if (err) {\n                return cb();\n              }\n              copyDirContents(files);\n            });\n          });\n        }\n\n        if (newStats && newStats.isDirectory()) {\n          return cb(ApiError.EISDIR(newPath));\n        }\n\n        this.readFile(oldPath, null, getFlag('r'), (err: ApiError, data?: any) => {\n          if (err) {\n            return cb(err);\n          }\n\n          return this.writeFile(newPath, data, null, getFlag('w'), oldStats.mode, (err: ApiError) => {\n            if (err) {\n              return cb(err);\n            }\n            return this.unlink(oldPath, cb);\n          });\n        });\n      });\n    });\n  }\n\n  public renameSync(oldPath: string, newPath: string): void {\n    this.checkInitialized();\n    // Write newPath using oldPath's contents, delete oldPath.\n    var oldStats = this.statSync(oldPath, false);\n    if (oldStats.isDirectory()) {\n      // Optimization: Don't bother moving if old === new.\n      if (oldPath === newPath) {\n        return;\n      }\n\n      var mode = 0o777;\n      if (this.existsSync(newPath)) {\n        var stats = this.statSync(newPath, false),\n          mode = stats.mode;\n        if (stats.isDirectory()) {\n          if (this.readdirSync(newPath).length > 0) {\n            throw ApiError.ENOTEMPTY(newPath);\n          }\n        } else {\n          throw ApiError.ENOTDIR(newPath);\n        }\n      }\n\n      // Take care of writable first. Move any files there, or create an empty directory\n      // if it doesn't exist.\n      if (this._writable.existsSync(oldPath)) {\n        this._writable.renameSync(oldPath, newPath);\n      } else if (!this._writable.existsSync(newPath)) {\n        this._writable.mkdirSync(newPath, mode);\n      }\n\n      // Need to move *every file/folder* currently stored on readable to its new location\n      // on writable.\n      if (this._readable.existsSync(oldPath)) {\n        this._readable.readdirSync(oldPath).forEach((name) => {\n          // Recursion! Should work for any nested files / folders.\n          this.renameSync(path.resolve(oldPath, name), path.resolve(newPath, name));\n        });\n      }\n    } else {\n      if (this.existsSync(newPath) && this.statSync(newPath, false).isDirectory()) {\n        throw ApiError.EISDIR(newPath);\n      }\n\n      this.writeFileSync(newPath,\n        this.readFileSync(oldPath, null, getFlag('r')), null, getFlag('w'), oldStats.mode);\n    }\n\n    if (oldPath !== newPath && this.existsSync(oldPath)) {\n      this.unlinkSync(oldPath);\n    }\n  }\n\n  public stat(p: string, isLstat: boolean,  cb: (err: ApiError, stat?: Stats) => void): void {\n    this.checkInitialized();\n    this._writable.stat(p, isLstat, (err: ApiError, stat?: Stats) => {\n      if (err && err.errno === ErrorCode.ENOENT) {\n        if (this._deletedFiles[p]) {\n          cb(ApiError.ENOENT(p));\n        }\n        this._readable.stat(p, isLstat, (err: ApiError, stat?: Stats) => {\n          if (stat) {\n            // Make the oldStat's mode writable. Preserve the topmost\n            // part of the mode, which specifies if it is a file or a\n            // directory.\n            stat = stat.clone();\n            stat.mode = makeModeWritable(stat.mode);\n          }\n          cb(err, stat);\n        });\n      } else {\n        cb(err, stat);\n      }\n    });\n  }\n\n  public statSync(p: string, isLstat: boolean): Stats {\n    this.checkInitialized();\n    try {\n      return this._writable.statSync(p, isLstat);\n    } catch (e) {\n      if (this._deletedFiles[p]) {\n        throw ApiError.ENOENT(p);\n      }\n      var oldStat = this._readable.statSync(p, isLstat).clone();\n      // Make the oldStat's mode writable. Preserve the topmost part of the\n      // mode, which specifies if it is a file or a directory.\n      oldStat.mode = makeModeWritable(oldStat.mode);\n      return oldStat;\n    }\n  }\n\n  public open(p: string, flag: FileFlag, mode: number, cb: (err: ApiError, fd?: File) => any): void {\n    this.checkInitialized();\n    this.stat(p, false, (err: ApiError, stats?: Stats) => {\n      if (stats) {\n        switch (flag.pathExistsAction()) {\n        case ActionType.TRUNCATE_FILE:\n          return this.createParentDirectoriesAsync(p, (err?: ApiError)=> {\n            if (err) {\n              return cb(err);\n            }\n            this._writable.open(p, flag, mode, cb);\n          });\n        case ActionType.NOP:\n          return this._writable.exists(p, (exists: boolean) => {\n            if (exists) {\n              this._writable.open(p, flag, mode, cb);\n            } else {\n              // at this point we know the stats object we got is from\n              // the readable FS.\n              stats = stats.clone();\n              stats.mode = mode;\n              this._readable.readFile(p, null, getFlag('r'), (readFileErr: ApiError, data?: any) => {\n                if (readFileErr) {\n                  return cb(readFileErr);\n                }\n                if (stats.size === -1) {\n                  stats.size = data.length;\n                }\n                let f = new OverlayFile(this, p, flag, stats, data);\n                cb(null, f);\n              });\n            }\n          });\n        default:\n          return cb(ApiError.EEXIST(p));\n        }\n      } else {\n        switch(flag.pathNotExistsAction()) {\n        case ActionType.CREATE_FILE:\n          return this.createParentDirectoriesAsync(p, (err?: ApiError) => {\n            if (err) {\n              return cb(err);\n            }\n            return this._writable.open(p, flag, mode, cb);\n          });\n        default:\n          return cb(ApiError.ENOENT(p));\n        }\n      }\n    });\n  }\n\n  public openSync(p: string, flag: FileFlag, mode: number): File {\n    this.checkInitialized();\n    if (this.existsSync(p)) {\n      switch (flag.pathExistsAction()) {\n        case ActionType.TRUNCATE_FILE:\n          this.createParentDirectories(p);\n          return this._writable.openSync(p, flag, mode);\n        case ActionType.NOP:\n          if (this._writable.existsSync(p)) {\n            return this._writable.openSync(p, flag, mode);\n          } else {\n            // Create an OverlayFile.\n            var stats = this._readable.statSync(p, false).clone();\n            stats.mode = mode;\n            return new OverlayFile(this, p, flag, stats, this._readable.readFileSync(p, null, getFlag('r')));\n          }\n        default:\n          throw ApiError.EEXIST(p);\n      }\n    } else {\n      switch(flag.pathNotExistsAction()) {\n        case ActionType.CREATE_FILE:\n          this.createParentDirectories(p);\n          return this._writable.openSync(p, flag, mode);\n        default:\n          throw ApiError.ENOENT(p);\n      }\n    }\n  }\n\n  public unlink(p: string, cb: (err: ApiError) => void): void {\n    this.checkInitialized();\n    this.exists(p, (exists: boolean) => {\n      if (!exists)\n        return cb(ApiError.ENOENT(p));\n\n      this._writable.exists(p, (writableExists: boolean) => {\n        if (writableExists) {\n          return this._writable.unlink(p, (err: ApiError) => {\n            if (err) {\n              return cb(err);\n            }\n\n            this.exists(p, (readableExists: boolean) => {\n              if (readableExists) {\n                this.deletePath(p);\n              }\n              cb(null);\n            });\n          });\n        } else {\n          // if this only exists on the readable FS, add it to the\n          // delete map.\n          this.deletePath(p);\n          cb(null);\n        }\n      });\n    });\n  }\n\n  public unlinkSync(p: string): void {\n    this.checkInitialized();\n    if (this.existsSync(p)) {\n      if (this._writable.existsSync(p)) {\n        this._writable.unlinkSync(p);\n      }\n\n      // if it still exists add to the delete log\n      if (this.existsSync(p)) {\n        this.deletePath(p);\n      }\n    } else {\n      throw ApiError.ENOENT(p);\n    }\n  }\n\n  public rmdir(p: string, cb: (err?: ApiError) => void): void {\n    this.checkInitialized();\n\n    let rmdirLower = (): void => {\n      this.readdir(p, (err: ApiError, files: string[]): void => {\n        if (err) {\n          return cb(err);\n        }\n\n        if (files.length) {\n          return cb(ApiError.ENOTEMPTY(p));\n        }\n\n        this.deletePath(p);\n        cb(null);\n      });\n    };\n\n    this.exists(p, (exists: boolean) => {\n      if (!exists) {\n        return cb(ApiError.ENOENT(p));\n      }\n\n      this._writable.exists(p, (writableExists: boolean) => {\n        if (writableExists) {\n          this._writable.rmdir(p, (err: ApiError) => {\n            if (err) {\n              return cb(err);\n            }\n\n            this._readable.exists(p, (readableExists: boolean) => {\n              if (readableExists) {\n                rmdirLower();\n              } else {\n                cb();\n              }\n            });\n          });\n        } else {\n          rmdirLower();\n        }\n      });\n    });\n  }\n\n  public rmdirSync(p: string): void {\n    this.checkInitialized();\n    if (this.existsSync(p)) {\n      if (this._writable.existsSync(p)) {\n        this._writable.rmdirSync(p);\n      }\n      if (this.existsSync(p)) {\n        // Check if directory is empty.\n        if (this.readdirSync(p).length > 0) {\n          throw ApiError.ENOTEMPTY(p);\n        } else {\n          this.deletePath(p);\n        }\n      }\n    } else {\n      throw ApiError.ENOENT(p);\n    }\n  }\n\n  public mkdir(p: string, mode: number, cb: (err: ApiError, stat?: Stats) => void): void {\n    this.checkInitialized();\n    this.exists(p, (exists: boolean) => {\n      if (exists) {\n        return cb(ApiError.EEXIST(p));\n      }\n\n      // The below will throw should any of the parent directories\n      // fail to exist on _writable.\n      this.createParentDirectoriesAsync(p, (err: ApiError) => {\n        if (err) {\n          return cb(err);\n        }\n        this._writable.mkdir(p, mode, cb);\n      });\n    });\n  }\n\n  public mkdirSync(p: string, mode: number): void {\n    this.checkInitialized();\n    if (this.existsSync(p)) {\n      throw ApiError.EEXIST(p);\n    } else {\n      // The below will throw should any of the parent directories fail to exist\n      // on _writable.\n      this.createParentDirectories(p);\n      this._writable.mkdirSync(p, mode);\n    }\n  }\n\n  public readdir(p: string, cb: (error: ApiError, files?: string[]) => void): void {\n    this.checkInitialized();\n    this.stat(p, false, (err: ApiError, dirStats?: Stats) => {\n      if (err) {\n        return cb(err);\n      }\n\n      if (!dirStats.isDirectory()) {\n        return cb(ApiError.ENOTDIR(p));\n      }\n\n      this._writable.readdir(p, (err: ApiError, wFiles: string[]) => {\n        if (err && err.code !== 'ENOENT') {\n          return cb(err);\n        } else if (err || !wFiles) {\n          wFiles = [];\n        }\n\n        this._readable.readdir(p, (err: ApiError, rFiles: string[]) => {\n          // if the directory doesn't exist on the lower FS set rFiles\n          // here to simplify the following code.\n          if (err || !rFiles) {\n            rFiles = [];\n          }\n\n          // Readdir in both, merge, check delete log on each file, return.\n          let contents: string[] = wFiles.concat(rFiles);\n          let seenMap: {[name: string]: boolean} = {};\n          let filtered = contents.filter((fPath: string) => {\n            let result = !seenMap[fPath] && !this._deletedFiles[p + \"/\" + fPath];\n            seenMap[fPath] = true;\n            return result;\n          });\n\n          cb(null, filtered);\n        });\n      });\n    });\n  }\n\n  public readdirSync(p: string): string[] {\n    this.checkInitialized();\n    var dirStats = this.statSync(p, false);\n    if (!dirStats.isDirectory()) {\n      throw ApiError.ENOTDIR(p);\n    }\n\n    // Readdir in both, merge, check delete log on each file, return.\n    var contents: string[] = [];\n    try {\n      contents = contents.concat(this._writable.readdirSync(p));\n    } catch (e) {\n    }\n    try {\n      contents = contents.concat(this._readable.readdirSync(p));\n    } catch (e) {\n    }\n    var seenMap: {[name: string]: boolean} = {};\n    return contents.filter((fileP: string) => {\n      var result = seenMap[fileP] === undefined && this._deletedFiles[p + \"/\" + fileP] !== true;\n      seenMap[fileP] = true;\n      return result;\n    });\n  }\n\n  public exists(p: string, cb: (exists: boolean) => void): void {\n    this.checkInitialized();\n    this._writable.exists(p, (existsWritable: boolean) => {\n      if (existsWritable) {\n        return cb(true);\n      }\n\n      this._readable.exists(p, (existsReadable: boolean) => {\n        cb(existsReadable && this._deletedFiles[p] !== true);\n      });\n    });\n  }\n\n  public existsSync(p: string): boolean {\n    this.checkInitialized();\n    return this._writable.existsSync(p) || (this._readable.existsSync(p) && this._deletedFiles[p] !== true);\n  }\n\n  public chmod(p: string, isLchmod: boolean, mode: number, cb: (error?: ApiError) => void): void {\n    this.checkInitialized();\n    this.operateOnWritableAsync(p, (err?: ApiError) => {\n      if (err) {\n        return cb(err);\n      } else {\n        this._writable.chmod(p, isLchmod, mode, cb);\n      }\n    });\n  }\n\n  public chmodSync(p: string, isLchmod: boolean, mode: number): void {\n    this.checkInitialized();\n    this.operateOnWritable(p, () => {\n      this._writable.chmodSync(p, isLchmod, mode);\n    });\n  }\n\n  public chown(p: string, isLchmod: boolean, uid: number, gid: number, cb: (error?: ApiError) => void): void {\n    this.checkInitialized();\n    this.operateOnWritableAsync(p, (err?: ApiError) => {\n      if (err) {\n        return cb(err);\n      } else {\n        this._writable.chown(p, isLchmod, uid, gid, cb);\n      }\n    });\n  }\n\n  public chownSync(p: string, isLchown: boolean, uid: number, gid: number): void {\n    this.checkInitialized();\n    this.operateOnWritable(p, () => {\n      this._writable.chownSync(p, isLchown, uid, gid);\n    });\n  }\n\n  public utimes(p: string, atime: Date, mtime: Date, cb: (error?: ApiError) => void): void {\n    this.checkInitialized();\n    this.operateOnWritableAsync(p, (err?: ApiError) => {\n      if (err) {\n        return cb(err);\n      } else {\n        this._writable.utimes(p, atime, mtime, cb);\n      }\n    });\n  }\n\n  public utimesSync(p: string, atime: Date, mtime: Date): void {\n    this.checkInitialized();\n    this.operateOnWritable(p, () => {\n      this._writable.utimesSync(p, atime, mtime);\n    });\n  }\n\n  /**\n   * Helper function:\n   * - Ensures p is on writable before proceeding. Throws an error if it doesn't exist.\n   * - Calls f to perform operation on writable.\n   */\n  private operateOnWritable(p: string, f: () => void): void {\n    if (this.existsSync(p)) {\n      if (!this._writable.existsSync(p)) {\n        // File is on readable storage. Copy to writable storage before\n        // changing its mode.\n        this.copyToWritable(p);\n      }\n      f();\n    } else {\n      throw ApiError.ENOENT(p);\n    }\n  }\n\n  private operateOnWritableAsync(p: string, cb: (error?: ApiError) => void): void {\n    this.exists(p, (exists: boolean) => {\n      if (!exists) {\n        return cb(ApiError.ENOENT(p));\n      }\n\n      this._writable.exists(p, (existsWritable: boolean) => {\n        if (existsWritable) {\n          cb();\n        } else {\n          return this.copyToWritableAsync(p, cb);\n        }\n      });\n    });\n  }\n\n  /**\n   * Copy from readable to writable storage.\n   * PRECONDITION: File does not exist on writable storage.\n   */\n  private copyToWritable(p: string): void {\n    var pStats = this.statSync(p, false);\n    if (pStats.isDirectory()) {\n      this._writable.mkdirSync(p, pStats.mode);\n    } else {\n      this.writeFileSync(p,\n        this._readable.readFileSync(p, null, getFlag('r')), null,\n        getFlag('w'), this.statSync(p, false).mode);\n    }\n  }\n\n  private copyToWritableAsync(p: string, cb: (err?: ApiError) => void): void {\n    this.stat(p, false, (err: ApiError, pStats?: Stats) => {\n      if (err) {\n        return cb(err);\n      }\n\n      if (pStats.isDirectory()) {\n        return this._writable.mkdir(p, pStats.mode, cb);\n      }\n\n      // need to copy file.\n      this._readable.readFile(p, null, getFlag('r'), (err: ApiError, data?: Buffer) => {\n        if (err) {\n          return cb(err);\n        }\n\n        this.writeFile(p, data, null, getFlag('w'), pStats.mode, cb);\n      });\n    });\n  }\n}\n\nexport default class OverlayFS extends LockedFS<UnlockedOverlayFS> {\n\tconstructor(writable: FileSystem, readable: FileSystem) {\n\t\tsuper(new UnlockedOverlayFS(writable, readable));\n\t}\n\n\tinitialize(cb: (err?: ApiError) => void): void {\n\t\tsuper.initialize(cb);\n\t}\n\n\tstatic isAvailable(): boolean {\n\t\treturn UnlockedOverlayFS.isAvailable();\n\t}\n\n\tgetOverlayedFileSystems(): { readable: FileSystem; writable: FileSystem; } {\n\t\treturn super.getFSUnlocked().getOverlayedFileSystems();\n\t}\n}\n","import file_system = require('../core/file_system');\nimport {ApiError} from '../core/api_error';\nimport file_flag = require('../core/file_flag');\nimport {buffer2ArrayBuffer, arrayBuffer2Buffer} from '../core/util';\nimport file = require('../core/file');\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport preload_file = require('../generic/preload_file');\nimport global = require('../core/global');\nimport fs = require('../core/node_fs');\n\ninterface IBrowserFSMessage {\n  browserfsMessage: boolean;\n}\n\nenum SpecialArgType {\n  // Callback\n  CB,\n  // File descriptor\n  FD,\n  // API error\n  API_ERROR,\n  // Stats object\n  STATS,\n  // Initial probe for file system information.\n  PROBE,\n  // FileFlag object.\n  FILEFLAG,\n  // Buffer object.\n  BUFFER,\n  // Generic Error object.\n  ERROR\n}\n\ninterface ISpecialArgument {\n  type: SpecialArgType;\n}\n\ninterface IProbeResponse extends ISpecialArgument {\n  isReadOnly: boolean;\n  supportsLinks: boolean;\n  supportsProps: boolean;\n}\n\ninterface ICallbackArgument extends ISpecialArgument {\n  // The callback ID.\n  id: number;\n}\n\n/**\n * Converts callback arguments into ICallbackArgument objects, and back\n * again.\n */\nclass CallbackArgumentConverter {\n  private _callbacks: { [id: number]: Function } = {};\n  private _nextId: number = 0;\n\n  public toRemoteArg(cb: Function): ICallbackArgument {\n    var id = this._nextId++;\n    this._callbacks[id] = cb;\n    return {\n      type: SpecialArgType.CB,\n      id: id\n    };\n  }\n\n  public toLocalArg(id: number): Function {\n    var cb = this._callbacks[id];\n    delete this._callbacks[id];\n    return cb;\n  }\n}\n\ninterface IFileDescriptorArgument extends ISpecialArgument {\n  // The file descriptor's id on the remote side.\n  id: number;\n  // The entire file's data, as an array buffer.\n  data: ArrayBuffer;\n  // The file's stat object, as an array buffer.\n  stat: ArrayBuffer;\n  // The path to the file.\n  path: string;\n  // The flag of the open file descriptor.\n  flag: string;\n}\n\nclass FileDescriptorArgumentConverter {\n  private _fileDescriptors: { [id: number]: file.File } = {};\n  private _nextId: number = 0;\n\n  public toRemoteArg(fd: file.File, p: string, flag: file_flag.FileFlag, cb: (err: ApiError, arg?: IFileDescriptorArgument) => void): void {\n    var id = this._nextId++,\n      data: ArrayBuffer,\n      stat: ArrayBuffer,\n      argsLeft: number = 2;\n    this._fileDescriptors[id] = fd;\n\n    // Extract needed information asynchronously.\n    fd.stat((err, stats) => {\n      if (err) {\n        cb(err);\n      } else {\n        stat = bufferToTransferrableObject(stats.toBuffer());\n        // If it's a readable flag, we need to grab contents.\n        if (flag.isReadable()) {\n          fd.read(new Buffer(stats.size), 0, stats.size, 0, (err, bytesRead, buff) => {\n            if (err) {\n              cb(err);\n            } else {\n              data = bufferToTransferrableObject(buff);\n              cb(null, {\n                type: SpecialArgType.FD,\n                id: id,\n                data: data,\n                stat: stat,\n                path: p,\n                flag: flag.getFlagString()\n              });\n            }\n          });\n        } else {\n          // File is not readable, which means writing to it will append or\n          // truncate/replace existing contents. Return an empty arraybuffer.\n          cb(null, {\n            type: SpecialArgType.FD,\n            id: id,\n            data: new ArrayBuffer(0),\n            stat: stat,\n            path: p,\n            flag: flag.getFlagString()\n          });\n        }\n      }\n    });\n  }\n\n  private _applyFdChanges(remoteFd: IFileDescriptorArgument, cb: (err: ApiError, fd?: file.File) => void): void {\n    var fd = this._fileDescriptors[remoteFd.id],\n      data = transferrableObjectToBuffer(remoteFd.data),\n      remoteStats = Stats.fromBuffer(transferrableObjectToBuffer(remoteFd.stat));\n\n    // Write data if the file is writable.\n    var flag = file_flag.FileFlag.getFileFlag(remoteFd.flag);\n    if (flag.isWriteable()) {\n      // Appendable: Write to end of file.\n      // Writeable: Replace entire contents of file.\n      fd.write(data, 0, data.length, flag.isAppendable() ? fd.getPos() : 0, (e) => {\n        if (e) {\n          cb(e);\n        } else {\n          function applyStatChanges() {\n            // Check if mode changed.\n            fd.stat((e, stats?) => {\n              if (e) {\n                cb(e);\n              } else {\n                if (stats.mode !== remoteStats.mode) {\n                  fd.chmod(remoteStats.mode, (e: any) => {\n                    cb(e, fd);\n                  });\n                } else {\n                  cb(e, fd);\n                }\n              }\n            });\n          }\n\n          // If writeable & not appendable, we need to ensure file contents are\n          // identical to those from the remote FD. Thus, we truncate to the\n          // length of the remote file.\n          if (!flag.isAppendable()) {\n            fd.truncate(data.length, () => {\n              applyStatChanges();\n            })\n          } else {\n            applyStatChanges();\n          }\n        }\n      });\n    } else {\n      cb(null, fd);\n    }\n  }\n\n  public applyFdAPIRequest(request: IAPIRequest, cb: (err?: ApiError) => void): void {\n    var fdArg = <IFileDescriptorArgument> request.args[0];\n    this._applyFdChanges(fdArg, (err, fd?) => {\n      if (err) {\n        cb(err);\n      } else {\n        // Apply method on now-changed file descriptor.\n        (<any> fd)[request.method]((e?: ApiError) => {\n          if (request.method === 'close') {\n            delete this._fileDescriptors[fdArg.id];\n          }\n          cb(e);\n        });\n      }\n    });\n  }\n}\n\ninterface IAPIErrorArgument extends ISpecialArgument {\n  // The error object, as an array buffer.\n  errorData: ArrayBuffer;\n}\n\nfunction apiErrorLocal2Remote(e: ApiError): IAPIErrorArgument {\n  return {\n    type: SpecialArgType.API_ERROR,\n    errorData: bufferToTransferrableObject(e.writeToBuffer())\n  };\n}\n\nfunction apiErrorRemote2Local(e: IAPIErrorArgument): ApiError {\n  return ApiError.fromBuffer(transferrableObjectToBuffer(e.errorData));\n}\n\ninterface IErrorArgument extends ISpecialArgument {\n  // The name of the error (e.g. 'TypeError').\n  name: string;\n  // The message associated with the error.\n  message: string;\n  // The stack associated with the error.\n  stack: string;\n}\n\nfunction errorLocal2Remote(e: Error): IErrorArgument {\n  return {\n    type: SpecialArgType.ERROR,\n    name: e.name,\n    message: e.message,\n    stack: e.stack\n  };\n}\n\nfunction errorRemote2Local(e: IErrorArgument): Error {\n  var cnstr: {\n    new (msg: string): Error;\n  } = global[e.name];\n  if (typeof(cnstr) !== 'function') {\n    cnstr = Error;\n  }\n  var err = new cnstr(e.message);\n  err.stack = e.stack;\n  return err;\n}\n\ninterface IStatsArgument extends ISpecialArgument {\n  // The stats object as an array buffer.\n  statsData: ArrayBuffer;\n}\n\nfunction statsLocal2Remote(stats: Stats): IStatsArgument {\n  return {\n    type: SpecialArgType.STATS,\n    statsData: bufferToTransferrableObject(stats.toBuffer())\n  };\n}\n\nfunction statsRemote2Local(stats: IStatsArgument): Stats {\n  return Stats.fromBuffer(transferrableObjectToBuffer(stats.statsData));\n}\n\ninterface IFileFlagArgument extends ISpecialArgument {\n  flagStr: string;\n}\n\nfunction fileFlagLocal2Remote(flag: file_flag.FileFlag): IFileFlagArgument {\n  return {\n    type: SpecialArgType.FILEFLAG,\n    flagStr: flag.getFlagString()\n  };\n}\n\nfunction fileFlagRemote2Local(remoteFlag: IFileFlagArgument): file_flag.FileFlag {\n  return file_flag.FileFlag.getFileFlag(remoteFlag.flagStr);\n}\n\ninterface IBufferArgument extends ISpecialArgument {\n  data: ArrayBuffer;\n}\n\nfunction bufferToTransferrableObject(buff: NodeBuffer): ArrayBuffer {\n  return buffer2ArrayBuffer(buff);\n}\n\nfunction transferrableObjectToBuffer(buff: ArrayBuffer): Buffer {\n  return arrayBuffer2Buffer(buff);\n}\n\nfunction bufferLocal2Remote(buff: Buffer): IBufferArgument {\n  return {\n    type: SpecialArgType.BUFFER,\n    data: bufferToTransferrableObject(buff)\n  };\n}\n\nfunction bufferRemote2Local(buffArg: IBufferArgument): Buffer {\n  return transferrableObjectToBuffer(buffArg.data);\n}\n\ninterface IAPIRequest extends IBrowserFSMessage {\n  method: string;\n  args: Array<number | string | ISpecialArgument>;\n}\n\nfunction isAPIRequest(data: any): data is IAPIRequest {\n  return data != null && typeof data === 'object' && data.hasOwnProperty('browserfsMessage') && data['browserfsMessage'];\n}\n\ninterface IAPIResponse extends IBrowserFSMessage {\n  cbId: number;\n  args: Array<number | string | ISpecialArgument>;\n}\n\nfunction isAPIResponse(data: any): data is IAPIResponse {\n  return data != null && typeof data === 'object' && data.hasOwnProperty('browserfsMessage') && data['browserfsMessage'];\n}\n\n/**\n * Represents a remote file in a different worker/thread.\n */\nclass WorkerFile extends preload_file.PreloadFile<WorkerFS> {\n  private _remoteFdId: number;\n\n  constructor(_fs: WorkerFS, _path: string, _flag: file_flag.FileFlag, _stat: Stats, remoteFdId: number, contents?: NodeBuffer) {\n    super(_fs, _path, _flag, _stat, contents);\n    this._remoteFdId = remoteFdId;\n  }\n\n  public getRemoteFdId() {\n    return this._remoteFdId;\n  }\n\n  public toRemoteArg(): IFileDescriptorArgument {\n    return <IFileDescriptorArgument> {\n      type: SpecialArgType.FD,\n      id: this._remoteFdId,\n      data: bufferToTransferrableObject(this.getBuffer()),\n      stat: bufferToTransferrableObject(this.getStats().toBuffer()),\n      path: this.getPath(),\n      flag: this.getFlag().getFlagString()\n    };\n  }\n\n  private _syncClose(type: string, cb: (e?: ApiError) => void): void {\n    if (this.isDirty()) {\n      (<WorkerFS> this._fs).syncClose(type, this, (e?: ApiError) => {\n        if (!e) {\n          this.resetDirty();\n        }\n        cb(e);\n      });\n    } else {\n      cb();\n    }\n  }\n\n  public sync(cb: (e?: ApiError) => void): void {\n    this._syncClose('sync', cb);\n  }\n\n  public close(cb: (e?: ApiError) => void): void {\n    this._syncClose('close', cb);\n  }\n}\n\n/**\n * WorkerFS lets you access a BrowserFS instance that is running in a different\n * JavaScript context (e.g. access BrowserFS in one of your WebWorkers, or\n * access BrowserFS running on the main page from a WebWorker).\n *\n * For example, to have a WebWorker access files in the main browser thread,\n * do the following:\n *\n * MAIN BROWSER THREAD:\n * ```\n *   // Listen for remote file system requests.\n *   BrowserFS.FileSystem.WorkerFS.attachRemoteListener(webWorkerObject);\n * ``\n *\n * WEBWORKER THREAD:\n * ```\n *   // Set the remote file system as the root file system.\n *   BrowserFS.initialize(new BrowserFS.FileSystem.WorkerFS(self));\n * ```\n *\n * Note that synchronous operations are not permitted on the WorkerFS, regardless\n * of the configuration option of the remote FS.\n */\nexport default class WorkerFS extends file_system.BaseFileSystem implements file_system.FileSystem {\n  private _worker: Worker;\n  private _callbackConverter = new CallbackArgumentConverter();\n\n  private _isInitialized: boolean = false;\n  private _isReadOnly: boolean = false;\n  private _supportLinks: boolean = false;\n  private _supportProps: boolean = false;\n\n  /**\n   * Stores outstanding API requests to the remote BrowserFS instance.\n   */\n  private _outstandingRequests: { [id: number]: () => void } = {};\n\n  /**\n   * Constructs a new WorkerFS instance that connects with BrowserFS running on\n   * the specified worker.\n   */\n  constructor(worker: Worker) {\n    super();\n    this._worker = worker;\n    this._worker.addEventListener('message',(e: MessageEvent) => {\n      var resp: Object = e.data;\n      if (isAPIResponse(resp)) {\n        var i: number, args = resp.args, fixedArgs = new Array(args.length);\n        // Dispatch event to correct id.\n        for (i = 0; i < fixedArgs.length; i++) {\n          fixedArgs[i] = this._argRemote2Local(args[i]);\n        }\n        this._callbackConverter.toLocalArg(resp.cbId).apply(null, fixedArgs);\n      }\n    });\n  }\n\n  public static isAvailable(): boolean {\n    return typeof Worker !== 'undefined';\n  }\n\n  public getName(): string {\n    return 'WorkerFS';\n  }\n\n  private _argRemote2Local(arg: any): any {\n    if (arg == null) {\n      return arg;\n    }\n    switch (typeof arg) {\n      case 'object':\n        if (arg['type'] != null && typeof arg['type'] === 'number') {\n          var specialArg = <ISpecialArgument> arg;\n          switch (specialArg.type) {\n            case SpecialArgType.API_ERROR:\n              return apiErrorRemote2Local(<IAPIErrorArgument> specialArg);\n            case SpecialArgType.FD:\n              var fdArg = <IFileDescriptorArgument> specialArg;\n              return new WorkerFile(this, fdArg.path, file_flag.FileFlag.getFileFlag(fdArg.flag), Stats.fromBuffer(transferrableObjectToBuffer(fdArg.stat)), fdArg.id, transferrableObjectToBuffer(fdArg.data));\n            case SpecialArgType.STATS:\n              return statsRemote2Local(<IStatsArgument> specialArg);\n            case SpecialArgType.FILEFLAG:\n              return fileFlagRemote2Local(<IFileFlagArgument> specialArg);\n            case SpecialArgType.BUFFER:\n              return bufferRemote2Local(<IBufferArgument> specialArg);\n            case SpecialArgType.ERROR:\n              return errorRemote2Local(<IErrorArgument> specialArg);\n            default:\n              return arg;\n          }\n        } else {\n          return arg;\n        }\n      default:\n        return arg;\n    }\n  }\n\n  /**\n   * Converts a local argument into a remote argument. Public so WorkerFile objects can call it.\n   */\n  public _argLocal2Remote(arg: any): any {\n    if (arg == null) {\n      return arg;\n    }\n    switch (typeof arg) {\n      case \"object\":\n        if (arg instanceof Stats) {\n          return statsLocal2Remote(arg);\n        } else if (arg instanceof ApiError) {\n          return apiErrorLocal2Remote(arg);\n        } else if (arg instanceof WorkerFile) {\n          return (<WorkerFile> arg).toRemoteArg();\n        } else if (arg instanceof file_flag.FileFlag) {\n          return fileFlagLocal2Remote(arg);\n        } else if (arg instanceof Buffer) {\n          return bufferLocal2Remote(arg);\n        } else if (arg instanceof Error) {\n          return errorLocal2Remote(arg);\n        } else {\n          return \"Unknown argument\";\n        }\n      case \"function\":\n        return this._callbackConverter.toRemoteArg(arg);\n      default:\n        return arg;\n    }\n  }\n\n  /**\n   * Called once both local and remote sides are set up.\n   */\n  public initialize(cb: () => void): void {\n    if (!this._isInitialized) {\n      var message: IAPIRequest = {\n        browserfsMessage: true,\n        method: 'probe',\n        args: [this._argLocal2Remote(new Buffer(0)), this._callbackConverter.toRemoteArg((probeResponse: IProbeResponse) => {\n          this._isInitialized = true;\n          this._isReadOnly = probeResponse.isReadOnly;\n          this._supportLinks = probeResponse.supportsLinks;\n          this._supportProps = probeResponse.supportsProps;\n          cb();\n        })]\n      };\n      this._worker.postMessage(message);\n    } else {\n      cb();\n    }\n  }\n\n  public isReadOnly(): boolean { return this._isReadOnly; }\n  public supportsSynch(): boolean { return false; }\n  public supportsLinks(): boolean { return this._supportLinks; }\n  public supportsProps(): boolean { return this._supportProps; }\n\n  private _rpc(methodName: string, args: IArguments) {\n    var message: IAPIRequest = {\n      browserfsMessage: true,\n      method: methodName,\n      args: null\n    }, fixedArgs = new Array(args.length), i: number;\n    for (i = 0; i < args.length; i++) {\n      fixedArgs[i] = this._argLocal2Remote(args[i]);\n    }\n    message.args = fixedArgs;\n    this._worker.postMessage(message);\n  }\n\n  public rename(oldPath: string, newPath: string, cb: (err?: ApiError) => void): void {\n    this._rpc('rename', arguments);\n  }\n  public stat(p: string, isLstat: boolean, cb: (err: ApiError, stat?: Stats) => void): void {\n    this._rpc('stat', arguments);\n  }\n  public open(p: string, flag: file_flag.FileFlag, mode: number, cb: (err: ApiError, fd?: file.File) => any): void {\n    this._rpc('open', arguments);\n  }\n  public unlink(p: string, cb: Function): void {\n    this._rpc('unlink', arguments);\n  }\n  public rmdir(p: string, cb: Function): void {\n    this._rpc('rmdir', arguments);\n  }\n  public mkdir(p: string, mode: number, cb: Function): void {\n    this._rpc('mkdir', arguments);\n  }\n  public readdir(p: string, cb: (err: ApiError, files?: string[]) => void): void {\n    this._rpc('readdir', arguments);\n  }\n  public exists(p: string, cb: (exists: boolean) => void): void {\n    this._rpc('exists', arguments);\n  }\n  public realpath(p: string, cache: { [path: string]: string }, cb: (err: ApiError, resolvedPath?: string) => any): void {\n    this._rpc('realpath', arguments);\n  }\n  public truncate(p: string, len: number, cb: Function): void {\n    this._rpc('truncate', arguments);\n  }\n  public readFile(fname: string, encoding: string, flag: file_flag.FileFlag, cb: (err: ApiError, data?: any) => void): void {\n    this._rpc('readFile', arguments);\n  }\n  public writeFile(fname: string, data: any, encoding: string, flag: file_flag.FileFlag, mode: number, cb: (err: ApiError) => void): void {\n    this._rpc('writeFile', arguments);\n  }\n  public appendFile(fname: string, data: any, encoding: string, flag: file_flag.FileFlag, mode: number, cb: (err: ApiError) => void): void {\n    this._rpc('appendFile', arguments);\n  }\n  public chmod(p: string, isLchmod: boolean, mode: number, cb: Function): void {\n    this._rpc('chmod', arguments);\n  }\n  public chown(p: string, isLchown: boolean, uid: number, gid: number, cb: Function): void {\n    this._rpc('chown', arguments);\n  }\n  public utimes(p: string, atime: Date, mtime: Date, cb: Function): void {\n    this._rpc('utimes', arguments);\n  }\n  public link(srcpath: string, dstpath: string, cb: Function): void {\n    this._rpc('link', arguments);\n  }\n  public symlink(srcpath: string, dstpath: string, type: string, cb: Function): void {\n    this._rpc('symlink', arguments);\n  }\n  public readlink(p: string, cb: Function): void {\n    this._rpc('readlink', arguments);\n  }\n\n  public syncClose(method: string, fd: file.File, cb: (e: ApiError) => void): void {\n    this._worker.postMessage(<IAPIRequest> {\n      browserfsMessage: true,\n      method: method,\n      args: [(<WorkerFile> fd).toRemoteArg(), this._callbackConverter.toRemoteArg(cb)]\n    });\n  }\n\n  /**\n   * Attaches a listener to the remote worker for file system requests.\n   */\n  public static attachRemoteListener(worker: Worker) {\n    var fdConverter = new FileDescriptorArgumentConverter();\n\n    function argLocal2Remote(arg: any, requestArgs: any[], cb: (err: ApiError, arg?: any) => void): void {\n      switch (typeof arg) {\n        case 'object':\n          if (arg instanceof Stats) {\n            cb(null, statsLocal2Remote(arg));\n          } else if (arg instanceof ApiError) {\n            cb(null, apiErrorLocal2Remote(arg));\n          } else if (arg instanceof file.BaseFile) {\n            // Pass in p and flags from original request.\n            cb(null, fdConverter.toRemoteArg(arg, requestArgs[0], requestArgs[1], cb));\n          } else if (arg instanceof file_flag.FileFlag) {\n            cb(null, fileFlagLocal2Remote(arg));\n          } else if (arg instanceof Buffer) {\n            cb(null, bufferLocal2Remote(arg));\n          } else if (arg instanceof Error) {\n            cb(null, errorLocal2Remote(arg));\n          } else {\n            cb(null, arg);\n          }\n          break;\n        default:\n          cb(null, arg);\n          break;\n      }\n    }\n\n    function argRemote2Local(arg: any, fixedRequestArgs: any[]): any {\n      if (arg == null) {\n        return arg;\n      }\n      switch (typeof arg) {\n        case 'object':\n          if (typeof arg['type'] === 'number') {\n            var specialArg = <ISpecialArgument> arg;\n            switch (specialArg.type) {\n              case SpecialArgType.CB:\n                var cbId = (<ICallbackArgument> arg).id;\n                return function() {\n                  var i: number, fixedArgs = new Array(arguments.length),\n                    message: IAPIResponse,\n                    countdown = arguments.length;\n\n                  function abortAndSendError(err: ApiError) {\n                    if (countdown > 0) {\n                      countdown = -1;\n                      message = {\n                        browserfsMessage: true,\n                        cbId: cbId,\n                        args: [apiErrorLocal2Remote(err)]\n                      };\n                      worker.postMessage(message);\n                    }\n                  }\n\n\n                  for (i = 0; i < arguments.length; i++) {\n                    // Capture i and argument.\n                    ((i: number, arg: any) => {\n                      argLocal2Remote(arg, fixedRequestArgs, (err, fixedArg?) => {\n                        fixedArgs[i] = fixedArg;\n                        if (err) {\n                          abortAndSendError(err);\n                        } else if (--countdown === 0) {\n                          message = {\n                            browserfsMessage: true,\n                            cbId: cbId,\n                            args: fixedArgs\n                          };\n                          worker.postMessage(message);\n                        }\n                      });\n                    })(i, arguments[i]);\n                  }\n\n                  if (arguments.length === 0) {\n                    message = {\n                      browserfsMessage: true,\n                      cbId: cbId,\n                      args: fixedArgs\n                    };\n                    worker.postMessage(message);\n                  }\n\n                };\n              case SpecialArgType.API_ERROR:\n                return apiErrorRemote2Local(<IAPIErrorArgument> specialArg);\n              case SpecialArgType.STATS:\n                return statsRemote2Local(<IStatsArgument> specialArg);\n              case SpecialArgType.FILEFLAG:\n                return fileFlagRemote2Local(<IFileFlagArgument> specialArg);\n              case SpecialArgType.BUFFER:\n                return bufferRemote2Local(<IBufferArgument> specialArg);\n              case SpecialArgType.ERROR:\n                return errorRemote2Local(<IErrorArgument> specialArg);\n              default:\n                // No idea what this is.\n                return arg;\n            }\n          } else {\n            return arg;\n          }\n        default:\n          return arg;\n      }\n    }\n\n    worker.addEventListener('message',(e: MessageEvent) => {\n      var request: Object = e.data;\n      if (isAPIRequest(request)) {\n        var args = request.args,\n          fixedArgs = new Array<any>(args.length),\n          i: number;\n\n        switch (request.method) {\n          case 'close':\n          case 'sync':\n            (() => {\n              // File descriptor-relative methods.\n              var remoteCb = <ICallbackArgument> args[1];\n              fdConverter.applyFdAPIRequest(request, (err?: ApiError) => {\n                // Send response.\n                var response: IAPIResponse = {\n                  browserfsMessage: true,\n                  cbId: remoteCb.id,\n                  args: err ? [apiErrorLocal2Remote(err)] : []\n                };\n                worker.postMessage(response);\n              });\n            })();\n            break;\n          case 'probe':\n            (() => {\n              var rootFs = <file_system.FileSystem> fs.getRootFS(),\n                remoteCb = <ICallbackArgument> args[1],\n                probeResponse: IProbeResponse = {\n                  type: SpecialArgType.PROBE,\n                  isReadOnly: rootFs.isReadOnly(),\n                  supportsLinks: rootFs.supportsLinks(),\n                  supportsProps: rootFs.supportsProps()\n                },\n                response: IAPIResponse = {\n                  browserfsMessage: true,\n                  cbId: remoteCb.id,\n                  args: [probeResponse]\n                };\n\n              worker.postMessage(response);\n            })();\n            break;\n          default:\n            // File system methods.\n            for (i = 0; i < args.length; i++) {\n              fixedArgs[i] = argRemote2Local(args[i], fixedArgs);\n            }\n            var rootFS = fs.getRootFS();\n            (<Function> rootFS[request.method]).apply(rootFS, fixedArgs);\n            break;\n        }\n      }\n    });\n  }\n}\n","import file_system = require('../core/file_system');\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {FileFlag, ActionType} from '../core/file_flag';\nimport {copyingSlice} from '../core/util';\nimport file = require('../core/file');\nimport Stats from '../core/node_fs_stats';\nimport preload_file = require('../generic/preload_file');\nimport xhr = require('../generic/xhr');\nimport {FileIndex, DirInode, FileInode, Inode, isFileInode, isDirInode} from '../generic/file_index';\n\n/**\n * Try to convert the given buffer into a string, and pass it to the callback.\n * Optimization that removes the needed try/catch into a helper function, as\n * this is an uncommon case.\n */\nfunction tryToString(buff: Buffer, encoding: string, cb: (e: ApiError, rv?: string) => void) {\n  try {\n    cb(null, buff.toString(encoding));\n  } catch (e) {\n    cb(e);\n  }\n}\n\n/**\n * A simple filesystem backed by XmlHttpRequests.\n */\nexport default class XmlHttpRequest extends file_system.BaseFileSystem implements file_system.FileSystem {\n  private _index: FileIndex<{}>;\n  public prefixUrl: string;\n  /**\n   * Constructs the file system.\n   * @param listingUrlOrObj index object or the path to the JSON file index generated by\n   *   tools/XHRIndexer.coffee. This can be relative to the current webpage URL\n   *   or absolutely specified.\n   * @param prefixUrl The url prefix to use for all web-server requests.\n   */\n  constructor(listingUrlOrObj: string | Object, prefixUrl: string = '') {\n    super();\n    if (!listingUrlOrObj) {\n      listingUrlOrObj = 'index.json';\n    }\n    // prefix_url must end in a directory separator.\n    if (prefixUrl.length > 0 && prefixUrl.charAt(prefixUrl.length - 1) !== '/') {\n      prefixUrl = prefixUrl + '/';\n    }\n    this.prefixUrl = prefixUrl;\n\n    let listing: Object = null;\n    if (typeof(listingUrlOrObj) === \"string\") {\n      listing = this._requestFileSync(<string> listingUrlOrObj, 'json');\n      if (!listing) {\n        throw new Error(\"Unable to find listing at URL: ${listingUrlOrObj}\");\n      }\n    } else {\n      listing = listingUrlOrObj;\n    }\n\n    this._index = FileIndex.fromListing(listing);\n  }\n\n  public empty(): void {\n    this._index.fileIterator(function(file: Stats) {\n      file.file_data = null;\n    });\n  }\n\n  private getXhrPath(filePath: string): string {\n    if (filePath.charAt(0) === '/') {\n      filePath = filePath.slice(1);\n    }\n    return this.prefixUrl + filePath;\n  }\n\n  /**\n   * Only requests the HEAD content, for the file size.\n   */\n  public _requestFileSizeAsync(path: string, cb: (err: ApiError, size?: number) => void): void {\n    xhr.getFileSizeAsync(this.getXhrPath(path), cb);\n  }\n  public _requestFileSizeSync(path: string): number {\n    return xhr.getFileSizeSync(this.getXhrPath(path));\n  }\n\n  /**\n   * Asynchronously download the given file.\n   */\n  private _requestFileAsync(p: string, type: 'buffer', cb: (err: ApiError, data?: NodeBuffer) => void): void;\n  private _requestFileAsync(p: string, type: 'json', cb: (err: ApiError, data?: any) => void): void;\n  private _requestFileAsync(p: string, type: string, cb: (err: ApiError, data?: any) => void): void;\n  private _requestFileAsync(p: string, type: string, cb: (err: ApiError, data?: any) => void): void {\n    xhr.asyncDownloadFile(this.getXhrPath(p), type, cb);\n  }\n\n  /**\n   * Synchronously download the given file.\n   */\n  private _requestFileSync(p: string, type: 'buffer'): NodeBuffer;\n  private _requestFileSync(p: string, type: 'json'): any;\n  private _requestFileSync(p: string, type: string): any;\n  private _requestFileSync(p: string, type: string): any {\n    return xhr.syncDownloadFile(this.getXhrPath(p), type);\n  }\n\n  public getName(): string {\n    return 'XmlHttpRequest';\n  }\n\n  public static isAvailable(): boolean {\n    // @todo Older browsers use a different name for XHR, iirc.\n    return typeof XMLHttpRequest !== \"undefined\" && XMLHttpRequest !== null;\n  }\n\n  public diskSpace(path: string, cb: (total: number, free: number) => void): void {\n    // Read-only file system. We could calculate the total space, but that's not\n    // important right now.\n    cb(0, 0);\n  }\n\n  public isReadOnly(): boolean {\n    return true;\n  }\n\n  public supportsLinks(): boolean {\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return true;\n  }\n\n  /**\n   * Special XHR function: Preload the given file into the index.\n   * @param [String] path\n   * @param [BrowserFS.Buffer] buffer\n   */\n  public preloadFile(path: string, buffer: NodeBuffer): void {\n    var inode = this._index.getInode(path);\n    if (isFileInode<Stats>(inode)) {\n      if (inode === null) {\n        throw ApiError.ENOENT(path);\n      }\n      var stats = inode.getData();\n      stats.size = buffer.length;\n      stats.file_data = buffer;\n    } else {\n      throw ApiError.EISDIR(path);\n    }\n  }\n\n  public stat(path: string, isLstat: boolean, cb: (e: ApiError, stat?: Stats) => void): void {\n    var inode = this._index.getInode(path);\n    if (inode === null) {\n      return cb(ApiError.ENOENT(path));\n    }\n    var stats: Stats;\n    if (isFileInode<Stats>(inode)) {\n      stats = inode.getData();\n      // At this point, a non-opened file will still have default stats from the listing.\n      if (stats.size < 0) {\n        this._requestFileSizeAsync(path, function(e: ApiError, size?: number) {\n          if (e) {\n            return cb(e);\n          }\n          stats.size = size;\n          cb(null, stats.clone());\n        });\n      } else {\n        cb(null, stats.clone());\n      }\n    } else if (isDirInode(inode)) {\n      stats = inode.getStats();\n      cb(null, stats);\n    } else {\n      cb(ApiError.FileError(ErrorCode.EINVAL, path));\n    }\n  }\n\n  public statSync(path: string, isLstat: boolean): Stats {\n    var inode = this._index.getInode(path);\n    if (inode === null) {\n      throw ApiError.ENOENT(path);\n    }\n    var stats: Stats;\n    if (isFileInode<Stats>(inode)) {\n      stats = inode.getData();\n      // At this point, a non-opened file will still have default stats from the listing.\n      if (stats.size < 0) {\n        stats.size = this._requestFileSizeSync(path);\n      }\n    } else if (isDirInode(inode)) {\n      stats = inode.getStats();\n    } else {\n      throw ApiError.FileError(ErrorCode.EINVAL, path);\n    }\n    return stats;\n  }\n\n  public open(path: string, flags: FileFlag, mode: number, cb: (e: ApiError, file?: file.File) => void): void {\n    // INVARIANT: You can't write to files on this file system.\n    if (flags.isWriteable()) {\n      return cb(new ApiError(ErrorCode.EPERM, path));\n    }\n    var _this = this;\n    // Check if the path exists, and is a file.\n    var inode = this._index.getInode(path);\n    if (inode === null) {\n      return cb(ApiError.ENOENT(path));\n    }\n    if (isFileInode<Stats>(inode)) {\n      var stats = inode.getData();\n      switch (flags.pathExistsAction()) {\n        case ActionType.THROW_EXCEPTION:\n        case ActionType.TRUNCATE_FILE:\n          return cb(ApiError.EEXIST(path));\n        case ActionType.NOP:\n          // Use existing file contents.\n          // XXX: Uh, this maintains the previously-used flag.\n          if (stats.file_data != null) {\n            return cb(null, new preload_file.NoSyncFile(_this, path, flags, stats.clone(), stats.file_data));\n          }\n          // @todo be lazier about actually requesting the file\n          this._requestFileAsync(path, 'buffer', function(err: ApiError, buffer?: NodeBuffer) {\n            if (err) {\n              return cb(err);\n            }\n            // we don't initially have file sizes\n            stats.size = buffer.length;\n            stats.file_data = buffer;\n            return cb(null, new preload_file.NoSyncFile(_this, path, flags, stats.clone(), buffer));\n          });\n          break;\n        default:\n          return cb(new ApiError(ErrorCode.EINVAL, 'Invalid FileMode object.'));\n      }\n    } else {\n      return cb(ApiError.EISDIR(path));\n    }\n  }\n\n  public openSync(path: string, flags: FileFlag, mode: number): file.File {\n    // INVARIANT: You can't write to files on this file system.\n    if (flags.isWriteable()) {\n      throw new ApiError(ErrorCode.EPERM, path);\n    }\n    // Check if the path exists, and is a file.\n    var inode = this._index.getInode(path);\n    if (inode === null) {\n      throw ApiError.ENOENT(path);\n    }\n    if (isFileInode<Stats>(inode)) {\n      var stats = inode.getData();\n      switch (flags.pathExistsAction()) {\n        case ActionType.THROW_EXCEPTION:\n        case ActionType.TRUNCATE_FILE:\n          throw ApiError.EEXIST(path);\n        case ActionType.NOP:\n          // Use existing file contents.\n          // XXX: Uh, this maintains the previously-used flag.\n          if (stats.file_data != null) {\n            return new preload_file.NoSyncFile(this, path, flags, stats.clone(), stats.file_data);\n          }\n          // @todo be lazier about actually requesting the file\n          var buffer = this._requestFileSync(path, 'buffer');\n          // we don't initially have file sizes\n          stats.size = buffer.length;\n          stats.file_data = buffer;\n          return new preload_file.NoSyncFile(this, path, flags, stats.clone(), buffer);\n        default:\n          throw new ApiError(ErrorCode.EINVAL, 'Invalid FileMode object.');\n      }\n    } else {\n      throw ApiError.EISDIR(path);\n    }\n  }\n\n  public readdir(path: string, cb: (e: ApiError, listing?: string[]) => void): void {\n    try {\n      cb(null, this.readdirSync(path));\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public readdirSync(path: string): string[] {\n    // Check if it exists.\n    var inode = this._index.getInode(path);\n    if (inode === null) {\n      throw ApiError.ENOENT(path);\n    } else if (isDirInode(inode)) {\n      return inode.getListing();\n    } else {\n      throw ApiError.ENOTDIR(path);\n    }\n  }\n\n  /**\n   * We have the entire file as a buffer; optimize readFile.\n   */\n  public readFile(fname: string, encoding: string, flag: FileFlag, cb: (err: ApiError, data?: any) => void): void {\n    // Wrap cb in file closing code.\n    var oldCb = cb;\n    // Get file.\n    this.open(fname, flag, 0x1a4, function(err: ApiError, fd?: file.File) {\n      if (err) {\n        return cb(err);\n      }\n      cb = function(err: ApiError, arg?: Buffer) {\n        fd.close(function(err2: any) {\n          if (err == null) {\n            err = err2;\n          }\n          return oldCb(err, arg);\n        });\n      };\n      var fdCast = <preload_file.NoSyncFile<XmlHttpRequest>> fd;\n      var fdBuff = <Buffer> fdCast.getBuffer();\n      if (encoding === null) {\n        cb(err, copyingSlice(fdBuff));\n      } else {\n        tryToString(fdBuff, encoding, cb);\n      }\n    });\n  }\n\n  /**\n   * Specially-optimized readfile.\n   */\n  public readFileSync(fname: string, encoding: string, flag: FileFlag): any {\n    // Get file.\n    var fd = this.openSync(fname, flag, 0x1a4);\n    try {\n      var fdCast = <preload_file.NoSyncFile<XmlHttpRequest>> fd;\n      var fdBuff = <Buffer> fdCast.getBuffer();\n      if (encoding === null) {\n        return copyingSlice(fdBuff);\n      }\n      return fdBuff.toString(encoding);\n    } finally {\n      fd.closeSync();\n    }\n  }\n}\n","/**\n * Zip file-backed filesystem\n * Implemented according to the standard:\n * http://www.pkware.com/documents/casestudies/APPNOTE.TXT\n *\n * While there are a few zip libraries for JavaScript (e.g. JSZip and zip.js),\n * they are not a good match for BrowserFS. In particular, these libraries\n * perform a lot of unneeded data copying, and eagerly decompress every file\n * in the zip file upon loading to check the CRC32. They also eagerly decode\n * strings. Furthermore, these libraries duplicate functionality already present\n * in BrowserFS (e.g. UTF-8 decoding and binary data manipulation).\n *\n * This filesystem takes advantage of BrowserFS's Buffer implementation, which\n * efficiently represents the zip file in memory (in both ArrayBuffer-enabled\n * browsers *and* non-ArrayBuffer browsers), and which can neatly be 'sliced'\n * without copying data. Each struct defined in the standard is represented with\n * a buffer slice pointing to an offset in the zip file, and has getters for\n * each field. As we anticipate that this data will not be read often, we choose\n * not to store each struct field in the JavaScript object; instead, to reduce\n * memory consumption, we retrieve it directly from the binary data each time it\n * is requested.\n *\n * When the filesystem is instantiated, we determine the directory structure\n * of the zip file as quickly as possible. We lazily decompress and check the\n * CRC32 of files. We do not cache decompressed files; if this is a desired\n * feature, it is best implemented as a generic file system wrapper that can\n * cache data from arbitrary file systems.\n *\n * For inflation, we use `pajo`'s implementation:\n * https://github.com/nodeca/pako\n *\n * Unfortunately, their implementation falls back to an array of bytes for non-\n * TypedArray browsers, which is results in a much larger memory footprint in\n * those browsers. Perhaps one day we'll have an implementation of inflate that\n * works on Buffers? :)\n *\n * Current limitations:\n * * No encryption.\n * * No ZIP64 support.\n * * Read-only.\n *   Write support would require that we:\n *   - Keep track of changed/new files.\n *   - Compress changed files, and generate appropriate metadata for each.\n *   - Update file offsets for other files in the zip file.\n *   - Stream it out to a location.\n *   This isn't that bad, so we might do this at a later date.\n */\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport file_system = require('../core/file_system');\nimport file = require('../core/file');\nimport {FileFlag, ActionType} from '../core/file_flag';\nimport preload_file = require('../generic/preload_file');\nimport {Arrayish, buffer2Arrayish, arrayish2Buffer, copyingSlice} from '../core/util';\nimport ExtendedASCII from 'bfs-buffer/js/extended_ascii';\nvar inflateRaw: {\n  (data: Arrayish<number>, options?: {\n    chunkSize: number;\n  }): Arrayish<number>;\n} = require('pako/dist/pako_inflate.min').inflateRaw;\nimport {FileIndex, DirInode, FileInode, isDirInode, isFileInode} from '../generic/file_index';\n\n\n/**\n * 4.4.2.2: Indicates the compatibiltiy of a file's external attributes.\n */\nexport enum ExternalFileAttributeType {\n  MSDOS = 0, AMIGA = 1, OPENVMS = 2, UNIX = 3, VM_CMS = 4, ATARI_ST = 5,\n  OS2_HPFS = 6, MAC = 7, Z_SYSTEM = 8, CP_M = 9, NTFS = 10, MVS = 11, VSE = 12,\n  ACORN_RISC = 13, VFAT = 14, ALT_MVS = 15, BEOS = 16, TANDEM = 17, OS_400 = 18,\n  OSX = 19\n}\n\n/**\n * 4.4.5\n */\nexport enum CompressionMethod {\n  STORED = 0,     // The file is stored (no compression)\n  SHRUNK = 1,     // The file is Shrunk\n  REDUCED_1 = 2,  // The file is Reduced with compression factor 1\n  REDUCED_2 = 3,  // The file is Reduced with compression factor 2\n  REDUCED_3 = 4,  // The file is Reduced with compression factor 3\n  REDUCED_4 = 5,  // The file is Reduced with compression factor 4\n  IMPLODE = 6,    // The file is Imploded\n  DEFLATE = 8,    // The file is Deflated\n  DEFLATE64 = 9,  // Enhanced Deflating using Deflate64(tm)\n  TERSE_OLD = 10, // PKWARE Data Compression Library Imploding (old IBM TERSE)\n  BZIP2 = 12,     // File is compressed using BZIP2 algorithm\n  LZMA = 14,      // LZMA (EFS)\n  TERSE_NEW = 18, // File is compressed using IBM TERSE (new)\n  LZ77 = 19,      // IBM LZ77 z Architecture (PFS)\n  WAVPACK = 97,   // WavPack compressed data\n  PPMD = 98       // PPMd version I, Rev 1\n}\n\n/**\n * Converts the input time and date in MS-DOS format into a JavaScript Date\n * object.\n */\nfunction msdos2date(time: number, date: number): Date {\n  // MS-DOS Date\n  //|0 0 0 0  0|0 0 0  0|0 0 0  0 0 0 0\n  //  D (1-31)  M (1-23)  Y (from 1980)\n  var day = date & 0x1F;\n  // JS date is 0-indexed, DOS is 1-indexed.\n  var month = ((date >> 5) & 0xF) - 1;\n  var year = (date >> 9) + 1980;\n  // MS DOS Time\n  //|0 0 0 0  0|0 0 0  0 0 0|0  0 0 0 0\n  //   Second      Minute       Hour\n  var second = time & 0x1F;\n  var minute = (time >> 5) & 0x3F;\n  var hour = time >> 11;\n  return new Date(year, month, day, hour, minute, second);\n}\n\n/**\n * Safely returns the string from the buffer, even if it is 0 bytes long.\n * (Normally, calling toString() on a buffer with start === end causes an\n * exception).\n */\nfunction safeToString(buff: NodeBuffer, useUTF8: boolean, start: number, length: number): string {\n  if (length === 0) {\n    return \"\";\n  } else if (useUTF8) {\n    return buff.toString('utf8', start, start + length);\n  } else {\n    return ExtendedASCII.byte2str(buff.slice(start, start + length));\n  }\n}\n\n/*\n   4.3.6 Overall .ZIP file format:\n\n      [local file header 1]\n      [encryption header 1]\n      [file data 1]\n      [data descriptor 1]\n      .\n      .\n      .\n      [local file header n]\n      [encryption header n]\n      [file data n]\n      [data descriptor n]\n      [archive decryption header]\n      [archive extra data record]\n      [central directory header 1]\n      .\n      .\n      .\n      [central directory header n]\n      [zip64 end of central directory record]\n      [zip64 end of central directory locator]\n      [end of central directory record]\n*/\n\n/*\n 4.3.7  Local file header:\n\n      local file header signature     4 bytes  (0x04034b50)\n      version needed to extract       2 bytes\n      general purpose bit flag        2 bytes\n      compression method              2 bytes\n      last mod file time              2 bytes\n      last mod file date              2 bytes\n      crc-32                          4 bytes\n      compressed size                 4 bytes\n      uncompressed size               4 bytes\n      file name length                2 bytes\n      extra field length              2 bytes\n\n      file name (variable size)\n      extra field (variable size)\n */\nexport class FileHeader {\n  constructor(private data: NodeBuffer) {\n    if (data.readUInt32LE(0) !== 0x04034b50) {\n      throw new ApiError(ErrorCode.EINVAL, \"Invalid Zip file: Local file header has invalid signature: \" + this.data.readUInt32LE(0));\n    }\n  }\n  public versionNeeded(): number { return this.data.readUInt16LE(4); }\n  public flags(): number { return this.data.readUInt16LE(6); }\n  public compressionMethod(): CompressionMethod { return this.data.readUInt16LE(8); }\n  public lastModFileTime(): Date {\n    // Time and date is in MS-DOS format.\n    return msdos2date(this.data.readUInt16LE(10), this.data.readUInt16LE(12));\n  }\n  public rawLastModFileTime(): number {\n    return this.data.readUInt32LE(10);\n  }\n  public crc32(): number { return this.data.readUInt32LE(14); }\n  /**\n   * These two values are COMPLETELY USELESS.\n   *\n   * Section 4.4.9:\n   *   If bit 3 of the general purpose bit flag is set,\n   *   these fields are set to zero in the local header and the\n   *   correct values are put in the data descriptor and\n   *   in the central directory.\n   *\n   * So we'll just use the central directory's values.\n   */\n  // public compressedSize(): number { return this.data.readUInt32LE(18); }\n  // public uncompressedSize(): number { return this.data.readUInt32LE(22); }\n  public fileNameLength(): number { return this.data.readUInt16LE(26); }\n  public extraFieldLength(): number { return this.data.readUInt16LE(28); }\n  public fileName(): string {\n    return safeToString(this.data, this.useUTF8(), 30, this.fileNameLength());\n  }\n  public extraField(): NodeBuffer {\n    var start = 30 + this.fileNameLength();\n    return this.data.slice(start, start + this.extraFieldLength());\n  }\n  public totalSize(): number { return 30 + this.fileNameLength() + this.extraFieldLength(); }\n  public useUTF8(): boolean { return (this.flags() & 0x800) === 0x800; }\n}\n\n/**\n  4.3.8  File data\n\n    Immediately following the local header for a file\n    SHOULD be placed the compressed or stored data for the file.\n    If the file is encrypted, the encryption header for the file\n    SHOULD be placed after the local header and before the file\n    data. The series of [local file header][encryption header]\n    [file data][data descriptor] repeats for each file in the\n    .ZIP archive.\n\n    Zero-byte files, directories, and other file types that\n    contain no content MUST not include file data.\n*/\nexport class FileData {\n  constructor(private header: FileHeader, private record: CentralDirectory, private data: NodeBuffer) {}\n  public decompress(): NodeBuffer {\n    // Check the compression\n    var compressionMethod: CompressionMethod = this.header.compressionMethod();\n    switch (compressionMethod) {\n      case CompressionMethod.DEFLATE:\n        var data = inflateRaw(\n          buffer2Arrayish(this.data.slice(0, this.record.compressedSize())),\n          { chunkSize: this.record.uncompressedSize() }\n        );\n        return arrayish2Buffer(data);\n      case CompressionMethod.STORED:\n        // Grab and copy.\n        return copyingSlice(this.data, 0, this.record.uncompressedSize());\n      default:\n        var name: string = CompressionMethod[compressionMethod];\n        name = name ? name : \"Unknown: \" + compressionMethod;\n        throw new ApiError(ErrorCode.EINVAL, \"Invalid compression method on file '\" + this.header.fileName() + \"': \" + name);\n    }\n  }\n  public getHeader(): FileHeader {\n    return this.header;\n  }\n  public getRecord(): CentralDirectory {\n    return this.record;\n  }\n  public getRawData(): NodeBuffer {\n    return this.data;\n  }\n}\n\n/*\n 4.3.9  Data descriptor:\n\n      crc-32                          4 bytes\n      compressed size                 4 bytes\n      uncompressed size               4 bytes\n */\nexport class DataDescriptor {\n  constructor(private data: NodeBuffer) {}\n  public crc32(): number { return this.data.readUInt32LE(0); }\n  public compressedSize(): number { return this.data.readUInt32LE(4); }\n  public uncompressedSize(): number { return this.data.readUInt32LE(8); }\n}\n\n/*\n` 4.3.10  Archive decryption header:\n\n      4.3.10.1 The Archive Decryption Header is introduced in version 6.2\n      of the ZIP format specification.  This record exists in support\n      of the Central Directory Encryption Feature implemented as part of\n      the Strong Encryption Specification as described in this document.\n      When the Central Directory Structure is encrypted, this decryption\n      header MUST precede the encrypted data segment.\n */\n/*\n  4.3.11  Archive extra data record:\n\n        archive extra data signature    4 bytes  (0x08064b50)\n        extra field length              4 bytes\n        extra field data                (variable size)\n\n      4.3.11.1 The Archive Extra Data Record is introduced in version 6.2\n      of the ZIP format specification.  This record MAY be used in support\n      of the Central Directory Encryption Feature implemented as part of\n      the Strong Encryption Specification as described in this document.\n      When present, this record MUST immediately precede the central\n      directory data structure.\n*/\nexport class ArchiveExtraDataRecord {\n  constructor(private data: NodeBuffer) {\n    if (this.data.readUInt32LE(0) !== 0x08064b50) {\n      throw new ApiError(ErrorCode.EINVAL, \"Invalid archive extra data record signature: \" + this.data.readUInt32LE(0));\n    }\n  }\n  public length(): number { return this.data.readUInt32LE(4); }\n  public extraFieldData(): NodeBuffer { return this.data.slice(8, 8 + this.length()); }\n}\n\n/*\n  4.3.13 Digital signature:\n\n        header signature                4 bytes  (0x05054b50)\n        size of data                    2 bytes\n        signature data (variable size)\n\n      With the introduction of the Central Directory Encryption\n      feature in version 6.2 of this specification, the Central\n      Directory Structure MAY be stored both compressed and encrypted.\n      Although not required, it is assumed when encrypting the\n      Central Directory Structure, that it will be compressed\n      for greater storage efficiency.  Information on the\n      Central Directory Encryption feature can be found in the section\n      describing the Strong Encryption Specification. The Digital\n      Signature record will be neither compressed nor encrypted.\n*/\nexport class DigitalSignature {\n  constructor(private data: NodeBuffer) {\n    if (this.data.readUInt32LE(0) !== 0x05054b50) {\n      throw new ApiError(ErrorCode.EINVAL, \"Invalid digital signature signature: \" + this.data.readUInt32LE(0));\n    }\n  }\n  public size(): number { return this.data.readUInt16LE(4); }\n  public signatureData(): NodeBuffer { return this.data.slice(6, 6 + this.size()); }\n}\n\n/*\n  4.3.12  Central directory structure:\n\n    central file header signature   4 bytes  (0x02014b50)\n    version made by                 2 bytes\n    version needed to extract       2 bytes\n    general purpose bit flag        2 bytes\n    compression method              2 bytes\n    last mod file time              2 bytes\n    last mod file date              2 bytes\n    crc-32                          4 bytes\n    compressed size                 4 bytes\n    uncompressed size               4 bytes\n    file name length                2 bytes\n    extra field length              2 bytes\n    file comment length             2 bytes\n    disk number start               2 bytes\n    internal file attributes        2 bytes\n    external file attributes        4 bytes\n    relative offset of local header 4 bytes\n\n    file name (variable size)\n    extra field (variable size)\n    file comment (variable size)\n */\nexport class CentralDirectory {\n  // Optimization: The filename is frequently read, so stash it here.\n  private _filename: string;\n  constructor(private zipData: NodeBuffer, private data: NodeBuffer) {\n    // Sanity check.\n    if (this.data.readUInt32LE(0) !== 0x02014b50)\n      throw new ApiError(ErrorCode.EINVAL, \"Invalid Zip file: Central directory record has invalid signature: \" + this.data.readUInt32LE(0));\n    this._filename = this.produceFilename();\n  }\n  public versionMadeBy(): number { return this.data.readUInt16LE(4); }\n  public versionNeeded(): number { return this.data.readUInt16LE(6); }\n  public flag(): number { return this.data.readUInt16LE(8); }\n  public compressionMethod(): CompressionMethod { return this.data.readUInt16LE(10); }\n  public lastModFileTime(): Date {\n    // Time and date is in MS-DOS format.\n    return msdos2date(this.data.readUInt16LE(12), this.data.readUInt16LE(14));\n  }\n  public rawLastModFileTime(): number {\n    return this.data.readUInt32LE(12);\n  }\n  public crc32(): number { return this.data.readUInt32LE(16); }\n  public compressedSize(): number { return this.data.readUInt32LE(20); }\n  public uncompressedSize(): number { return this.data.readUInt32LE(24); }\n  public fileNameLength(): number { return this.data.readUInt16LE(28); }\n  public extraFieldLength(): number { return this.data.readUInt16LE(30); }\n  public fileCommentLength(): number { return this.data.readUInt16LE(32); }\n  public diskNumberStart(): number { return this.data.readUInt16LE(34); }\n  public internalAttributes(): number { return this.data.readUInt16LE(36); }\n  public externalAttributes(): number { return this.data.readUInt32LE(38); }\n  public headerRelativeOffset(): number { return this.data.readUInt32LE(42); }\n  public produceFilename(): string {\n    /*\n      4.4.17.1 claims:\n      * All slashes are forward ('/') slashes.\n      * Filename doesn't begin with a slash.\n      * No drive letters or any nonsense like that.\n      * If filename is missing, the input came from standard input.\n\n      Unfortunately, this isn't true in practice. Some Windows zip utilities use\n      a backslash here, but the correct Unix-style path in file headers.\n\n      To avoid seeking all over the file to recover the known-good filenames\n      from file headers, we simply convert '/' to '\\' here.\n    */\n    var fileName: string = safeToString(this.data, this.useUTF8(), 46, this.fileNameLength());\n    return fileName.replace(/\\\\/g, \"/\");\n  }\n  public fileName(): string {\n    return this._filename;\n  }\n  public rawFileName(): NodeBuffer {\n    return this.data.slice(46, 46 + this.fileNameLength());\n  }\n  public extraField(): NodeBuffer {\n    var start = 44 + this.fileNameLength();\n    return this.data.slice(start, start + this.extraFieldLength());\n  }\n  public fileComment(): string {\n    var start = 46 + this.fileNameLength() + this.extraFieldLength();\n    return safeToString(this.data, this.useUTF8(), start, this.fileCommentLength());\n  }\n  public rawFileComment(): NodeBuffer {\n    let start = 46 + this.fileNameLength() + this.extraFieldLength();\n    return this.data.slice(start, start + this.fileCommentLength());\n  }\n  public totalSize(): number {\n    return 46 + this.fileNameLength() + this.extraFieldLength() + this.fileCommentLength();\n  }\n  public isDirectory(): boolean {\n    // NOTE: This assumes that the zip file implementation uses the lower byte\n    //       of external attributes for DOS attributes for\n    //       backwards-compatibility. This is not mandated, but appears to be\n    //       commonplace.\n    //       According to the spec, the layout of external attributes is\n    //       platform-dependent.\n    //       If that fails, we also check if the name of the file ends in '/',\n    //       which is what Java's ZipFile implementation does.\n    var fileName = this.fileName();\n    return (this.externalAttributes() & 0x10 ? true : false) || (fileName.charAt(fileName.length-1) === '/');\n  }\n  public isFile(): boolean { return !this.isDirectory(); }\n  public useUTF8(): boolean { return (this.flag() & 0x800) === 0x800; }\n  public isEncrypted(): boolean { return (this.flag() & 0x1) === 0x1; }\n  public getFileData(): FileData {\n    // Need to grab the header before we can figure out where the actual\n    // compressed data starts.\n    var start = this.headerRelativeOffset();\n    var header = new FileHeader(this.zipData.slice(start));\n    return new FileData(header, this, this.zipData.slice(start + header.totalSize()));\n  }\n  public getData(): NodeBuffer {\n    return this.getFileData().decompress();\n  }\n  public getRawData(): NodeBuffer {\n    return this.getFileData().getRawData();\n  }\n  public getStats(): Stats {\n    return new Stats(FileType.FILE, this.uncompressedSize(), 0x16D, new Date(), this.lastModFileTime());\n  }\n}\n\n/*\n  4.3.16: end of central directory record\n    end of central dir signature    4 bytes  (0x06054b50)\n    number of this disk             2 bytes\n    number of the disk with the\n    start of the central directory  2 bytes\n    total number of entries in the\n    central directory on this disk  2 bytes\n    total number of entries in\n    the central directory           2 bytes\n    size of the central directory   4 bytes\n    offset of start of central\n    directory with respect to\n    the starting disk number        4 bytes\n    .ZIP file comment length        2 bytes\n    .ZIP file comment       (variable size)\n*/\nexport class EndOfCentralDirectory {\n  constructor(private data: NodeBuffer) {\n    if (this.data.readUInt32LE(0) !== 0x06054b50)\n      throw new ApiError(ErrorCode.EINVAL, \"Invalid Zip file: End of central directory record has invalid signature: \" + this.data.readUInt32LE(0));\n  }\n  public diskNumber(): number { return this.data.readUInt16LE(4); }\n  public cdDiskNumber(): number { return this.data.readUInt16LE(6); }\n  public cdDiskEntryCount(): number { return this.data.readUInt16LE(8); }\n  public cdTotalEntryCount(): number { return this.data.readUInt16LE(10); }\n  public cdSize(): number { return this.data.readUInt32LE(12); }\n  public cdOffset(): number { return this.data.readUInt32LE(16); }\n  public cdZipCommentLength(): number { return this.data.readUInt16LE(20); }\n  public cdZipComment(): string {\n    // Assuming UTF-8. The specification doesn't specify.\n    return safeToString(this.data, true, 22, this.cdZipCommentLength());\n  }\n  public rawCdZipComment(): NodeBuffer {\n    return this.data.slice(22, 22 + this.cdZipCommentLength())\n  }\n}\n\nexport class ZipTOC {\n  constructor(public index: FileIndex<CentralDirectory>, public directoryEntries: CentralDirectory[], public eocd: EndOfCentralDirectory, public data: NodeBuffer) {\n  }\n}\n\nexport default class ZipFS extends file_system.SynchronousFileSystem implements file_system.FileSystem {\n  private _index: FileIndex<CentralDirectory> = new FileIndex<CentralDirectory>();\n  private _directoryEntries: CentralDirectory[] = [];\n  private _eocd: EndOfCentralDirectory = null;\n  private data: NodeBuffer;\n\n  /**\n   * Constructs a ZipFS from the given zip file data. Name is optional, and is\n   * used primarily for our unit tests' purposes to differentiate different\n   * test zip files in test output.\n   */\n  constructor(private input: NodeBuffer | ZipTOC, private name: string = '') {\n    super();\n    if (input instanceof ZipTOC) {\n      this._index = input.index;\n      this._directoryEntries = input.directoryEntries;\n      this._eocd = input.eocd;\n      this.data = input.data;\n    } else {\n      this.data = input as NodeBuffer;\n      this.populateIndex();\n    }\n  }\n\n  public getName(): string {\n    return 'ZipFS' + (this.name !== '' ? ' ' + this.name : '');\n  }\n\n  /**\n   * Get the CentralDirectory object for the given path.\n   */\n  public getCentralDirectoryEntry(path: string): CentralDirectory {\n    let inode = this._index.getInode(path);\n    if (inode === null) {\n      throw ApiError.ENOENT(path);\n    }\n    if (isFileInode<CentralDirectory>(inode)) {\n      return inode.getData();\n    } else if (isDirInode<CentralDirectory>(inode)) {\n      return inode.getData();\n    }\n  }\n\n  public getCentralDirectoryEntryAt(index: number): CentralDirectory {\n    let dirEntry = this._directoryEntries[index];\n    if (!dirEntry) {\n      throw new RangeError(`Invalid directory index: ${index}.`);\n    }\n    return dirEntry;\n  }\n\n  public getNumberOfCentralDirectoryEntries(): number {\n    return this._directoryEntries.length;\n  }\n\n  public getEndOfCentralDirectory(): EndOfCentralDirectory {\n    return this._eocd;\n  }\n\n  public static isAvailable(): boolean { return true; }\n\n  public diskSpace(path: string, cb: (total: number, free: number) => void): void {\n    // Read-only file system.\n    cb(this.data.length, 0);\n  }\n\n  public isReadOnly(): boolean {\n    return true;\n  }\n\n  public supportsLinks(): boolean {\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return true;\n  }\n\n  public statSync(path: string, isLstat: boolean): Stats {\n    var inode = this._index.getInode(path);\n    if (inode === null) {\n      throw ApiError.ENOENT(path);\n    }\n    var stats: Stats;\n    if (isFileInode<CentralDirectory>(inode)) {\n      stats = inode.getData().getStats();\n    } else if (isDirInode(inode)) {\n      stats = inode.getStats();\n    } else {\n      throw new ApiError(ErrorCode.EINVAL, \"Invalid inode.\");\n    }\n    return stats;\n  }\n\n  public openSync(path: string, flags: FileFlag, mode: number): file.File {\n    // INVARIANT: Cannot write to RO file systems.\n    if (flags.isWriteable()) {\n      throw new ApiError(ErrorCode.EPERM, path);\n    }\n    // Check if the path exists, and is a file.\n    var inode = this._index.getInode(path);\n    if (!inode) {\n      throw ApiError.ENOENT(path);\n    } else if (isFileInode<CentralDirectory>(inode)) {\n      var cdRecord = inode.getData();\n      var stats = cdRecord.getStats();\n      switch (flags.pathExistsAction()) {\n        case ActionType.THROW_EXCEPTION:\n        case ActionType.TRUNCATE_FILE:\n          throw ApiError.EEXIST(path);\n        case ActionType.NOP:\n          return new preload_file.NoSyncFile(this, path, flags, stats, cdRecord.getData());\n        default:\n          throw new ApiError(ErrorCode.EINVAL, 'Invalid FileMode object.');\n      }\n    } else {\n      throw ApiError.EISDIR(path);\n    }\n  }\n\n  public readdirSync(path: string): string[] {\n    // Check if it exists.\n    var inode = this._index.getInode(path);\n    if (!inode) {\n      throw ApiError.ENOENT(path);\n    } else if (isDirInode(inode)) {\n      return inode.getListing();\n    } else {\n      throw ApiError.ENOTDIR(path);\n    }\n  }\n\n  /**\n   * Specially-optimized readfile.\n   */\n  public readFileSync(fname: string, encoding: string, flag: FileFlag): any {\n    // Get file.\n    var fd = this.openSync(fname, flag, 0x1a4);\n    try {\n      var fdCast = <preload_file.NoSyncFile<ZipFS>> fd;\n      var fdBuff = <Buffer> fdCast.getBuffer();\n      if (encoding === null) {\n        return copyingSlice(fdBuff);\n      }\n      return fdBuff.toString(encoding);\n    } finally {\n      fd.closeSync();\n    }\n  }\n\n  /**\n   * Locates the end of central directory record at the end of the file.\n   * Throws an exception if it cannot be found.\n   */\n  private static getEOCD(data: NodeBuffer): EndOfCentralDirectory {\n    // Unfortunately, the comment is variable size and up to 64K in size.\n    // We assume that the magic signature does not appear in the comment, and\n    // in the bytes between the comment and the signature. Other ZIP\n    // implementations make this same assumption, since the alternative is to\n    // read thread every entry in the file to get to it. :(\n    // These are *negative* offsets from the end of the file.\n    var startOffset = 22;\n    var endOffset = Math.min(startOffset + 0xFFFF, data.length - 1);\n    // There's not even a byte alignment guarantee on the comment so we need to\n    // search byte by byte. *grumble grumble*\n    for (var i = startOffset; i < endOffset; i++) {\n      // Magic number: EOCD Signature\n      if (data.readUInt32LE(data.length - i) === 0x06054b50) {\n        return new EndOfCentralDirectory(data.slice(data.length - i));\n      }\n    }\n    throw new ApiError(ErrorCode.EINVAL, \"Invalid ZIP file: Could not locate End of Central Directory signature.\");\n  }\n\n  private static addToIndex(cd: CentralDirectory, index: FileIndex<CentralDirectory>) {\n    // Paths must be absolute, yet zip file paths are always relative to the\n    // zip root. So we append '/' and call it a day.\n    let filename = cd.fileName();\n    if (filename.charAt(0) === '/') throw new Error(\"WHY IS THIS ABSOLUTE\");\n    // XXX: For the file index, strip the trailing '/'.\n    if (filename.charAt(filename.length - 1) === '/') {\n      filename = filename.substr(0, filename.length-1);\n    }\n\n    if (cd.isDirectory()) {\n      index.addPathFast('/' + filename, new DirInode<CentralDirectory>(cd));\n    } else {\n      index.addPathFast('/' + filename, new FileInode<CentralDirectory>(cd));\n    }\n  }\n\n  private static computeIndexResponsive(data: NodeBuffer, index: FileIndex<CentralDirectory>, cdPtr: number, cdEnd: number, cb: (zipTOC: ZipTOC) => void, cdEntries: CentralDirectory[], eocd: EndOfCentralDirectory) {\n    if (cdPtr < cdEnd) {\n      let count = 0;\n      while (count++ < 200 && cdPtr < cdEnd) {\n        const cd: CentralDirectory = new CentralDirectory(data, data.slice(cdPtr));\n        ZipFS.addToIndex(cd, index);\n        cdPtr += cd.totalSize();\n        cdEntries.push(cd);\n      }\n      setImmediate(() => {\n        ZipFS.computeIndexResponsive(data, index, cdPtr, cdEnd, cb, cdEntries, eocd);\n      });\n    } else {\n      cb(new ZipTOC(index, cdEntries, eocd, data));\n    }\n  }\n\n  static computeIndex(data: NodeBuffer, cb: (zipTOC: ZipTOC) => void) {\n    const index: FileIndex<CentralDirectory> = new FileIndex<CentralDirectory>();\n    const eocd: EndOfCentralDirectory = ZipFS.getEOCD(data);\n    if (eocd.diskNumber() !== eocd.cdDiskNumber())\n      throw new ApiError(ErrorCode.EINVAL, \"ZipFS does not support spanned zip files.\");\n\n    const cdPtr = eocd.cdOffset();\n    if (cdPtr === 0xFFFFFFFF)\n      throw new ApiError(ErrorCode.EINVAL, \"ZipFS does not support Zip64.\");\n    const cdEnd = cdPtr + eocd.cdSize();\n    ZipFS.computeIndexResponsive(data, index, cdPtr, cdEnd, cb, [], eocd);\n  }\n\n  private populateIndex() {\n    var eocd: EndOfCentralDirectory = this._eocd = ZipFS.getEOCD(this.data);\n    if (eocd.diskNumber() !== eocd.cdDiskNumber())\n      throw new ApiError(ErrorCode.EINVAL, \"ZipFS does not support spanned zip files.\");\n\n    var cdPtr = eocd.cdOffset();\n    if (cdPtr === 0xFFFFFFFF)\n      throw new ApiError(ErrorCode.EINVAL, \"ZipFS does not support Zip64.\");\n    var cdEnd = cdPtr + eocd.cdSize();\n    while (cdPtr < cdEnd) {\n      const cd: CentralDirectory = new CentralDirectory(this.data, this.data.slice(cdPtr));\n      cdPtr += cd.totalSize();\n      ZipFS.addToIndex(cd, this._index);\n      this._directoryEntries.push(cd);\n    }\n  }\n}\n","/// <reference path=\"../typings/main.d.ts\" />\n\n// Shim for Browserify so we can reference tsd.d.ts without\n// accidentally referencing it in our *.d.ts files, which\n// causes problems for TypeScript projects that depend on\n// us.\n\nexport = require('./main');\n","import {File} from './file';\nimport {ApiError, ErrorCode} from './api_error';\nimport file_system = require('./file_system');\nimport {FileFlag} from './file_flag';\nimport path = require('path');\nimport Stats from './node_fs_stats';\n// Typing info only.\nimport _fs = require('fs');\n\ndeclare var __numWaiting: number;\n\ndeclare var setImmediate: (cb: Function) => void;\n\ndeclare var RELEASE: boolean;\n\n/**\n * Wraps a callback with a setImmediate call.\n * @param [Function] cb The callback to wrap.\n * @param [Number] numArgs The number of arguments that the callback takes.\n * @return [Function] The wrapped callback.\n */\nfunction wrapCb<T extends Function>(cb: T, numArgs: number): T {\n  if (RELEASE) {\n    return cb;\n  } else {\n    if (typeof cb !== 'function') {\n      throw new ApiError(ErrorCode.EINVAL, 'Callback must be a function.');\n    }\n    // This is used for unit testing.\n    // We could use `arguments`, but Function.call/apply is expensive. And we only\n    // need to handle 1-3 arguments\n    if (typeof __numWaiting === 'undefined') {\n      __numWaiting = 0;\n    }\n    __numWaiting++;\n\n    switch (numArgs) {\n      case 1:\n        return <any> function(arg1: any) {\n          setImmediate(function() {\n            __numWaiting--;\n            return cb(arg1);\n          });\n        };\n      case 2:\n        return <any> function(arg1: any, arg2: any) {\n          setImmediate(function() {\n            __numWaiting--;\n            return cb(arg1, arg2);\n          });\n        };\n      case 3:\n        return <any> function(arg1: any, arg2: any, arg3: any) {\n          setImmediate(function() {\n            __numWaiting--;\n            return cb(arg1, arg2, arg3);\n          });\n        };\n      default:\n        throw new Error('Invalid invocation of wrapCb.');\n    }\n  }\n}\n\nfunction normalizeMode(mode: number|string, def: number): number {\n  switch(typeof mode) {\n    case 'number':\n      // (path, flag, mode, cb?)\n      return <number> mode;\n    case 'string':\n      // (path, flag, modeString, cb?)\n      var trueMode = parseInt(<string> mode, 8);\n      if (trueMode !== NaN) {\n        return trueMode;\n      }\n      // FALL THROUGH if mode is an invalid string!\n    default:\n      return def;\n  }\n}\n\nfunction normalizeTime(time: number | Date): Date {\n  if (time instanceof Date) {\n    return time;\n  } else if (typeof time === 'number') {\n    return new Date(time * 1000);\n  } else {\n    throw new ApiError(ErrorCode.EINVAL, `Invalid time.`);\n  }\n}\n\nfunction normalizePath(p: string): string {\n  // Node doesn't allow null characters in paths.\n  if (p.indexOf('\\u0000') >= 0) {\n    throw new ApiError(ErrorCode.EINVAL, 'Path must be a string without null bytes.');\n  } else if (p === '') {\n    throw new ApiError(ErrorCode.EINVAL, 'Path must not be empty.');\n  }\n  return path.resolve(p);\n}\n\nfunction normalizeOptions(options: any, defEnc: string, defFlag: string, defMode: number): {encoding: string; flag: string; mode: number} {\n  switch (typeof options) {\n    case 'object':\n      return {\n        encoding: typeof options['encoding'] !== 'undefined' ? options['encoding'] : defEnc,\n        flag: typeof options['flag'] !== 'undefined' ? options['flag'] : defFlag,\n        mode: normalizeMode(options['mode'], defMode)\n      };\n    case 'string':\n      return {\n        encoding: options,\n        flag: defFlag,\n        mode: defMode\n      };\n    default:\n      return {\n        encoding: defEnc,\n        flag: defFlag,\n        mode: defMode\n      };\n  }\n}\n\n// The default callback is a NOP.\nfunction nopCb() {};\n\n/**\n * The node frontend to all filesystems.\n * This layer handles:\n *\n * * Sanity checking inputs.\n * * Normalizing paths.\n * * Resetting stack depth for asynchronous operations which may not go through\n *   the browser by wrapping all input callbacks using `setImmediate`.\n * * Performing the requested operation through the filesystem or the file\n *   descriptor, as appropriate.\n * * Handling optional arguments and setting default arguments.\n * @see http://nodejs.org/api/fs.html\n * @class\n */\nexport default class FS {\n  // Exported fs.Stats.\n  public static Stats = Stats;\n\n  private root: file_system.FileSystem = null;\n  private fdMap: {[fd: number]: File} = {};\n  private nextFd = 100;\n  private getFdForFile(file: File): number {\n    let fd = this.nextFd++;\n    this.fdMap[fd] = file;\n    return fd;\n  }\n  private fd2file(fd: number): File {\n    let rv = this.fdMap[fd];\n    if (rv) {\n      return rv;\n    } else {\n      throw new ApiError(ErrorCode.EBADF, 'Invalid file descriptor.');\n    }\n  }\n  private closeFd(fd: number): void {\n    delete this.fdMap[fd];\n  }\n\n  public initialize(rootFS: file_system.FileSystem): file_system.FileSystem {\n    if (!(<any> rootFS).constructor.isAvailable()) {\n      throw new ApiError(ErrorCode.EINVAL, 'Tried to instantiate BrowserFS with an unavailable file system.');\n    }\n    return this.root = rootFS;\n  }\n\n  /**\n   * converts Date or number to a fractional UNIX timestamp\n   * Grabbed from NodeJS sources (lib/fs.js)\n   */\n  public _toUnixTimestamp(time: Date | number): number {\n    if (typeof time === 'number') {\n      return time;\n    } else if (time instanceof Date) {\n      return time.getTime() / 1000;\n    }\n    throw new Error(\"Cannot parse time: \" + time);\n  }\n\n  /**\n   * **NONSTANDARD**: Grab the FileSystem instance that backs this API.\n   * @return [BrowserFS.FileSystem | null] Returns null if the file system has\n   *   not been initialized.\n   */\n  public getRootFS(): file_system.FileSystem {\n    if (this.root) {\n      return this.root;\n    } else {\n      return null;\n    }\n  }\n\n  // FILE OR DIRECTORY METHODS\n\n  /**\n   * Asynchronous rename. No arguments other than a possible exception are given\n   * to the completion callback.\n   * @param [String] oldPath\n   * @param [String] newPath\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public rename(oldPath: string, newPath: string, cb: (err?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      this.root.rename(normalizePath(oldPath), normalizePath(newPath), newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous rename.\n   * @param [String] oldPath\n   * @param [String] newPath\n   */\n  public renameSync(oldPath: string, newPath: string): void {\n    this.root.renameSync(normalizePath(oldPath), normalizePath(newPath));\n  }\n\n  /**\n   * Test whether or not the given path exists by checking with the file system.\n   * Then call the callback argument with either true or false.\n   * @example Sample invocation\n   *   fs.exists('/etc/passwd', function (exists) {\n   *     util.debug(exists ? \"it's there\" : \"no passwd!\");\n   *   });\n   * @param [String] path\n   * @param [Function(Boolean)] callback\n   */\n  public exists(path: string, cb: (exists: boolean) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      return this.root.exists(normalizePath(path), newCb);\n    } catch (e) {\n      // Doesn't return an error. If something bad happens, we assume it just\n      // doesn't exist.\n      return newCb(false);\n    }\n  }\n\n  /**\n   * Test whether or not the given path exists by checking with the file system.\n   * @param [String] path\n   * @return [boolean]\n   */\n  public existsSync(path: string): boolean {\n    try {\n      return this.root.existsSync(normalizePath(path));\n    } catch (e) {\n      // Doesn't return an error. If something bad happens, we assume it just\n      // doesn't exist.\n      return false;\n    }\n  }\n\n  /**\n   * Asynchronous `stat`.\n   * @param [String] path\n   * @param [Function(BrowserFS.ApiError, BrowserFS.node.fs.Stats)] callback\n   */\n  public stat(path: string, cb: (err: ApiError, stats?: Stats) => any = nopCb): void {\n    var newCb = wrapCb(cb, 2);\n    try {\n      return this.root.stat(normalizePath(path), false, newCb);\n    } catch (e) {\n      return newCb(e, null);\n    }\n  }\n\n  /**\n   * Synchronous `stat`.\n   * @param [String] path\n   * @return [BrowserFS.node.fs.Stats]\n   */\n  public statSync(path: string): Stats {\n    return this.root.statSync(normalizePath(path), false);\n  }\n\n  /**\n   * Asynchronous `lstat`.\n   * `lstat()` is identical to `stat()`, except that if path is a symbolic link,\n   * then the link itself is stat-ed, not the file that it refers to.\n   * @param [String] path\n   * @param [Function(BrowserFS.ApiError, BrowserFS.node.fs.Stats)] callback\n   */\n  public lstat(path: string, cb: (err: ApiError, stats?: Stats) => any = nopCb): void {\n    var newCb = wrapCb(cb, 2);\n    try {\n      return this.root.stat(normalizePath(path), true, newCb);\n    } catch (e) {\n      return newCb(e, null);\n    }\n  }\n\n  /**\n   * Synchronous `lstat`.\n   * `lstat()` is identical to `stat()`, except that if path is a symbolic link,\n   * then the link itself is stat-ed, not the file that it refers to.\n   * @param [String] path\n   * @return [BrowserFS.node.fs.Stats]\n   */\n  public lstatSync(path: string): Stats {\n    return this.root.statSync(normalizePath(path), true);\n  }\n\n  // FILE-ONLY METHODS\n\n  /**\n   * Asynchronous `truncate`.\n   * @param [String] path\n   * @param [Number] len\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public truncate(path: string, cb?: (err?: ApiError) => void): void;\n  public truncate(path: string, len: number, cb?: (err?: ApiError) => void): void;\n  public truncate(path: string, arg2: any = 0, cb: (err?: ApiError) => void = nopCb): void {\n    var len = 0;\n    if (typeof arg2 === 'function') {\n      cb = arg2;\n    } else if (typeof arg2 === 'number') {\n      len = arg2;\n    }\n\n    var newCb = wrapCb(cb, 1);\n    try {\n      if (len < 0) {\n        throw new ApiError(ErrorCode.EINVAL);\n      }\n      return this.root.truncate(normalizePath(path), len, newCb);\n    } catch (e) {\n      return newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `truncate`.\n   * @param [String] path\n   * @param [Number] len\n   */\n  public truncateSync(path: string, len: number = 0): void {\n    if (len < 0) {\n      throw new ApiError(ErrorCode.EINVAL);\n    }\n    return this.root.truncateSync(normalizePath(path), len);\n  }\n\n  /**\n   * Asynchronous `unlink`.\n   * @param [String] path\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public unlink(path: string, cb: (err?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      return this.root.unlink(normalizePath(path), newCb);\n    } catch (e) {\n      return newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `unlink`.\n   * @param [String] path\n   */\n  public unlinkSync(path: string): void {\n    return this.root.unlinkSync(normalizePath(path));\n  }\n\n  /**\n   * Asynchronous file open.\n   * Exclusive mode ensures that path is newly created.\n   *\n   * `flags` can be:\n   *\n   * * `'r'` - Open file for reading. An exception occurs if the file does not exist.\n   * * `'r+'` - Open file for reading and writing. An exception occurs if the file does not exist.\n   * * `'rs'` - Open file for reading in synchronous mode. Instructs the filesystem to not cache writes.\n   * * `'rs+'` - Open file for reading and writing, and opens the file in synchronous mode.\n   * * `'w'` - Open file for writing. The file is created (if it does not exist) or truncated (if it exists).\n   * * `'wx'` - Like 'w' but opens the file in exclusive mode.\n   * * `'w+'` - Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).\n   * * `'wx+'` - Like 'w+' but opens the file in exclusive mode.\n   * * `'a'` - Open file for appending. The file is created if it does not exist.\n   * * `'ax'` - Like 'a' but opens the file in exclusive mode.\n   * * `'a+'` - Open file for reading and appending. The file is created if it does not exist.\n   * * `'ax+'` - Like 'a+' but opens the file in exclusive mode.\n   *\n   * @see http://www.manpagez.com/man/2/open/\n   * @param [String] path\n   * @param [String] flags\n   * @param [Number?] mode defaults to `0644`\n   * @param [Function(BrowserFS.ApiError, BrowserFS.File)] callback\n   */\n  public open(path: string, flag: string, cb?: (err: ApiError, fd?: number) => any): void;\n  public open(path: string, flag: string, mode: number|string, cb?: (err: ApiError, fd?: number) => any): void;\n  public open(path: string, flag: string, arg2?: any, cb: (err: ApiError, fd?: number) => any = nopCb): void {\n    var mode = normalizeMode(arg2, 0x1a4);\n    cb = typeof arg2 === 'function' ? arg2 : cb;\n    var newCb = wrapCb(cb, 2);\n    try {\n      this.root.open(normalizePath(path), FileFlag.getFileFlag(flag), mode, (e: ApiError, file?: File) => {\n        if (file) {\n          newCb(e, this.getFdForFile(file));\n        } else {\n          newCb(e);\n        }\n      });\n    } catch (e) {\n      newCb(e, null);\n    }\n  }\n\n  /**\n   * Synchronous file open.\n   * @see http://www.manpagez.com/man/2/open/\n   * @param [String] path\n   * @param [String] flags\n   * @param [Number?] mode defaults to `0644`\n   * @return [BrowserFS.File]\n   */\n  public openSync(path: string, flag: string, mode: number|string = 0x1a4): number {\n    return this.getFdForFile(\n      this.root.openSync(normalizePath(path), FileFlag.getFileFlag(flag), normalizeMode(mode, 0x1a4)));\n  }\n\n  /**\n   * Asynchronously reads the entire contents of a file.\n   * @example Usage example\n   *   fs.readFile('/etc/passwd', function (err, data) {\n   *     if (err) throw err;\n   *     console.log(data);\n   *   });\n   * @param [String] filename\n   * @param [Object?] options\n   * @option options [String] encoding The string encoding for the file contents. Defaults to `null`.\n   * @option options [String] flag Defaults to `'r'`.\n   * @param [Function(BrowserFS.ApiError, String | BrowserFS.node.Buffer)] callback If no encoding is specified, then the raw buffer is returned.\n   */\n  public readFile(filename: string, cb: (err: ApiError, data?: Buffer) => void ): void;\n  public readFile(filename: string, options: { flag?: string; }, callback: (err: ApiError, data: Buffer) => void): void;\n  public readFile(filename: string, options: { encoding: string; flag?: string; }, callback: (err: ApiError, data: string) => void): void;\n  public readFile(filename: string, encoding: string, cb?: (err: ApiError, data?: string) => void ): void;\n  public readFile(filename: string, arg2: any = {}, cb: (err: ApiError, data?: any) => void = nopCb ) {\n    var options = normalizeOptions(arg2, null, 'r', null);\n    cb = typeof arg2 === 'function' ? arg2 : cb;\n    var newCb = wrapCb(cb, 2);\n    try {\n      var flag = FileFlag.getFileFlag(options['flag']);\n      if (!flag.isReadable()) {\n        return newCb(new ApiError(ErrorCode.EINVAL, 'Flag passed to readFile must allow for reading.'));\n      }\n      return this.root.readFile(normalizePath(filename), options.encoding, flag, newCb);\n    } catch (e) {\n      return newCb(e, null);\n    }\n  }\n\n  /**\n   * Synchronously reads the entire contents of a file.\n   * @param [String] filename\n   * @param [Object?] options\n   * @option options [String] encoding The string encoding for the file contents. Defaults to `null`.\n   * @option options [String] flag Defaults to `'r'`.\n   * @return [String | BrowserFS.node.Buffer]\n   */\n  public readFileSync(filename: string, options?: { flag?: string; }): Buffer;\n  public readFileSync(filename: string, options: { encoding: string; flag?: string; }): string;\n  public readFileSync(filename: string, encoding: string): string;\n  public readFileSync(filename: string, arg2: any = {}): any {\n    var options = normalizeOptions(arg2, null, 'r', null);\n    var flag = FileFlag.getFileFlag(options.flag);\n    if (!flag.isReadable()) {\n      throw new ApiError(ErrorCode.EINVAL, 'Flag passed to readFile must allow for reading.');\n    }\n    return this.root.readFileSync(normalizePath(filename), options.encoding, flag);\n  }\n\n  /**\n   * Asynchronously writes data to a file, replacing the file if it already\n   * exists.\n   *\n   * The encoding option is ignored if data is a buffer.\n   *\n   * @example Usage example\n   *   fs.writeFile('message.txt', 'Hello Node', function (err) {\n   *     if (err) throw err;\n   *     console.log('It\\'s saved!');\n   *   });\n   * @param [String] filename\n   * @param [String | BrowserFS.node.Buffer] data\n   * @param [Object?] options\n   * @option options [String] encoding Defaults to `'utf8'`.\n   * @option options [Number] mode Defaults to `0644`.\n   * @option options [String] flag Defaults to `'w'`.\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public writeFile(filename: string, data: any, cb?: (err?: ApiError) => void): void;\n  public writeFile(filename: string, data: any, encoding?: string, cb?: (err?: ApiError) => void): void;\n  public writeFile(filename: string, data: any, options?: { encoding?: string; mode?: string | number; flag?: string; }, cb?: (err?: ApiError) => void): void;\n  public writeFile(filename: string, data: any, arg3: any = {}, cb: (err?: ApiError) => void = nopCb): void {\n    var options = normalizeOptions(arg3, 'utf8', 'w', 0x1a4);\n    cb = typeof arg3 === 'function' ? arg3 : cb;\n    var newCb = wrapCb(cb, 1);\n    try {\n      var flag = FileFlag.getFileFlag(options.flag);\n      if (!flag.isWriteable()) {\n        return newCb(new ApiError(ErrorCode.EINVAL, 'Flag passed to writeFile must allow for writing.'));\n      }\n      return this.root.writeFile(normalizePath(filename), data, options.encoding, flag, options.mode, newCb);\n    } catch (e) {\n      return newCb(e);\n    }\n  }\n\n  /**\n   * Synchronously writes data to a file, replacing the file if it already\n   * exists.\n   *\n   * The encoding option is ignored if data is a buffer.\n   * @param [String] filename\n   * @param [String | BrowserFS.node.Buffer] data\n   * @param [Object?] options\n   * @option options [String] encoding Defaults to `'utf8'`.\n   * @option options [Number] mode Defaults to `0644`.\n   * @option options [String] flag Defaults to `'w'`.\n   */\n  public writeFileSync(filename: string, data: any, options?: { encoding?: string; mode?: number | string; flag?: string; }): void;\n  public writeFileSync(filename: string, data: any, encoding?: string): void;\n  public writeFileSync(filename: string, data: any, arg3?: any): void {\n    var options = normalizeOptions(arg3, 'utf8', 'w', 0x1a4);\n    var flag = FileFlag.getFileFlag(options.flag);\n    if (!flag.isWriteable()) {\n      throw new ApiError(ErrorCode.EINVAL, 'Flag passed to writeFile must allow for writing.');\n    }\n    return this.root.writeFileSync(normalizePath(filename), data, options.encoding, flag, options.mode);\n  }\n\n  /**\n   * Asynchronously append data to a file, creating the file if it not yet\n   * exists.\n   *\n   * @example Usage example\n   *   fs.appendFile('message.txt', 'data to append', function (err) {\n   *     if (err) throw err;\n   *     console.log('The \"data to append\" was appended to file!');\n   *   });\n   * @param [String] filename\n   * @param [String | BrowserFS.node.Buffer] data\n   * @param [Object?] options\n   * @option options [String] encoding Defaults to `'utf8'`.\n   * @option options [Number] mode Defaults to `0644`.\n   * @option options [String] flag Defaults to `'a'`.\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public appendFile(filename: string, data: any, cb?: (err: ApiError) => void): void;\n  public appendFile(filename: string, data: any, options?: { encoding?: string; mode?: number|string; flag?: string; }, cb?: (err: ApiError) => void): void;\n  public appendFile(filename: string, data: any, encoding?: string, cb?: (err: ApiError) => void): void;\n  public appendFile(filename: string, data: any, arg3?: any, cb: (err: ApiError) => void = nopCb): void {\n    var options = normalizeOptions(arg3, 'utf8', 'a', 0x1a4);\n    cb = typeof arg3 === 'function' ? arg3 : cb;\n    var newCb = wrapCb(cb, 1);\n    try {\n      var flag = FileFlag.getFileFlag(options.flag);\n      if (!flag.isAppendable()) {\n        return newCb(new ApiError(ErrorCode.EINVAL, 'Flag passed to appendFile must allow for appending.'));\n      }\n      this.root.appendFile(normalizePath(filename), data, options.encoding, flag, options.mode, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Asynchronously append data to a file, creating the file if it not yet\n   * exists.\n   *\n   * @example Usage example\n   *   fs.appendFile('message.txt', 'data to append', function (err) {\n   *     if (err) throw err;\n   *     console.log('The \"data to append\" was appended to file!');\n   *   });\n   * @param [String] filename\n   * @param [String | BrowserFS.node.Buffer] data\n   * @param [Object?] options\n   * @option options [String] encoding Defaults to `'utf8'`.\n   * @option options [Number] mode Defaults to `0644`.\n   * @option options [String] flag Defaults to `'a'`.\n   */\n  public appendFileSync(filename: string, data: any, options?: { encoding?: string; mode?: number | string; flag?: string; }): void;\n  public appendFileSync(filename: string, data: any, encoding?: string): void;\n  public appendFileSync(filename: string, data: any, arg3?: any): void {\n    var options = normalizeOptions(arg3, 'utf8', 'a', 0x1a4);\n    var flag = FileFlag.getFileFlag(options.flag);\n    if (!flag.isAppendable()) {\n      throw new ApiError(ErrorCode.EINVAL, 'Flag passed to appendFile must allow for appending.');\n    }\n    return this.root.appendFileSync(normalizePath(filename), data, options.encoding, flag, options.mode);\n  }\n\n  // FILE DESCRIPTOR METHODS\n\n  /**\n   * Asynchronous `fstat`.\n   * `fstat()` is identical to `stat()`, except that the file to be stat-ed is\n   * specified by the file descriptor `fd`.\n   * @param [BrowserFS.File] fd\n   * @param [Function(BrowserFS.ApiError, BrowserFS.node.fs.Stats)] callback\n   */\n  public fstat(fd: number, cb: (err: ApiError, stats?: Stats) => any = nopCb): void {\n    var newCb = wrapCb(cb, 2);\n    try {\n      let file = this.fd2file(fd);\n      file.stat(newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `fstat`.\n   * `fstat()` is identical to `stat()`, except that the file to be stat-ed is\n   * specified by the file descriptor `fd`.\n   * @param [BrowserFS.File] fd\n   * @return [BrowserFS.node.fs.Stats]\n   */\n  public fstatSync(fd: number): Stats {\n    return this.fd2file(fd).statSync();\n  }\n\n  /**\n   * Asynchronous close.\n   * @param [BrowserFS.File] fd\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public close(fd: number, cb: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      this.fd2file(fd).close((e: ApiError) => {\n        if (!e) {\n          this.closeFd(fd);\n        }\n        newCb(e);\n      });\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous close.\n   * @param [BrowserFS.File] fd\n   */\n  public closeSync(fd: number): void {\n    this.fd2file(fd).closeSync();\n    this.closeFd(fd);\n  }\n\n  /**\n   * Asynchronous ftruncate.\n   * @param [BrowserFS.File] fd\n   * @param [Number] len\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public ftruncate(fd: number, cb?: (err?: ApiError) => void): void;\n  public ftruncate(fd: number, len?: number, cb?: (err?: ApiError) => void): void;\n  public ftruncate(fd: number, arg2?: any, cb: (err?: ApiError) => void = nopCb): void {\n    var length = typeof arg2 === 'number' ? arg2 : 0;\n    cb = typeof arg2 === 'function' ? arg2 : cb;\n    var newCb = wrapCb(cb, 1);\n    try {\n      let file = this.fd2file(fd);\n      if (length < 0) {\n        throw new ApiError(ErrorCode.EINVAL);\n      }\n      file.truncate(length, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous ftruncate.\n   * @param [BrowserFS.File] fd\n   * @param [Number] len\n   */\n  public ftruncateSync(fd: number, len: number = 0): void {\n    let file = this.fd2file(fd);\n    if (len < 0) {\n      throw new ApiError(ErrorCode.EINVAL);\n    }\n    file.truncateSync(len);\n  }\n\n  /**\n   * Asynchronous fsync.\n   * @param [BrowserFS.File] fd\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public fsync(fd: number, cb: (err?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      this.fd2file(fd).sync(newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous fsync.\n   * @param [BrowserFS.File] fd\n   */\n  public fsyncSync(fd: number): void {\n    this.fd2file(fd).syncSync();\n  }\n\n  /**\n   * Asynchronous fdatasync.\n   * @param [BrowserFS.File] fd\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public fdatasync(fd: number, cb: (err?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      this.fd2file(fd).datasync(newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous fdatasync.\n   * @param [BrowserFS.File] fd\n   */\n  public fdatasyncSync(fd: number): void {\n    this.fd2file(fd).datasyncSync();\n  }\n\n  /**\n   * Write buffer to the file specified by `fd`.\n   * Note that it is unsafe to use fs.write multiple times on the same file\n   * without waiting for the callback.\n   * @param [BrowserFS.File] fd\n   * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n   *   the file.\n   * @param [Number] offset Offset in the buffer to start reading data from.\n   * @param [Number] length The amount of bytes to write to the file.\n   * @param [Number] position Offset from the beginning of the file where this\n   *   data should be written. If position is null, the data will be written at\n   *   the current position.\n   * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)]\n   *   callback The number specifies the number of bytes written into the file.\n   */\n  public write(fd: number, buffer: Buffer, offset: number, length: number, cb?: (err: ApiError, written: number, buffer: Buffer) => void): void;\n  public write(fd: number, buffer: Buffer, offset: number, length: number, position: number, cb?: (err: ApiError, written: number, buffer: Buffer) => void): void;\n  public write(fd: number, data: any, cb?: (err: ApiError, written: number, str: string) => any): void;\n  public write(fd: number, data: any, position: number, cb?: (err: ApiError, written: number, str: string) => any): void;\n  public write(fd: number, data: any, position: number, encoding: string, cb?: (err: ApiError, written: number, str: string) => void): void;\n  public write(fd: number, arg2: any, arg3?: any, arg4?: any, arg5?: any, cb: (err: ApiError, written?: number, buffer?: Buffer) => void = nopCb): void {\n    var buffer: Buffer, offset: number, length: number, position: number = null;\n    if (typeof arg2 === 'string') {\n      // Signature 1: (fd, string, [position?, [encoding?]], cb?)\n      var encoding = 'utf8';\n      switch (typeof arg3) {\n        case 'function':\n          // (fd, string, cb)\n          cb = arg3;\n          break;\n        case 'number':\n          // (fd, string, position, encoding?, cb?)\n          position = arg3;\n          encoding = typeof arg4 === 'string' ? arg4 : 'utf8';\n          cb = typeof arg5 === 'function' ? arg5 : cb;\n          break;\n        default:\n          // ...try to find the callback and get out of here!\n          cb = typeof arg4 === 'function' ? arg4 : typeof arg5 === 'function' ? arg5 : cb;\n          return cb(new ApiError(ErrorCode.EINVAL, 'Invalid arguments.'));\n      }\n      buffer = new Buffer(arg2, encoding);\n      offset = 0;\n      length = buffer.length;\n    } else {\n      // Signature 2: (fd, buffer, offset, length, position?, cb?)\n      buffer = arg2;\n      offset = arg3;\n      length = arg4;\n      position = typeof arg5 === 'number' ? arg5 : null;\n      cb = typeof arg5 === 'function' ? arg5 : cb;\n    }\n\n    var newCb = wrapCb(cb, 3);\n    try {\n      let file = this.fd2file(fd);\n      if (position == null) {\n        position = file.getPos();\n      }\n      file.write(buffer, offset, length, position, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Write buffer to the file specified by `fd`.\n   * Note that it is unsafe to use fs.write multiple times on the same file\n   * without waiting for it to return.\n   * @param [BrowserFS.File] fd\n   * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n   *   the file.\n   * @param [Number] offset Offset in the buffer to start reading data from.\n   * @param [Number] length The amount of bytes to write to the file.\n   * @param [Number] position Offset from the beginning of the file where this\n   *   data should be written. If position is null, the data will be written at\n   *   the current position.\n   * @return [Number]\n   */\n  public writeSync(fd: number, buffer: Buffer, offset: number, length: number, position?: number): number;\n  public writeSync(fd: number, data: string, position?: number, encoding?: string): number;\n  public writeSync(fd: number, arg2: any, arg3?: any, arg4?: any, arg5?: any): number {\n    var buffer: Buffer, offset: number = 0, length: number, position: number;\n    if (typeof arg2 === 'string') {\n      // Signature 1: (fd, string, [position?, [encoding?]])\n      position = typeof arg3 === 'number' ? arg3 : null;\n      var encoding = typeof arg4 === 'string' ? arg4 : 'utf8';\n      offset = 0;\n      buffer = new Buffer(arg2, encoding);\n      length = buffer.length;\n    } else {\n      // Signature 2: (fd, buffer, offset, length, position?)\n      buffer = arg2;\n      offset = arg3;\n      length = arg4;\n      position = typeof arg5 === 'number' ? arg5 : null;\n    }\n\n    let file = this.fd2file(fd);\n    if (position == null) {\n      position = file.getPos();\n    }\n    return file.writeSync(buffer, offset, length, position);\n  }\n\n  /**\n   * Read data from the file specified by `fd`.\n   * @param [BrowserFS.File] fd\n   * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n   *   written to.\n   * @param [Number] offset The offset within the buffer where writing will\n   *   start.\n   * @param [Number] length An integer specifying the number of bytes to read.\n   * @param [Number] position An integer specifying where to begin reading from\n   *   in the file. If position is null, data will be read from the current file\n   *   position.\n   * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)]\n   *   callback The number is the number of bytes read\n   */\n  public read(fd: number, length: number, position: number, encoding: string, cb?: (err: ApiError, data?: string, bytesRead?: number) => void): void;\n  public read(fd: number, buffer: Buffer, offset: number, length: number, position: number, cb?: (err: ApiError, bytesRead?: number, buffer?: Buffer) => void): void;\n  public read(fd: number, arg2: any, arg3: any, arg4: any, arg5?: any, cb: (err: ApiError, arg2?: any, arg3?: any) => void = nopCb): void {\n    var position: number, offset: number, length: number, buffer: Buffer, newCb: (err: ApiError, bytesRead?: number, buffer?: Buffer) => void;\n    if (typeof arg2 === 'number') {\n      // legacy interface\n      // (fd, length, position, encoding, callback)\n      length = arg2;\n      position = arg3;\n      var encoding = arg4;\n      cb = typeof arg5 === 'function' ? arg5 : cb;\n      offset = 0;\n      buffer = new Buffer(length);\n      // XXX: Inefficient.\n      // Wrap the cb so we shelter upper layers of the API from these\n      // shenanigans.\n      newCb = wrapCb((function(err: any, bytesRead: number, buf: Buffer) {\n        if (err) {\n          return cb(err);\n        }\n        cb(err, buf.toString(encoding), bytesRead);\n      }), 3);\n    } else {\n      buffer = arg2;\n      offset = arg3;\n      length = arg4;\n      position = arg5;\n      newCb = wrapCb(cb, 3);\n    }\n\n    try {\n      let file = this.fd2file(fd);\n      if (position == null) {\n        position = file.getPos();\n      }\n      file.read(buffer, offset, length, position, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Read data from the file specified by `fd`.\n   * @param [BrowserFS.File] fd\n   * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n   *   written to.\n   * @param [Number] offset The offset within the buffer where writing will\n   *   start.\n   * @param [Number] length An integer specifying the number of bytes to read.\n   * @param [Number] position An integer specifying where to begin reading from\n   *   in the file. If position is null, data will be read from the current file\n   *   position.\n   * @return [Number]\n   */\n  public readSync(fd: number, length: number, position: number, encoding: string): string;\n  public readSync(fd: number, buffer: Buffer, offset: number, length: number, position: number): number;\n  public readSync(fd: number, arg2: any, arg3: any, arg4: any, arg5?: any): any {\n    var shenanigans = false;\n    var buffer: Buffer, offset: number, length: number, position: number;\n    if (typeof arg2 === 'number') {\n      length = arg2;\n      position = arg3;\n      var encoding = arg4;\n      offset = 0;\n      buffer = new Buffer(length);\n      shenanigans = true;\n    } else {\n      buffer = arg2;\n      offset = arg3;\n      length = arg4;\n      position = arg5;\n    }\n    let file = this.fd2file(fd);\n    if (position == null) {\n      position = file.getPos();\n    }\n\n    var rv = file.readSync(buffer, offset, length, position);\n    if (!shenanigans) {\n      return rv;\n    } else {\n      return [buffer.toString(encoding), rv];\n    }\n  }\n\n  /**\n   * Asynchronous `fchown`.\n   * @param [BrowserFS.File] fd\n   * @param [Number] uid\n   * @param [Number] gid\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public fchown(fd: number, uid: number, gid: number, callback: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(callback, 1);\n    try {\n      this.fd2file(fd).chown(uid, gid, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `fchown`.\n   * @param [BrowserFS.File] fd\n   * @param [Number] uid\n   * @param [Number] gid\n   */\n  public fchownSync(fd: number, uid: number, gid: number): void {\n    this.fd2file(fd).chownSync(uid, gid);\n  }\n\n  /**\n   * Asynchronous `fchmod`.\n   * @param [BrowserFS.File] fd\n   * @param [Number] mode\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public fchmod(fd: number, mode: string | number, cb?: (e?: ApiError) => void): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      let numMode = typeof mode === 'string' ? parseInt(mode, 8) : mode;\n      this.fd2file(fd).chmod(numMode, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `fchmod`.\n   * @param [BrowserFS.File] fd\n   * @param [Number] mode\n   */\n  public fchmodSync(fd: number, mode: number | string): void {\n    let numMode = typeof mode === 'string' ? parseInt(mode, 8) : mode;\n    this.fd2file(fd).chmodSync(numMode);\n  }\n\n  /**\n   * Change the file timestamps of a file referenced by the supplied file\n   * descriptor.\n   * @param [BrowserFS.File] fd\n   * @param [Date] atime\n   * @param [Date] mtime\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public futimes(fd: number, atime: number, mtime: number, cb: (e?: ApiError) => void): void;\n  public futimes(fd: number, atime: Date, mtime: Date, cb: (e?: ApiError) => void): void;\n  public futimes(fd: number, atime: any, mtime: any, cb: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      let file = this.fd2file(fd);\n      if (typeof atime === 'number') {\n        atime = new Date(atime * 1000);\n      }\n      if (typeof mtime === 'number') {\n        mtime = new Date(mtime * 1000);\n      }\n      file.utimes(atime, mtime, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Change the file timestamps of a file referenced by the supplied file\n   * descriptor.\n   * @param [BrowserFS.File] fd\n   * @param [Date] atime\n   * @param [Date] mtime\n   */\n  public futimesSync(fd: number, atime: number | Date, mtime: number | Date): void {\n    this.fd2file(fd).utimesSync(normalizeTime(atime), normalizeTime(mtime));\n  }\n\n  // DIRECTORY-ONLY METHODS\n\n  /**\n   * Asynchronous `rmdir`.\n   * @param [String] path\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public rmdir(path: string, cb: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      path = normalizePath(path);\n      this.root.rmdir(path, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `rmdir`.\n   * @param [String] path\n   */\n  public rmdirSync(path: string): void {\n    path = normalizePath(path);\n    return this.root.rmdirSync(path);\n  }\n\n  /**\n   * Asynchronous `mkdir`.\n   * @param [String] path\n   * @param [Number?] mode defaults to `0777`\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public mkdir(path: string, mode?: any, cb: (e?: ApiError) => void = nopCb): void {\n    if (typeof mode === 'function') {\n      cb = mode;\n      mode = 0x1ff;\n    }\n    var newCb = wrapCb(cb, 1);\n    try {\n      path = normalizePath(path);\n      this.root.mkdir(path, mode, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `mkdir`.\n   * @param [String] path\n   * @param [Number?] mode defaults to `0777`\n   */\n  public mkdirSync(path: string, mode?: number | string): void {\n    this.root.mkdirSync(normalizePath(path), normalizeMode(mode, 0x1ff));\n  }\n\n  /**\n   * Asynchronous `readdir`. Reads the contents of a directory.\n   * The callback gets two arguments `(err, files)` where `files` is an array of\n   * the names of the files in the directory excluding `'.'` and `'..'`.\n   * @param [String] path\n   * @param [Function(BrowserFS.ApiError, String[])] callback\n   */\n  public readdir(path: string, cb: (err: ApiError, files?: string[]) => void = nopCb): void {\n    var newCb = <(err: ApiError, files?: string[]) => void> wrapCb(cb, 2);\n    try {\n      path = normalizePath(path);\n      this.root.readdir(path, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `readdir`. Reads the contents of a directory.\n   * @param [String] path\n   * @return [String[]]\n   */\n  public readdirSync(path: string): string[] {\n    path = normalizePath(path);\n    return this.root.readdirSync(path);\n  }\n\n  // SYMLINK METHODS\n\n  /**\n   * Asynchronous `link`.\n   * @param [String] srcpath\n   * @param [String] dstpath\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public link(srcpath: string, dstpath: string, cb: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      srcpath = normalizePath(srcpath);\n      dstpath = normalizePath(dstpath);\n      this.root.link(srcpath, dstpath, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `link`.\n   * @param [String] srcpath\n   * @param [String] dstpath\n   */\n  public linkSync(srcpath: string, dstpath: string): void {\n    srcpath = normalizePath(srcpath);\n    dstpath = normalizePath(dstpath);\n    return this.root.linkSync(srcpath, dstpath);\n  }\n\n  /**\n   * Asynchronous `symlink`.\n   * @param [String] srcpath\n   * @param [String] dstpath\n   * @param [String?] type can be either `'dir'` or `'file'` (default is `'file'`)\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public symlink(srcpath: string, dstpath: string, cb?: (e?: ApiError) => void): void;\n  public symlink(srcpath: string, dstpath: string, type?: string, cb?: (e?: ApiError) => void): void;\n  public symlink(srcpath: string, dstpath: string, arg3?: any, cb: (e?: ApiError) => void = nopCb): void {\n    var type = typeof arg3 === 'string' ? arg3 : 'file';\n    cb = typeof arg3 === 'function' ? arg3 : cb;\n    var newCb = wrapCb(cb, 1);\n    try {\n      if (type !== 'file' && type !== 'dir') {\n        return newCb(new ApiError(ErrorCode.EINVAL, \"Invalid type: \" + type));\n      }\n      srcpath = normalizePath(srcpath);\n      dstpath = normalizePath(dstpath);\n      this.root.symlink(srcpath, dstpath, type, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `symlink`.\n   * @param [String] srcpath\n   * @param [String] dstpath\n   * @param [String?] type can be either `'dir'` or `'file'` (default is `'file'`)\n   */\n  public symlinkSync(srcpath: string, dstpath: string, type?: string): void {\n    if (type == null) {\n      type = 'file';\n    } else if (type !== 'file' && type !== 'dir') {\n      throw new ApiError(ErrorCode.EINVAL, \"Invalid type: \" + type);\n    }\n    srcpath = normalizePath(srcpath);\n    dstpath = normalizePath(dstpath);\n    return this.root.symlinkSync(srcpath, dstpath, type);\n  }\n\n  /**\n   * Asynchronous readlink.\n   * @param [String] path\n   * @param [Function(BrowserFS.ApiError, String)] callback\n   */\n  public readlink(path: string, cb: (err: ApiError, linkString?: string) => any = nopCb): void {\n    var newCb = wrapCb(cb, 2);\n    try {\n      path = normalizePath(path);\n      this.root.readlink(path, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous readlink.\n   * @param [String] path\n   * @return [String]\n   */\n  public readlinkSync(path: string): string {\n    path = normalizePath(path);\n    return this.root.readlinkSync(path);\n  }\n\n  // PROPERTY OPERATIONS\n\n  /**\n   * Asynchronous `chown`.\n   * @param [String] path\n   * @param [Number] uid\n   * @param [Number] gid\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public chown(path: string, uid: number, gid: number, cb: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      path = normalizePath(path);\n      this.root.chown(path, false, uid, gid, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `chown`.\n   * @param [String] path\n   * @param [Number] uid\n   * @param [Number] gid\n   */\n  public chownSync(path: string, uid: number, gid: number): void {\n    path = normalizePath(path);\n    this.root.chownSync(path, false, uid, gid);\n  }\n\n  /**\n   * Asynchronous `lchown`.\n   * @param [String] path\n   * @param [Number] uid\n   * @param [Number] gid\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public lchown(path: string, uid: number, gid: number, cb: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      path = normalizePath(path);\n      this.root.chown(path, true, uid, gid, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `lchown`.\n   * @param [String] path\n   * @param [Number] uid\n   * @param [Number] gid\n   */\n  public lchownSync(path: string, uid: number, gid: number): void {\n    path = normalizePath(path);\n    this.root.chownSync(path, true, uid, gid);\n  }\n\n  /**\n   * Asynchronous `chmod`.\n   * @param [String] path\n   * @param [Number] mode\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public chmod(path: string, mode: number | string, cb: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      let numMode = normalizeMode(mode, -1);\n      if (numMode < 0) {\n        throw new ApiError(ErrorCode.EINVAL, `Invalid mode.`);\n      }\n      this.root.chmod(normalizePath(path), false, numMode, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `chmod`.\n   * @param [String] path\n   * @param [Number] mode\n   */\n  public chmodSync(path: string, mode: string|number): void {\n    let numMode = normalizeMode(mode, -1);\n    if (numMode < 0) {\n      throw new ApiError(ErrorCode.EINVAL, `Invalid mode.`);\n    }\n    path = normalizePath(path);\n    this.root.chmodSync(path, false, numMode);\n  }\n\n  /**\n   * Asynchronous `lchmod`.\n   * @param [String] path\n   * @param [Number] mode\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public lchmod(path: string, mode: number|string, cb: Function = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      let numMode = normalizeMode(mode, -1);\n      if (numMode < 0) {\n        throw new ApiError(ErrorCode.EINVAL, `Invalid mode.`);\n      }\n      this.root.chmod(normalizePath(path), true, numMode, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `lchmod`.\n   * @param [String] path\n   * @param [Number] mode\n   */\n  public lchmodSync(path: string, mode: number|string): void {\n    let numMode = normalizeMode(mode, -1);\n    if (numMode < 1) {\n      throw new ApiError(ErrorCode.EINVAL, `Invalid mode.`);\n    }\n    this.root.chmodSync(normalizePath(path), true, numMode);\n  }\n\n  /**\n   * Change file timestamps of the file referenced by the supplied path.\n   * @param [String] path\n   * @param [Date] atime\n   * @param [Date] mtime\n   * @param [Function(BrowserFS.ApiError)] callback\n   */\n  public utimes(path: string, atime: number|Date, mtime: number|Date, cb: (e?: ApiError) => void = nopCb): void {\n    var newCb = wrapCb(cb, 1);\n    try {\n      this.root.utimes(normalizePath(path), normalizeTime(atime), normalizeTime(mtime), newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Change file timestamps of the file referenced by the supplied path.\n   * @param [String] path\n   * @param [Date] atime\n   * @param [Date] mtime\n   */\n  public utimesSync(path: string, atime: number|Date, mtime: number|Date): void {\n    this.root.utimesSync(normalizePath(path), normalizeTime(atime), normalizeTime(mtime));\n  }\n\n  /**\n   * Asynchronous `realpath`. The callback gets two arguments\n   * `(err, resolvedPath)`. May use `process.cwd` to resolve relative paths.\n   *\n   * @example Usage example\n   *   var cache = {'/etc':'/private/etc'};\n   *   fs.realpath('/etc/passwd', cache, function (err, resolvedPath) {\n   *     if (err) throw err;\n   *     console.log(resolvedPath);\n   *   });\n   *\n   * @param [String] path\n   * @param [Object?] cache An object literal of mapped paths that can be used to\n   *   force a specific path resolution or avoid additional `fs.stat` calls for\n   *   known real paths.\n   * @param [Function(BrowserFS.ApiError, String)] callback\n   */\n  public realpath(path: string, cb?: (err: ApiError, resolvedPath?: string) =>any): void;\n  public realpath(path: string, cache: {[path: string]: string}, cb: (err: ApiError, resolvedPath?: string) =>any): void;\n  public realpath(path: string, arg2?: any, cb: (err: ApiError, resolvedPath?: string) => any = nopCb): void {\n    var cache = typeof arg2 === 'object' ? arg2 : {};\n    cb = typeof arg2 === 'function' ? arg2 : nopCb;\n    var newCb = <(err: ApiError, resolvedPath?: string) =>any> wrapCb(cb, 2);\n    try {\n      path = normalizePath(path);\n      this.root.realpath(path, cache, newCb);\n    } catch (e) {\n      newCb(e);\n    }\n  }\n\n  /**\n   * Synchronous `realpath`.\n   * @param [String] path\n   * @param [Object?] cache An object literal of mapped paths that can be used to\n   *   force a specific path resolution or avoid additional `fs.stat` calls for\n   *   known real paths.\n   * @return [String]\n   */\n  public realpathSync(path: string, cache: {[path: string]: string} = {}): string {\n    path = normalizePath(path);\n    return this.root.realpathSync(path, cache);\n  }\n\n  public watchFile(filename: string, listener: (curr: Stats, prev: Stats) => void): void;\n  public watchFile(filename: string, options: { persistent?: boolean; interval?: number; }, listener: (curr: Stats, prev: Stats) => void): void;\n  public watchFile(filename: string, arg2: any, listener: (curr: Stats, prev: Stats) => void = nopCb): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  public unwatchFile(filename: string, listener: (curr: Stats, prev: Stats) => void = nopCb): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  public watch(filename: string, listener?: (event: string, filename: string) => any): _fs.FSWatcher;\n  public watch(filename: string, options: { persistent?: boolean; }, listener?: (event: string, filename: string) => any): _fs.FSWatcher;\n  public watch(filename: string, arg2: any, listener: (event: string, filename: string) => any = nopCb): _fs.FSWatcher {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  public F_OK: number = 0;\n  public R_OK: number = 4;\n  public W_OK: number = 2;\n  public X_OK: number = 1;\n\n  public access(path: string, callback: (err: ApiError) => void): void;\n  public access(path: string, mode: number, callback: (err: ApiError) => void): void;\n  public access(path: string, arg2: any, cb: (e: ApiError) => void = nopCb): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  public accessSync(path: string, mode?: number): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  public createReadStream(path: string, options?: {\n        flags?: string;\n        encoding?: string;\n        fd?: number;\n        mode?: number;\n        autoClose?: boolean;\n    }): _fs.ReadStream {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  public createWriteStream(path: string, options?: {\n        flags?: string;\n        encoding?: string;\n        fd?: number;\n        mode?: number;\n    }): _fs.WriteStream {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  public _wrapCb: (cb: Function, args: number) => Function = wrapCb;\n}\n\n// Type checking.\nvar _: typeof _fs = new FS();\n\nexport interface FSModule extends FS {\n  /**\n   * Retrieve the FS object backing the fs module.\n   */\n  getFSModule(): FS;\n  /**\n   * Set the FS object backing the fs module.\n   */\n  changeFSModule(newFs: FS): void;\n  /**\n   * The FS constructor.\n   */\n  FS: typeof FS;\n}\n","/**\n * Standard libc error codes. Add more to this enum and ErrorStrings as they are\n * needed.\n * @url http://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n */\nexport enum ErrorCode {\n  EPERM, ENOENT, EIO, EBADF, EACCES, EBUSY, EEXIST, ENOTDIR, EISDIR, EINVAL,\n  EFBIG, ENOSPC, EROFS, ENOTEMPTY, ENOTSUP\n}\n/**\n * Strings associated with each error code.\n */\nvar ErrorStrings: {[code: string]: string} = {};\nErrorStrings[ErrorCode.EPERM] = 'Operation not permitted.';\nErrorStrings[ErrorCode.ENOENT] = 'No such file or directory.';\nErrorStrings[ErrorCode.EIO] = 'Input/output error.';\nErrorStrings[ErrorCode.EBADF] = 'Bad file descriptor.';\nErrorStrings[ErrorCode.EACCES] = 'Permission denied.';\nErrorStrings[ErrorCode.EBUSY] = 'Resource busy or locked.';\nErrorStrings[ErrorCode.EEXIST] = 'File exists.';\nErrorStrings[ErrorCode.ENOTDIR] = 'File is not a directory.';\nErrorStrings[ErrorCode.EISDIR] = 'File is a directory.';\nErrorStrings[ErrorCode.EINVAL] = 'Invalid argument.';\nErrorStrings[ErrorCode.EFBIG] = 'File is too big.';\nErrorStrings[ErrorCode.ENOSPC] = 'No space left on disk.';\nErrorStrings[ErrorCode.EROFS] = 'Cannot modify a read-only file system.';\nErrorStrings[ErrorCode.ENOTEMPTY] = 'Directory is not empty.';\nErrorStrings[ErrorCode.ENOTSUP] = 'Operation is not supported.';\n\n/**\n * Represents a BrowserFS error. Passed back to applications after a failed\n * call to the BrowserFS API.\n * errno?: number;\n        code?: string;\n        path?: string;\n        syscall?: string;\n        stack?: string;\n */\nexport class ApiError extends Error implements NodeJS.ErrnoException {\n  public errno: ErrorCode;\n  public code: string;\n  public path: string;\n  // Unsupported.\n  public syscall: string = \"\";\n  public stack: string;\n\n  /**\n   * Represents a BrowserFS error. Passed back to applications after a failed\n   * call to the BrowserFS API.\n   *\n   * Error codes mirror those returned by regular Unix file operations, which is\n   * what Node returns.\n   * @constructor ApiError\n   * @param type The type of the error.\n   * @param [message] A descriptive error message.\n   */\n  constructor(type: ErrorCode, message: string = ErrorStrings[type], path: string = null) {\n    super(message);\n    this.errno = type;\n    this.code = ErrorCode[type];\n    this.path = path;\n    this.stack = (<any>new Error()).stack;\n    this.message = `Error: ${this.code}: ${message}${this.path ? `, '${this.path}'` : ''}`;\n  }\n\n  /**\n   * @return A friendly error message.\n   */\n  public toString(): string {\n    return this.message;\n  }\n\n  public toJSON(): any {\n    return {\n      errno: this.errno,\n      code: this.code,\n      path: this.path,\n      stack: this.stack,\n      message: this.message\n    };\n  }\n\n  public static fromJSON(json: any): ApiError {\n    var err = new ApiError(0);\n    err.errno = json.errno;\n    err.code = json.code;\n    err.path = json.path;\n    err.stack = json.stack;\n    err.message = json.message;\n    return err;\n  }\n\n  /**\n   * Writes the API error into a buffer.\n   */\n  public writeToBuffer(buffer: Buffer = new Buffer(this.bufferSize()), i: number = 0): Buffer {\n    var bytesWritten = buffer.write(JSON.stringify(this.toJSON()), i + 4);\n    buffer.writeUInt32LE(bytesWritten, i);\n    return buffer;\n  }\n\n  /**\n   * Creates an ApiError object from a buffer.\n   */\n  public static fromBuffer(buffer: Buffer, i: number = 0): ApiError {\n    return ApiError.fromJSON(JSON.parse(buffer.toString('utf8', i + 4, i + 4 + buffer.readUInt32LE(i))));\n  }\n\n  /**\n   * The size of the API error in buffer-form in bytes.\n   */\n  public bufferSize(): number {\n    // 4 bytes for string length.\n    return 4 + Buffer.byteLength(JSON.stringify(this.toJSON()));\n  }\n\n  public static FileError(code: ErrorCode, p: string): ApiError {\n    return new ApiError(code, ErrorStrings[code], p);\n  }\n  public static ENOENT(path: string): ApiError {\n    return this.FileError(ErrorCode.ENOENT, path);\n  }\n\n  public static EEXIST(path: string): ApiError {\n    return this.FileError(ErrorCode.EEXIST, path);\n  }\n\n  public static EISDIR(path: string): ApiError {\n    return this.FileError(ErrorCode.EISDIR, path);\n  }\n\n  public static ENOTDIR(path: string): ApiError {\n    return this.FileError(ErrorCode.ENOTDIR, path);\n  }\n\n  public static EPERM(path: string): ApiError {\n    return this.FileError(ErrorCode.EPERM, path);\n  }\n\n  public static ENOTEMPTY(path: string): ApiError {\n    return this.FileError(ErrorCode.ENOTEMPTY, path);\n  }\n}\n","import AsyncMirror from '../backend/AsyncMirror';\nimport Dropbox from '../backend/Dropbox';\nimport FolderAdapter from '../backend/FolderAdapter';\nimport HTML5FS from '../backend/HTML5FS';\nimport InMemory from '../backend/InMemory';\nimport IndexedDB from '../backend/IndexedDB';\nimport LocalStorage from '../backend/LocalStorage';\nimport MountableFileSystem from '../backend/MountableFileSystem';\nimport OverlayFS from '../backend/OverlayFS';\nimport WorkerFS from '../backend/WorkerFS';\nimport XmlHttpRequest from '../backend/XmlHttpRequest';\nimport ZipFS from '../backend/ZipFS';\nexport {AsyncMirror, Dropbox, FolderAdapter, HTML5FS, InMemory, IndexedDB, LocalStorage, MountableFileSystem, OverlayFS, WorkerFS, XmlHttpRequest, ZipFS};\n","/**\n * BrowserFS's main module. This is exposed in the browser via the BrowserFS global.\n */\n\nimport buffer = require('buffer');\nimport fs = require('./node_fs');\nimport path = require('path');\nimport file_system = require('./file_system');\nimport EmscriptenFS from '../generic/emscripten_fs';\nimport * as FileSystem from './backends';\nimport * as BFSUtils from './util';\n\nif (process['initializeTTYs']) {\n  process['initializeTTYs']();\n}\n\n/**\n * Installs BrowserFS onto the given object.\n * We recommend that you run install with the 'window' object to make things\n * global, as in Node.\n *\n * Properties installed:\n *\n * * Buffer\n * * process\n * * require (we monkey-patch it)\n *\n * This allows you to write code as if you were running inside Node.\n * @param {object} obj - The object to install things onto (e.g. window)\n */\nexport function install(obj: any) {\n  obj.Buffer = Buffer;\n  obj.process = process;\n  var oldRequire = obj.require != null ? obj.require : null;\n  // Monkey-patch require for Node-style code.\n  obj.require = function(arg: string) {\n    var rv = BFSRequire(arg);\n    if (rv == null) {\n      return oldRequire.apply(null, Array.prototype.slice.call(arguments, 0))\n    } else {\n      return rv;\n    }\n  };\n}\n\nexport function registerFileSystem(name: string, fs: file_system.FileSystemConstructor) {\n  (<any> FileSystem)[name] = fs;\n}\n\nexport function BFSRequire(module: 'fs'): typeof fs;\nexport function BFSRequire(module: 'path'): typeof path;\nexport function BFSRequire(module: 'buffer'): typeof buffer;\nexport function BFSRequire(module: 'process'): typeof process;\nexport function BFSRequire(module: 'bfs_utils'): typeof BFSUtils;\nexport function BFSRequire(module: string): any;\nexport function BFSRequire(module: string): any {\n  switch(module) {\n    case 'fs':\n      return fs;\n    case 'path':\n      return path;\n    case 'buffer':\n      // The 'buffer' module has 'Buffer' as a property.\n      return buffer;\n    case 'process':\n      return process;\n    case 'bfs_utils':\n      return BFSUtils;\n    default:\n      return FileSystem[module];\n  }\n}\n\n/**\n * You must call this function with a properly-instantiated root file system\n * before using any file system API method.\n * @param {BrowserFS.FileSystem} rootFS - The root filesystem to use for the\n *   entire BrowserFS file system.\n */\nexport function initialize(rootfs: file_system.FileSystem) {\n  return fs.initialize(rootfs);\n}\n\nexport {EmscriptenFS, FileSystem};\n","import {ApiError, ErrorCode} from './api_error';\nimport Stats from './node_fs_stats';\n\nexport interface File {\n  /**\n   * **Core**: Get the current file position.\n   * @return [Number]\n   */\n  getPos(): number;\n  /**\n   * **Core**: Asynchronous `stat`.\n   * @param [Function(BrowserFS.ApiError, BrowserFS.node.fs.Stats)] cb\n   */\n  stat(cb: (err: ApiError, stats?: Stats) => any): void;\n  /**\n   * **Core**: Synchronous `stat`.\n   * @param [Function(BrowserFS.ApiError, BrowserFS.node.fs.Stats)] cb\n   */\n  statSync(): Stats;\n  /**\n   * **Core**: Asynchronous close.\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  close(cb: Function): void;\n  /**\n   * **Core**: Synchronous close.\n   */\n  closeSync(): void;\n  /**\n   * **Core**: Asynchronous truncate.\n   * @param [Number] len\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  truncate(len: number, cb: Function): void;\n  /**\n   * **Core**: Synchronous truncate.\n   * @param [Number] len\n   */\n  truncateSync(len: number): void;\n  /**\n   * **Core**: Asynchronous sync.\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  sync(cb: (e?: ApiError) => void): void;\n  /**\n   * **Core**: Synchronous sync.\n   */\n  syncSync(): void;\n  /**\n   * **Core**: Write buffer to the file.\n   * Note that it is unsafe to use fs.write multiple times on the same file\n   * without waiting for the callback.\n   * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n   *  the file.\n   * @param [Number] offset Offset in the buffer to start reading data from.\n   * @param [Number] length The amount of bytes to write to the file.\n   * @param [Number] position Offset from the beginning of the file where this\n   *   data should be written. If position is null, the data will be written at\n   *   the current position.\n   * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)]\n   *   cb The number specifies the number of bytes written into the file.\n   */\n  write(buffer: NodeBuffer, offset: number, length: number, position: number, cb: (err: ApiError, written?: number, buffer?: NodeBuffer) => any): void;\n  /**\n   * **Core**: Write buffer to the file.\n   * Note that it is unsafe to use fs.writeSync multiple times on the same file\n   * without waiting for it to return.\n   * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n   *  the file.\n   * @param [Number] offset Offset in the buffer to start reading data from.\n   * @param [Number] length The amount of bytes to write to the file.\n   * @param [Number] position Offset from the beginning of the file where this\n   *   data should be written. If position is null, the data will be written at\n   *   the current position.\n   * @return [Number]\n   */\n  writeSync(buffer: NodeBuffer, offset: number, length: number, position: number): number;\n  /**\n   * **Core**: Read data from the file.\n   * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n   *   written to.\n   * @param [Number] offset The offset within the buffer where writing will\n   *   start.\n   * @param [Number] length An integer specifying the number of bytes to read.\n   * @param [Number] position An integer specifying where to begin reading from\n   *   in the file. If position is null, data will be read from the current file\n   *   position.\n   * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)] cb The\n   *   number is the number of bytes read\n   */\n  read(buffer: NodeBuffer, offset: number, length: number, position: number, cb: (err: ApiError, bytesRead?: number, buffer?: NodeBuffer) => void): void;\n  /**\n   * **Core**: Read data from the file.\n   * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n   *   written to.\n   * @param [Number] offset The offset within the buffer where writing will\n   *   start.\n   * @param [Number] length An integer specifying the number of bytes to read.\n   * @param [Number] position An integer specifying where to begin reading from\n   *   in the file. If position is null, data will be read from the current file\n   *   position.\n   * @return [Number]\n   */\n  readSync(buffer: NodeBuffer, offset: number, length: number, position: number): number;\n  /**\n   * **Supplementary**: Asynchronous `datasync`.\n   *\n   * Default implementation maps to `sync`.\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  datasync(cb: (e?: ApiError) => void): void;\n  /**\n   * **Supplementary**: Synchronous `datasync`.\n   *\n   * Default implementation maps to `syncSync`.\n   */\n  datasyncSync(): void;\n  /**\n   * **Optional**: Asynchronous `chown`.\n   * @param [Number] uid\n   * @param [Number] gid\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  chown(uid: number, gid: number, cb: (e?: ApiError) => void): void;\n  /**\n   * **Optional**: Synchronous `chown`.\n   * @param [Number] uid\n   * @param [Number] gid\n   */\n  chownSync(uid: number, gid: number): void;\n  /**\n   * **Optional**: Asynchronous `fchmod`.\n   * @param [Number] mode\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  chmod(mode: number, cb: (e?: ApiError) => void): void;\n  /**\n   * **Optional**: Synchronous `fchmod`.\n   * @param [Number] mode\n   */\n  chmodSync(mode: number): void;\n  /**\n   * **Optional**: Change the file timestamps of the file.\n   * @param [Date] atime\n   * @param [Date] mtime\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  utimes(atime: Date, mtime: Date, cb: (e?: ApiError) => void): void;\n  /**\n   * **Optional**: Change the file timestamps of the file.\n   * @param [Date] atime\n   * @param [Date] mtime\n   */\n  utimesSync(atime: Date, mtime: Date): void;\n}\n\n/**\n * Base class that contains shared implementations of functions for the file\n * object.\n * @class\n */\nexport class BaseFile {\n  public sync(cb: (e?: ApiError) => void): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public syncSync(): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public datasync(cb: (e?: ApiError) => void): void {\n    this.sync(cb);\n  }\n  public datasyncSync(): void {\n    return this.syncSync();\n  }\n  public chown(uid: number, gid: number, cb: (e?: ApiError) => void): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public chownSync(uid: number, gid: number): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public chmod(mode: number, cb: (e?: ApiError) => void): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public chmodSync(mode: number): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public utimes(atime: Date, mtime: Date, cb: (e?: ApiError) => void): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public utimesSync(atime: Date, mtime: Date): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n}\n","import api_error = require('./api_error');\n\n/**\n * @class\n */\nexport enum ActionType {\n  // Indicates that the code should not do anything.\n  NOP = 0,\n  // Indicates that the code should throw an exception.\n  THROW_EXCEPTION = 1,\n  // Indicates that the code should truncate the file, but only if it is a file.\n  TRUNCATE_FILE = 2,\n  // Indicates that the code should create the file.\n  CREATE_FILE = 3\n}\n\n/**\n * Represents one of the following file flags. A convenience object.\n *\n * * `'r'` - Open file for reading. An exception occurs if the file does not exist.\n * * `'r+'` - Open file for reading and writing. An exception occurs if the file does not exist.\n * * `'rs'` - Open file for reading in synchronous mode. Instructs the filesystem to not cache writes.\n * * `'rs+'` - Open file for reading and writing, and opens the file in synchronous mode.\n * * `'w'` - Open file for writing. The file is created (if it does not exist) or truncated (if it exists).\n * * `'wx'` - Like 'w' but opens the file in exclusive mode.\n * * `'w+'` - Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).\n * * `'wx+'` - Like 'w+' but opens the file in exclusive mode.\n * * `'a'` - Open file for appending. The file is created if it does not exist.\n * * `'ax'` - Like 'a' but opens the file in exclusive mode.\n * * `'a+'` - Open file for reading and appending. The file is created if it does not exist.\n * * `'ax+'` - Like 'a+' but opens the file in exclusive mode.\n *\n * Exclusive mode ensures that the file path is newly created.\n * @class\n */\nexport class FileFlag {\n  // Contains cached FileMode instances.\n  private static flagCache: { [mode: string]: FileFlag } = {};\n  // Array of valid mode strings.\n  private static validFlagStrs = ['r', 'r+', 'rs', 'rs+', 'w', 'wx', 'w+', 'wx+', 'a', 'ax', 'a+', 'ax+'];\n\n  /**\n   * Get an object representing the given file mode.\n   * @param [String] modeStr The string representing the mode\n   * @return [BrowserFS.FileMode] The FileMode object representing the mode\n   * @throw [BrowserFS.ApiError] when the mode string is invalid\n   */\n  public static getFileFlag(flagStr: string): FileFlag {\n    // Check cache first.\n    if (FileFlag.flagCache.hasOwnProperty(flagStr)) {\n      return FileFlag.flagCache[flagStr];\n    }\n    return FileFlag.flagCache[flagStr] = new FileFlag(flagStr);\n  }\n\n  private flagStr: string;\n  /**\n   * This should never be called directly.\n   * @param [String] modeStr The string representing the mode\n   * @throw [BrowserFS.ApiError] when the mode string is invalid\n   */\n  constructor(flagStr: string) {\n    this.flagStr = flagStr;\n    if (FileFlag.validFlagStrs.indexOf(flagStr) < 0) {\n      throw new api_error.ApiError(api_error.ErrorCode.EINVAL, \"Invalid flag: \" + flagStr);\n    }\n  }\n\n  /**\n   * Get the underlying flag string for this flag.\n   */\n  public getFlagString(): string {\n    return this.flagStr;\n  }\n\n  /**\n   * Returns true if the file is readable.\n   * @return [Boolean]\n   */\n  public isReadable(): boolean {\n    return this.flagStr.indexOf('r') !== -1 || this.flagStr.indexOf('+') !== -1;\n  }\n  /**\n   * Returns true if the file is writeable.\n   * @return [Boolean]\n   */\n  public isWriteable(): boolean {\n    return this.flagStr.indexOf('w') !== -1 || this.flagStr.indexOf('a') !== -1 || this.flagStr.indexOf('+') !== -1;\n  }\n  /**\n   * Returns true if the file mode should truncate.\n   * @return [Boolean]\n   */\n  public isTruncating(): boolean {\n    return this.flagStr.indexOf('w') !== -1;\n  }\n  /**\n   * Returns true if the file is appendable.\n   * @return [Boolean]\n   */\n  public isAppendable(): boolean {\n    return this.flagStr.indexOf('a') !== -1;\n  }\n  /**\n   * Returns true if the file is open in synchronous mode.\n   * @return [Boolean]\n   */\n  public isSynchronous(): boolean {\n    return this.flagStr.indexOf('s') !== -1;\n  }\n  /**\n   * Returns true if the file is open in exclusive mode.\n   * @return [Boolean]\n   */\n  public isExclusive(): boolean {\n    return this.flagStr.indexOf('x') !== -1;\n  }\n  /**\n   * Returns one of the static fields on this object that indicates the\n   * appropriate response to the path existing.\n   * @return [Number]\n   */\n  public pathExistsAction(): ActionType {\n    if (this.isExclusive()) {\n      return ActionType.THROW_EXCEPTION;\n    } else if (this.isTruncating()) {\n      return ActionType.TRUNCATE_FILE;\n    } else {\n      return ActionType.NOP;\n    }\n  }\n  /**\n   * Returns one of the static fields on this object that indicates the\n   * appropriate response to the path not existing.\n   * @return [Number]\n   */\n  public pathNotExistsAction(): ActionType {\n    if ((this.isWriteable() || this.isAppendable()) && this.flagStr !== 'r+') {\n      return ActionType.CREATE_FILE;\n    } else {\n      return ActionType.THROW_EXCEPTION;\n    }\n  }\n}\n","import {ApiError, ErrorCode} from './api_error';\nimport Stats from './node_fs_stats';\nimport file = require('./file');\nimport {FileFlag, ActionType} from './file_flag';\nimport path = require('path');\n\n/**\n * Interface for a filesystem. **All** BrowserFS FileSystems should implement\n * this interface.\n *\n * Below, we denote each API method as **Core**, **Supplemental**, or\n * **Optional**.\n *\n * ### Core Methods\n *\n * **Core** API methods *need* to be implemented for basic read/write\n * functionality.\n *\n * Note that read-only FileSystems can choose to not implement core methods\n * that mutate files or metadata. The default implementation will pass a\n * NOT_SUPPORTED error to the callback.\n *\n * ### Supplemental Methods\n *\n * **Supplemental** API methods do not need to be implemented by a filesystem.\n * The default implementation implements all of the supplemental API methods in\n * terms of the **core** API methods.\n *\n * Note that a file system may choose to implement supplemental methods for\n * efficiency reasons.\n *\n * The code for some supplemental methods was adapted directly from NodeJS's\n * fs.js source code.\n *\n * ### Optional Methods\n *\n * **Optional** API methods provide functionality that may not be available in\n * all filesystems. For example, all symlink/hardlink-related API methods fall\n * under this category.\n *\n * The default implementation will pass a NOT_SUPPORTED error to the callback.\n *\n * ### Argument Assumptions\n *\n * You can assume the following about arguments passed to each API method:\n *\n * * **Every path is an absolute path.** Meaning, `.`, `..`, and other items\n *   are resolved into an absolute form.\n * * **All arguments are present.** Any optional arguments at the Node API level\n *   have been passed in with their default values.\n * * **The callback will reset the stack depth.** When your filesystem calls the\n *   callback with the requested information, it will use `setImmediate` to\n *   reset the JavaScript stack depth before calling the user-supplied callback.\n * @class FileSystem\n */\nexport interface FileSystem {\n  /**\n   * **Optional**: Returns the name of the file system.\n   * @method FileSystem#getName\n   * @return {string}\n   */\n  getName(): string;\n  /**\n   * **Optional**: Passes the following information to the callback:\n   *\n   * * Total number of bytes available on this file system.\n   * * number of free bytes available on this file system.\n   *\n   * @method FileSystem#diskSpace\n   * @todo This info is not available through the Node API. Perhaps we could do a\n   *   polyfill of diskspace.js, or add a new Node API function.\n   * @param {string} path The path to the location that is being queried. Only\n   *   useful for filesystems that support mount points.\n   * @param {FileSystem~diskSpaceCallback} cb\n   */\n  diskSpace(p: string, cb: (total: number, free: number) => any): void;\n  /**\n   * **Core**: Is this filesystem read-only?\n   * @method FileSystem#isReadOnly\n   * @return {boolean} True if this FileSystem is inherently read-only.\n   */\n  isReadOnly(): boolean;\n  /**\n   * **Core**: Does the filesystem support optional symlink/hardlink-related\n   *   commands?\n   * @method FileSystem#supportsLinks\n   * @return {boolean} True if the FileSystem supports the optional\n   *   symlink/hardlink-related commands.\n   */\n  supportsLinks(): boolean;\n  /**\n   * **Core**: Does the filesystem support optional property-related commands?\n   * @method FileSystem#supportsProps\n   * @return {boolean} True if the FileSystem supports the optional\n   *   property-related commands (permissions, utimes, etc).\n   */\n  supportsProps(): boolean;\n  /**\n   * **Core**: Does the filesystem support the optional synchronous interface?\n   * @method FileSystem#supportsSynch\n   * @return {boolean} True if the FileSystem supports synchronous operations.\n   */\n  supportsSynch(): boolean;\n  // **CORE API METHODS**\n  // File or directory operations\n  /**\n   * **Core**: Asynchronous rename. No arguments other than a possible exception\n   * are given to the completion callback.\n   * @method FileSystem#rename\n   * @param {string} oldPath\n   * @param {string} newPath\n   * @param {FileSystem~nodeCallback} cb\n   */\n  rename(oldPath: string, newPath: string, cb: (err?: ApiError) => void): void;\n  /**\n   * **Core**: Synchronous rename.\n   * @method FileSystem#renameSync\n   * @param {string} oldPath\n   * @param {string} newPath\n   */\n  renameSync(oldPath: string, newPath: string): void;\n  /**\n   * **Core**: Asynchronous `stat` or `lstat`.\n   * @method FileSystem#stat\n   * @param {string} path\n   * @param {boolean} isLstat True if this is `lstat`, false if this is regular\n   *   `stat`.\n   * @param {FileSystem~nodeStatsCallback} cb\n   */\n  stat(p: string, isLstat: boolean, cb: (err: ApiError, stat?: Stats) => void): void;\n  /**\n   * **Core**: Synchronous `stat` or `lstat`.\n   * @method FileSystem#statSync\n   * @param {string} path\n   * @param {boolean} isLstat True if this is `lstat`, false if this is regular\n   *   `stat`.\n   * @return {BrowserFS.node.fs.Stats}\n   */\n  statSync(p: string, isLstat: boolean): Stats;\n  // File operations\n  /**\n   * **Core**: Asynchronous file open.\n   * @see http://www.manpagez.com/man/2/open/\n   * @method FileSystem#open\n   * @param {string} path\n   * @param {BrowserFS.FileMode} flags Handles the complexity of the various file\n   *   modes. See its API for more details.\n   * @param {number} mode Mode to use to open the file. Can be ignored if the\n   *   filesystem doesn't support permissions.\n   * @param {FileSystem~fileCallback} cb\n   */\n  open(p: string, flag:FileFlag, mode: number, cb: (err: ApiError, fd?: file.File) => any): void;\n  /**\n   * **Core**: Synchronous file open.\n   * @see http://www.manpagez.com/man/2/open/\n   * @method FileSystem#openSync\n   * @param {string} path\n   * @param {BrowserFS.FileMode} flags Handles the complexity of the various file\n   *   modes. See its API for more details.\n   * @param {number} mode Mode to use to open the file. Can be ignored if the\n   *   filesystem doesn't support permissions.\n   * @return {BrowserFS.File}\n   */\n  openSync(p: string, flag: FileFlag, mode: number): file.File;\n  /**\n   * **Core**: Asynchronous `unlink`.\n   * @method FileSystem#unlink\n   * @param [string] path\n   * @param [FileSystem~nodeCallback] cb\n   */\n  unlink(p: string, cb: Function): void;\n  /**\n   * **Core**: Synchronous `unlink`.\n   * @method FileSystem#unlinkSync\n   * @param {string} path\n   */\n  unlinkSync(p: string): void;\n  // Directory operations\n  /**\n   * **Core**: Asynchronous `rmdir`.\n   * @method FileSystem#rmdir\n   * @param {string} path\n   * @param {FileSystem~nodeCallback} cb\n   */\n  rmdir(p: string, cb: Function): void;\n  /**\n   * **Core**: Synchronous `rmdir`.\n   * @method FileSystem#rmdirSync\n   * @param {string} path\n   */\n  rmdirSync(p: string): void;\n  /**\n   * **Core**: Asynchronous `mkdir`.\n   * @method FileSystem#mkdir\n   * @param {string} path\n   * @param {number?} mode Mode to make the directory using. Can be ignored if\n   *   the filesystem doesn't support permissions.\n   * @param {FileSystem~nodeCallback} cb\n   */\n  mkdir(p: string, mode: number, cb: Function): void;\n  /**\n   * **Core**: Synchronous `mkdir`.\n   * @method FileSystem#mkdirSync\n   * @param {string} path\n   * @param {number} mode Mode to make the directory using. Can be ignored if\n   *   the filesystem doesn't support permissions.\n   */\n  mkdirSync(p: string, mode: number): void;\n  /**\n   * **Core**: Asynchronous `readdir`. Reads the contents of a directory.\n   *\n   * The callback gets two arguments `(err, files)` where `files` is an array of\n   * the names of the files in the directory excluding `'.'` and `'..'`.\n   * @method FileSystem#readdir\n   * @param {string} path\n   * @param {FileSystem~readdirCallback} cb\n   */\n  readdir(p: string, cb: (err: ApiError, files?: string[]) => void): void;\n  /**\n   * **Core**: Synchronous `readdir`. Reads the contents of a directory.\n   * @method FileSystem#readdirSync\n   * @param {string} path\n   * @return {string[]}\n   */\n  readdirSync(p: string): string[];\n  // **SUPPLEMENTAL INTERFACE METHODS**\n  // File or directory operations\n  /**\n   * **Supplemental**: Test whether or not the given path exists by checking with\n   * the file system. Then call the callback argument with either true or false.\n   * @method FileSystem#exists\n   * @param {string} path\n   * @param {FileSystem~existsCallback} cb\n   */\n  exists(p: string, cb: (exists: boolean) => void): void;\n  /**\n   * **Supplemental**: Test whether or not the given path exists by checking with\n   * the file system.\n   * @method FileSystem#existsSync\n   * @param {string} path\n   * @return {boolean}\n   */\n  existsSync(p: string): boolean;\n  /**\n   * **Supplemental**: Asynchronous `realpath`. The callback gets two arguments\n   * `(err, resolvedPath)`.\n   *\n   * Note that the Node API will resolve `path` to an absolute path.\n   * @method FileSystem#realpath\n   * @param {string} path\n   * @param {Object} cache An object literal of mapped paths that can be used to\n   *   force a specific path resolution or avoid additional `fs.stat` calls for\n   *   known real paths. If not supplied by the user, it'll be an empty object.\n   * @param {FileSystem~pathCallback} cb\n   */\n  realpath(p: string, cache: {[path: string]: string}, cb: (err: ApiError, resolvedPath?: string) => any): void;\n  /**\n   * **Supplemental**: Synchronous `realpath`.\n   *\n   * Note that the Node API will resolve `path` to an absolute path.\n   * @method FileSystem#realpathSync\n   * @param {string} path\n   * @param {Object} cache An object literal of mapped paths that can be used to\n   *   force a specific path resolution or avoid additional `fs.stat` calls for\n   *   known real paths. If not supplied by the user, it'll be an empty object.\n   * @return {string}\n   */\n  realpathSync(p: string, cache: {[path: string]: string}): string;\n  // File operations\n  /**\n   *\n   * **Supplemental**: Asynchronous `truncate`.\n   * @method FileSystem#truncate\n   * @param {string} path\n   * @param {number} len\n   * @param {FileSystem~nodeCallback} cb\n   */\n  truncate(p: string, len: number, cb: Function): void;\n  /**\n   * **Supplemental**: Synchronous `truncate`.\n   * @method FileSystem#truncateSync\n   * @param {string} path\n   * @param {number} len\n   */\n  truncateSync(p: string, len: number): void;\n  /**\n   * **Supplemental**: Asynchronously reads the entire contents of a file.\n   * @method FileSystem#readFile\n   * @param {string} filename\n   * @param {string} encoding If non-null, the file's contents should be decoded\n   *   into a string using that encoding. Otherwise, if encoding is null, fetch\n   *   the file's contents as a Buffer.\n   * @param {BrowserFS.FileMode} flag\n   * @param {FileSystem~readCallback} cb If no encoding is specified, then the\n   *   raw buffer is returned.\n   */\n  readFile(fname: string, encoding: string, flag: FileFlag, cb: (err: ApiError, data?: any) => void): void;\n  /**\n   * **Supplemental**: Synchronously reads the entire contents of a file.\n   * @method FileSystem#readFileSync\n   * @param {string} filename\n   * @param {string} encoding If non-null, the file's contents should be decoded\n   *   into a string using that encoding. Otherwise, if encoding is null, fetch\n   *   the file's contents as a Buffer.\n   * @param {BrowserFS.FileMode} flag\n   * @return {(string|BrowserFS.Buffer)}\n   */\n  readFileSync(fname: string, encoding: string, flag: FileFlag): any;\n  /**\n   * **Supplemental**: Asynchronously writes data to a file, replacing the file\n   * if it already exists.\n   *\n   * The encoding option is ignored if data is a buffer.\n   * @method FileSystem#writeFile\n   * @param {string} filename\n   * @param {(string | BrowserFS.node.Buffer)} data\n   * @param {string} encoding\n   * @param {BrowserFS.FileMode} flag\n   * @param {number} mode\n   * @param {FileSystem~nodeCallback} cb\n   */\n  writeFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cb: (err: ApiError) => void): void;\n  /**\n   * **Supplemental**: Synchronously writes data to a file, replacing the file\n   * if it already exists.\n   *\n   * The encoding option is ignored if data is a buffer.\n   * @method FileSystem#writeFileSync\n   * @param {string} filename\n   * @param {(string | BrowserFS.node.Buffer)} data\n   * @param {string} encoding\n   * @param {BrowserFS.FileMode} flag\n   * @param {number} mode\n   */\n  writeFileSync(fname: string, data: any, encoding: string, flag: FileFlag, mode: number): void;\n  /**\n   * **Supplemental**: Asynchronously append data to a file, creating the file if\n   * it not yet exists.\n   * @method FileSystem#appendFile\n   * @param {string} filename\n   * @param {(string | BrowserFS.node.Buffer)} data\n   * @param {string} encoding\n   * @param {BrowserFS.FileMode} flag\n   * @param {number} mode\n   * @param {FileSystem~nodeCallback} cb\n   */\n  appendFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cb: (err: ApiError) => void): void;\n  /**\n   * **Supplemental**: Synchronously append data to a file, creating the file if\n   * it not yet exists.\n   * @method FileSystem#appendFileSync\n   * @param {string} filename\n   * @param {(string | BrowserFS.node.Buffer)} data\n   * @param {string} encoding\n   * @param {BrowserFS.FileMode} flag\n   * @param {number} mode\n   */\n  appendFileSync(fname: string, data: any, encoding: string, flag: FileFlag, mode: number): void;\n  // **OPTIONAL INTERFACE METHODS**\n  // Property operations\n  // This isn't always possible on some filesystem types (e.g. Dropbox).\n  /**\n   * **Optional**: Asynchronous `chmod` or `lchmod`.\n   * @method FileSystem#chmod\n   * @param {string} path\n   * @param {boolean} isLchmod `True` if `lchmod`, false if `chmod`. Has no\n   *   bearing on result if links aren't supported.\n   * @param {number} mode\n   * @param {FileSystem~nodeCallback} cb\n   */\n  chmod(p: string, isLchmod: boolean, mode: number, cb: Function): void;\n  /**\n   * **Optional**: Synchronous `chmod` or `lchmod`.\n   * @method FileSystem#chmodSync\n   * @param {string} path\n   * @param {boolean} isLchmod `True` if `lchmod`, false if `chmod`. Has no\n   *   bearing on result if links aren't supported.\n   * @param {number} mode\n   */\n  chmodSync(p: string, isLchmod: boolean, mode: number): void;\n  /**\n   * **Optional**: Asynchronous `chown` or `lchown`.\n   * @method FileSystem#chown\n   * @param {string} path\n   * @param {boolean} isLchown `True` if `lchown`, false if `chown`. Has no\n   *   bearing on result if links aren't supported.\n   * @param {number} uid\n   * @param {number} gid\n   * @param {FileSystem~nodeCallback} cb\n   */\n  chown(p: string, isLchown: boolean, uid: number, gid: number, cb: Function): void;\n  /**\n   * **Optional**: Synchronous `chown` or `lchown`.\n   * @method FileSystem#chownSync\n   * @param {string} path\n   * @param {boolean} isLchown `True` if `lchown`, false if `chown`. Has no\n   *   bearing on result if links aren't supported.\n   * @param {number} uid\n   * @param {number} gid\n   */\n  chownSync(p: string, isLchown: boolean, uid: number, gid: number): void;\n  /**\n   * **Optional**: Change file timestamps of the file referenced by the supplied\n   * path.\n   * @method FileSystem#utimes\n   * @param {string} path\n   * @param {Date} atime\n   * @param {Date} mtime\n   * @param {FileSystem~nodeCallback} cb\n   */\n  utimes(p: string, atime: Date, mtime: Date, cb: Function): void;\n  /**\n   * **Optional**: Change file timestamps of the file referenced by the supplied\n   * path.\n   * @method FileSystem#utimesSync\n   * @param {string} path\n   * @param {Date} atime\n   * @param {Date} mtime\n   */\n  utimesSync(p: string, atime: Date, mtime: Date): void;\n  // Symlink operations\n  // Symlinks aren't always supported.\n  /**\n   * **Optional**: Asynchronous `link`.\n   * @method FileSystem#link\n   * @param {string} srcpath\n   * @param {string} dstpath\n   * @param {FileSystem~nodeCallback} cb\n   */\n  link(srcpath: string, dstpath: string, cb: Function): void;\n  /**\n   * **Optional**: Synchronous `link`.\n   * @method FileSystem#linkSync\n   * @param {string} srcpath\n   * @param {string} dstpath\n   */\n  linkSync(srcpath: string, dstpath: string): void;\n  /**\n   * **Optional**: Asynchronous `symlink`.\n   * @method FileSystem#symlink\n   * @param {string} srcpath\n   * @param {string} dstpath\n   * @param {string} type can be either `'dir'` or `'file'`\n   * @param {FileSystem~nodeCallback} cb\n   */\n  symlink(srcpath: string, dstpath: string, type: string, cb: Function): void;\n  /**\n   * **Optional**: Synchronous `symlink`.\n   * @method FileSystem#symlinkSync\n   * @param {string} srcpath\n   * @param {string} dstpath\n   * @param {string} type can be either `'dir'` or `'file'`\n   */\n  symlinkSync(srcpath: string, dstpath: string, type: string): void;\n  /**\n   * **Optional**: Asynchronous readlink.\n   * @method FileSystem#readlink\n   * @param {string} path\n   * @param {FileSystem~pathCallback} callback\n   */\n  readlink(p: string, cb: Function): void;\n  /**\n   * **Optional**: Synchronous readlink.\n   * @method FileSystem#readlinkSync\n   * @param {string} path\n   */\n  readlinkSync(p: string): string;\n}\n\n/**\n * Contains typings for static functions on the file system constructor.\n */\nexport interface FileSystemConstructor {\n  /**\n   * **Core**: Returns 'true' if this filesystem is available in the current\n   * environment. For example, a `localStorage`-backed filesystem will return\n   * 'false' if the browser does not support that API.\n   *\n   * Defaults to 'false', as the FileSystem base class isn't usable alone.\n   * @method FileSystem.isAvailable\n   * @return {boolean}\n   */\n  isAvailable(): boolean;\n}\n\n/**\n * Basic filesystem class. Most filesystems should extend this class, as it\n * provides default implementations for a handful of methods.\n */\nexport class BaseFileSystem {\n  public supportsLinks(): boolean {\n    return false;\n  }\n  public diskSpace(p: string, cb: (total: number, free: number) => any): void {\n    cb(0, 0);\n  }\n  /**\n   * Opens the file at path p with the given flag. The file must exist.\n   * @param p The path to open.\n   * @param flag The flag to use when opening the file.\n   */\n  public openFile(p: string, flag: FileFlag, cb: (e: ApiError, file?: file.File) => void): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  /**\n   * Create the file at path p with the given mode. Then, open it with the given\n   * flag.\n   */\n  public createFile(p: string, flag: FileFlag, mode: number, cb: (e: ApiError, file?: file.File) => void): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public open(p: string, flag:FileFlag, mode: number, cb: (err: ApiError, fd?: file.BaseFile) => any): void {\n    var must_be_file = (e: ApiError, stats?: Stats): void => {\n      if (e) {\n        // File does not exist.\n        switch (flag.pathNotExistsAction()) {\n          case ActionType.CREATE_FILE:\n            // Ensure parent exists.\n            return this.stat(path.dirname(p), false, (e: ApiError, parentStats?: Stats) => {\n              if (e) {\n                cb(e);\n              } else if (!parentStats.isDirectory()) {\n                cb(ApiError.ENOTDIR(path.dirname(p)));\n              } else {\n                this.createFile(p, flag, mode, cb);\n              }\n            });\n          case ActionType.THROW_EXCEPTION:\n            return cb(ApiError.ENOENT(p));\n          default:\n            return cb(new ApiError(ErrorCode.EINVAL, 'Invalid FileFlag object.'));\n        }\n      } else {\n        // File exists.\n        if (stats.isDirectory()) {\n          return cb(ApiError.EISDIR(p));\n        }\n        switch (flag.pathExistsAction()) {\n          case ActionType.THROW_EXCEPTION:\n            return cb(ApiError.EEXIST(p));\n          case ActionType.TRUNCATE_FILE:\n            // NOTE: In a previous implementation, we deleted the file and\n            // re-created it. However, this created a race condition if another\n            // asynchronous request was trying to read the file, as the file\n            // would not exist for a small period of time.\n            return this.openFile(p, flag, (e: ApiError, fd?: file.File): void => {\n              if (e) {\n                cb(e);\n              } else {\n                fd.truncate(0, () => {\n                  fd.sync(() => {\n                    cb(null, fd);\n                  });\n                });\n              }\n            });\n          case ActionType.NOP:\n            return this.openFile(p, flag, cb);\n          default:\n            return cb(new ApiError(ErrorCode.EINVAL, 'Invalid FileFlag object.'));\n        }\n      }\n    };\n    this.stat(p, false, must_be_file);\n  }\n  public rename(oldPath: string, newPath: string, cb: (err?: ApiError) => void): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public renameSync(oldPath: string, newPath: string): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public stat(p: string, isLstat: boolean, cb: (err: ApiError, stat?: Stats) => void): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public statSync(p: string, isLstat: boolean): Stats {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  /**\n   * Opens the file at path p with the given flag. The file must exist.\n   * @param p The path to open.\n   * @param flag The flag to use when opening the file.\n   * @return A File object corresponding to the opened file.\n   */\n  public openFileSync(p: string, flag: FileFlag): file.File {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  /**\n   * Create the file at path p with the given mode. Then, open it with the given\n   * flag.\n   */\n  public createFileSync(p: string, flag: FileFlag, mode: number): file.File {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public openSync(p: string, flag: FileFlag, mode: number): file.File {\n    // Check if the path exists, and is a file.\n    var stats: Stats;\n    try {\n      stats = this.statSync(p, false);\n    } catch (e) {\n      // File does not exist.\n      switch (flag.pathNotExistsAction()) {\n        case ActionType.CREATE_FILE:\n          // Ensure parent exists.\n          var parentStats = this.statSync(path.dirname(p), false);\n          if (!parentStats.isDirectory()) {\n            throw ApiError.ENOTDIR(path.dirname(p));\n          }\n          return this.createFileSync(p, flag, mode);\n        case ActionType.THROW_EXCEPTION:\n          throw ApiError.ENOENT(p);\n        default:\n          throw new ApiError(ErrorCode.EINVAL, 'Invalid FileFlag object.');\n      }\n    }\n\n    // File exists.\n    if (stats.isDirectory()) {\n      throw ApiError.EISDIR(p);\n    }\n    switch (flag.pathExistsAction()) {\n      case ActionType.THROW_EXCEPTION:\n        throw ApiError.EEXIST(p);\n      case ActionType.TRUNCATE_FILE:\n        // Delete file.\n        this.unlinkSync(p);\n        // Create file. Use the same mode as the old file.\n        // Node itself modifies the ctime when this occurs, so this action\n        // will preserve that behavior if the underlying file system\n        // supports those properties.\n        return this.createFileSync(p, flag, stats.mode);\n      case ActionType.NOP:\n        return this.openFileSync(p, flag);\n      default:\n        throw new ApiError(ErrorCode.EINVAL, 'Invalid FileFlag object.');\n    }\n  }\n  public unlink(p: string, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public unlinkSync(p: string): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public rmdir(p: string, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public rmdirSync(p: string): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public mkdir(p: string, mode: number, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public mkdirSync(p: string, mode: number): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public readdir(p: string, cb: (err: ApiError, files?: string[]) => void): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public readdirSync(p: string): string[] {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public exists(p: string, cb: (exists: boolean) => void): void {\n    this.stat(p, null, function(err) {\n      cb(err == null);\n    });\n  }\n  public existsSync(p: string): boolean {\n    try {\n      this.statSync(p, true);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  public realpath(p: string, cache: {[path: string]: string}, cb: (err: ApiError, resolvedPath?: string) => any): void {\n    if (this.supportsLinks()) {\n      // The path could contain symlinks. Split up the path,\n      // resolve any symlinks, return the resolved string.\n      var splitPath = p.split(path.sep);\n      // TODO: Simpler to just pass through file, find sep and such.\n      for (var i = 0; i < splitPath.length; i++) {\n        var addPaths = splitPath.slice(0, i + 1);\n        splitPath[i] = path.join.apply(null, addPaths);\n      }\n    } else {\n      // No symlinks. We just need to verify that it exists.\n      this.exists(p, function(doesExist) {\n        if (doesExist) {\n          cb(null, p);\n        } else {\n          cb(ApiError.ENOENT(p));\n        }\n      });\n    }\n  }\n  public realpathSync(p: string, cache: {[path: string]: string}): string {\n    if (this.supportsLinks()) {\n      // The path could contain symlinks. Split up the path,\n      // resolve any symlinks, return the resolved string.\n      var splitPath = p.split(path.sep);\n      // TODO: Simpler to just pass through file, find sep and such.\n      for (var i = 0; i < splitPath.length; i++) {\n        var addPaths = splitPath.slice(0, i + 1);\n        splitPath[i] = path.join.apply(null, addPaths);\n      }\n    } else {\n      // No symlinks. We just need to verify that it exists.\n      if (this.existsSync(p)) {\n        return p;\n      } else {\n        throw ApiError.ENOENT(p);\n      }\n    }\n  }\n  public truncate(p: string, len: number, cb: Function): void {\n    this.open(p, FileFlag.getFileFlag('r+'), 0x1a4, (function(er: ApiError, fd?: file.File) {\n      if (er) {\n        return cb(er);\n      }\n      fd.truncate(len, (function(er: any) {\n        fd.close((function(er2: any) {\n          cb(er || er2);\n        }));\n      }));\n    }));\n  }\n  public truncateSync(p: string, len: number): void {\n    var fd = this.openSync(p, FileFlag.getFileFlag('r+'), 0x1a4);\n    // Need to safely close FD, regardless of whether or not truncate succeeds.\n    try {\n      fd.truncateSync(len);\n    } catch (e) {\n      throw e;\n    } finally {\n      fd.closeSync();\n    }\n  }\n  public readFile(fname: string, encoding: string, flag: FileFlag, cb: (err: ApiError, data?: any) => void): void {\n    // Wrap cb in file closing code.\n    var oldCb = cb;\n    // Get file.\n    this.open(fname, flag, 0x1a4, function(err: ApiError, fd?: file.File) {\n      if (err) {\n        return cb(err);\n      }\n      cb = function(err: ApiError, arg?: file.File) {\n        fd.close(function(err2: any) {\n          if (err == null) {\n            err = err2;\n          }\n          return oldCb(err, arg);\n        });\n      };\n      fd.stat(function(err: ApiError, stat?: Stats) {\n        if (err != null) {\n          return cb(err);\n        }\n        // Allocate buffer.\n        var buf = new Buffer(stat.size);\n        fd.read(buf, 0, stat.size, 0, function(err) {\n          if (err != null) {\n            return cb(err);\n          } else if (encoding === null) {\n            return cb(err, buf);\n          }\n          try {\n            cb(null, buf.toString(encoding));\n          } catch (e) {\n            cb(e);\n          }\n        });\n      });\n    });\n  }\n  public readFileSync(fname: string, encoding: string, flag: FileFlag): any {\n    // Get file.\n    var fd = this.openSync(fname, flag, 0x1a4);\n    try {\n      var stat = fd.statSync();\n      // Allocate buffer.\n      var buf = new Buffer(stat.size);\n      fd.readSync(buf, 0, stat.size, 0);\n      fd.closeSync();\n      if (encoding === null) {\n        return buf;\n      }\n      return buf.toString(encoding);\n    } finally {\n      fd.closeSync();\n    }\n  }\n  public writeFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cb: (err: ApiError) => void): void {\n    // Wrap cb in file closing code.\n    var oldCb = cb;\n    // Get file.\n    this.open(fname, flag, 0x1a4, function(err: ApiError, fd?:file.File) {\n      if (err != null) {\n        return cb(err);\n      }\n      cb = function(err: ApiError) {\n        fd.close(function(err2: any) {\n          oldCb(err != null ? err : err2);\n        });\n      };\n\n      try {\n        if (typeof data === 'string') {\n          data = new Buffer(data, encoding);\n        }\n      } catch (e) {\n        return cb(e);\n      }\n      // Write into file.\n      fd.write(data, 0, data.length, 0, cb);\n    });\n  }\n  public writeFileSync(fname: string, data: any, encoding: string, flag: FileFlag, mode: number): void {\n    // Get file.\n    var fd = this.openSync(fname, flag, mode);\n    try {\n      if (typeof data === 'string') {\n        data = new Buffer(data, encoding);\n      }\n      // Write into file.\n      fd.writeSync(data, 0, data.length, 0);\n    } finally {\n      fd.closeSync();\n    }\n  }\n  public appendFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cb: (err: ApiError) => void): void {\n    // Wrap cb in file closing code.\n    var oldCb = cb;\n    this.open(fname, flag, mode, function(err: ApiError, fd?: file.File) {\n      if (err != null) {\n        return cb(err);\n      }\n      cb = function(err: ApiError) {\n        fd.close(function(err2: any) {\n          oldCb(err != null ? err : err2);\n        });\n      };\n      if (typeof data === 'string') {\n        data = new Buffer(data, encoding);\n      }\n      fd.write(data, 0, data.length, null, cb);\n    });\n  }\n  public appendFileSync(fname: string, data: any, encoding: string, flag: FileFlag, mode: number): void {\n    var fd = this.openSync(fname, flag, mode);\n    try {\n      if (typeof data === 'string') {\n        data = new Buffer(data, encoding);\n      }\n      fd.writeSync(data, 0, data.length, null);\n    } finally {\n      fd.closeSync();\n    }\n  }\n  public chmod(p: string, isLchmod: boolean, mode: number, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public chmodSync(p: string, isLchmod: boolean, mode: number) {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public chown(p: string, isLchown: boolean, uid: number, gid: number, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public chownSync(p: string, isLchown: boolean, uid: number, gid: number): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public utimes(p: string, atime: Date, mtime: Date, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public utimesSync(p: string, atime: Date, mtime: Date): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public link(srcpath: string, dstpath: string, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public linkSync(srcpath: string, dstpath: string): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public symlink(srcpath: string, dstpath: string, type: string, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public symlinkSync(srcpath: string, dstpath: string, type: string): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n  public readlink(p: string, cb: Function): void {\n    cb(new ApiError(ErrorCode.ENOTSUP));\n  }\n  public readlinkSync(p: string): string {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n}\n\n/**\n * Implements the asynchronous API in terms of the synchronous API.\n * @class SynchronousFileSystem\n */\nexport class SynchronousFileSystem extends BaseFileSystem {\n  public supportsSynch(): boolean {\n    return true;\n  }\n\n  public rename(oldPath: string, newPath: string, cb: Function): void {\n    try {\n      this.renameSync(oldPath, newPath);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public stat(p: string, isLstat: boolean, cb: Function): void {\n    try {\n      cb(null, this.statSync(p, isLstat));\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public open(p: string, flags: FileFlag, mode: number, cb: Function): void {\n    try {\n      cb(null, this.openSync(p, flags, mode));\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public unlink(p: string, cb: Function): void {\n    try {\n      this.unlinkSync(p);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public rmdir(p: string, cb: Function): void {\n    try {\n      this.rmdirSync(p);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public mkdir(p: string, mode: number, cb: Function): void {\n    try {\n      this.mkdirSync(p, mode);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public readdir(p: string, cb: Function): void {\n    try {\n      cb(null, this.readdirSync(p));\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public chmod(p: string, isLchmod: boolean, mode: number, cb: Function): void {\n    try {\n      this.chmodSync(p, isLchmod, mode);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public chown(p: string, isLchown: boolean, uid: number, gid: number, cb: Function): void {\n    try {\n      this.chownSync(p, isLchown, uid, gid);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public utimes(p: string, atime: Date, mtime: Date, cb: Function): void {\n    try {\n      this.utimesSync(p, atime, mtime);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public link(srcpath: string, dstpath: string, cb: Function): void {\n    try {\n      this.linkSync(srcpath, dstpath);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public symlink(srcpath: string, dstpath: string, type: string, cb: Function): void {\n    try {\n      this.symlinkSync(srcpath, dstpath, type);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public readlink(p: string, cb: Function): void {\n    try {\n      cb(null, this.readlinkSync(p));\n    } catch (e) {\n      cb(e);\n    }\n  }\n}\n","/**\n * Exports the global scope variable.\n * In the main browser thread, this is \"window\".\n * In a WebWorker, this is \"self\".\n * In Node, this is \"global\".\n */\ndeclare var global: any;\nvar toExport: any;\nif (typeof(window) !== 'undefined') {\n  toExport = window;\n} else if (typeof(self) !== 'undefined') {\n  toExport = self;\n} else {\n  toExport = global;\n}\nexport = toExport;","import {default as FS, FSModule} from './FS';\nimport {FileSystem} from './file_system';\nimport {ApiError} from './api_error';\nimport Stats from './node_fs_stats';\n\n// Manually export the individual public functions of fs.\n// Required because some code will invoke functions off of the module.\n// e.g.:\n// let writeFile = fs.writeFile;\n// writeFile(...)\n\nlet fs = new FS();\nlet _fsMock: FSModule = <any> {};\n\nlet FSProto = FS.prototype;\nObject.keys(FSProto).forEach((key) => {\n  if (typeof fs[key] === 'function') {\n    _fsMock[key] = function() {\n      return (<Function> fs[key]).apply(fs, arguments);\n    };\n  } else {\n    _fsMock[key] = fs[key];\n  }\n});\n\n_fsMock['changeFSModule'] = function(newFs: FS): void {\n  fs = newFs;\n}\n_fsMock['getFSModule'] = function(): FS {\n  return fs;\n}\n_fsMock['_wrapCb'] = function(cb: Function, numArgs: number): Function {\n  return fs._wrapCb(cb, numArgs);\n};\n_fsMock['FS'] = FS;\n\nexport = _fsMock;\n","import fs = require('fs');\nimport file = require('./file');\n\n/**\n * Indicates the type of the given file. Applied to 'mode'.\n */\nexport enum FileType {\n  FILE = 0x8000,\n  DIRECTORY = 0x4000,\n  SYMLINK = 0xA000\n}\n\n/**\n * Emulation of Node's `fs.Stats` object.\n *\n * Attribute descriptions are from `man 2 stat'\n * @see http://nodejs.org/api/fs.html#fs_class_fs_stats\n * @see http://man7.org/linux/man-pages/man2/stat.2.html\n * @class\n */\nexport default class Stats implements fs.Stats {\n  public blocks: number;\n  /**\n   * UNSUPPORTED ATTRIBUTES\n   * I assume no one is going to need these details, although we could fake\n   * appropriate values if need be.\n   */\n  // ID of device containing file\n  public dev: number = 0;\n  // inode number\n  public ino: number = 0;\n  // device ID (if special file)\n  public rdev: number = 0;\n  // number of hard links\n  public nlink: number = 1;\n  // blocksize for file system I/O\n  public blksize: number = 4096;\n  // @todo Maybe support these? atm, it's a one-user filesystem.\n  // user ID of owner\n  public uid: number = 0;\n  // group ID of owner\n  public gid: number = 0;\n  // time file was created (currently unsupported)\n  public birthtime: Date = new Date(0);\n  // XXX: Some file systems stash data on stats objects.\n  public file_data: NodeBuffer = null;\n\n  /**\n   * Provides information about a particular entry in the file system.\n   * @param [Number] item_type type of the item (FILE, DIRECTORY, SYMLINK, or SOCKET)\n   * @param [Number] size Size of the item in bytes. For directories/symlinks,\n   *   this is normally the size of the struct that represents the item.\n   * @param [Number] mode Unix-style file mode (e.g. 0o644)\n   * @param [Date?] atime time of last access\n   * @param [Date?] mtime time of last modification\n   * @param [Date?] ctime time of creation\n   */\n  constructor(\n    item_type: FileType,\n    public size: number,\n    public mode?: number,\n    public atime: Date = new Date(),\n    public mtime: Date = new Date(),\n    public ctime: Date = new Date()) {\n    if (this.mode == null) {\n      switch(item_type) {\n        case FileType.FILE:\n          this.mode = 0x1a4;\n          break;\n        case FileType.DIRECTORY:\n        default:\n          this.mode = 0x1ff;\n      }\n    }\n    // number of 512B blocks allocated\n    this.blocks = Math.ceil(size / 512);\n    // Check if mode also includes top-most bits, which indicate the file's\n    // type.\n    if (this.mode < 0x1000) {\n      this.mode |= item_type;\n    }\n  }\n\n  public toBuffer(): Buffer {\n    var buffer = new Buffer(32);\n    buffer.writeUInt32LE(this.size, 0);\n    buffer.writeUInt32LE(this.mode, 4);\n    buffer.writeDoubleLE(this.atime.getTime(), 8);\n    buffer.writeDoubleLE(this.mtime.getTime(), 16);\n    buffer.writeDoubleLE(this.ctime.getTime(), 24);\n    return buffer;\n  }\n\n  public static fromBuffer(buffer: Buffer): Stats {\n    var size = buffer.readUInt32LE(0),\n      mode = buffer.readUInt32LE(4),\n      atime = buffer.readDoubleLE(8),\n      mtime = buffer.readDoubleLE(16),\n      ctime = buffer.readDoubleLE(24);\n\n    return new Stats(mode & 0xF000, size, mode & 0xFFF, new Date(atime), new Date(mtime), new Date(ctime));\n  }\n\n  /**\n   * **Nonstandard**: Clone the stats object.\n   * @return [BrowserFS.node.fs.Stats]\n   */\n  public clone(): Stats {\n    return new Stats(this.mode & 0xF000, this.size, this.mode & 0xFFF, this.atime, this.mtime, this.ctime);\n  }\n\n  /**\n   * @return [Boolean] True if this item is a file.\n   */\n  public isFile(): boolean {\n    return (this.mode & 0xF000) === FileType.FILE;\n  }\n\n  /**\n   * @return [Boolean] True if this item is a directory.\n   */\n  public isDirectory(): boolean {\n    return (this.mode & 0xF000) === FileType.DIRECTORY;\n  }\n\n  /**\n   * @return [Boolean] True if this item is a symbolic link (only valid through lstat)\n   */\n  public isSymbolicLink(): boolean {\n    return (this.mode & 0xF000) === FileType.SYMLINK;\n  }\n\n  /**\n   * Change the mode of the file. We use this helper function to prevent messing\n   * up the type of the file, which is encoded in mode.\n   */\n  public chmod(mode: number): void {\n    this.mode = (this.mode & 0xF000) | mode;\n  }\n\n  // We don't support the following types of files.\n\n  public isSocket(): boolean {\n    return false;\n  }\n\n  public isBlockDevice(): boolean {\n    return false;\n  }\n\n  public isCharacterDevice(): boolean {\n    return false;\n  }\n\n  public isFIFO(): boolean {\n    return false;\n  }\n}\n","/**\n * Grab bag of utility functions used across the code.\n */\nimport {FileSystem} from './file_system';\nimport path = require('path');\n\nconst SUPPORTS_TYPED_ARRAYS = typeof(ArrayBuffer) !== 'undefined';\n\n/**\n * Checks for any IE version, including IE11 which removed MSIE from the\n * userAgent string.\n */\nexport var isIE: boolean = typeof navigator !== \"undefined\" && (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase()) != null || navigator.userAgent.indexOf('Trident') !== -1);\n\n/**\n * Check if we're in a web worker.\n */\nexport var isWebWorker: boolean = typeof window === \"undefined\";\n\nexport interface Arrayish<T> {\n  [idx: number]: T;\n  length: number;\n}\n\n/**\n * Synchronous recursive makedir.\n */\nexport function mkdirpSync(p: string, mode: number, fs: FileSystem): void {\n  if (!fs.existsSync(p)) {\n    mkdirpSync(path.dirname(p), mode, fs);\n    fs.mkdirSync(p, mode);\n  }\n}\n\n/**\n * Converts a buffer into an array buffer. Attempts to do so in a\n * zero-copy manner, e.g. the array references the same memory.\n */\nexport function buffer2ArrayBuffer(buff: Buffer): ArrayBuffer {\n  var u8 = buffer2Uint8array(buff),\n    u8offset = u8.byteOffset,\n    u8Len = u8.byteLength;\n  if (u8offset === 0 && u8Len === u8.buffer.byteLength) {\n    return u8.buffer;\n  } else {\n    return u8.buffer.slice(u8offset, u8offset + u8Len)\n  }\n}\n\n/**\n * Converts a buffer into a Uint8Array. Attempts to do so in a\n * zero-copy manner, e.g. the array references the same memory.\n */\nexport function buffer2Uint8array(buff: Buffer): Uint8Array {\n  if (buff['toUint8Array']) {\n    return (<any> buff).toUint8Array();\n  } else if (buff instanceof Uint8Array) {\n    // Node v4.0 buffers *are* Uint8Arrays.\n    return <any> buff;\n  } else {\n    // Uint8Arrays can be constructed from arrayish numbers.\n    // At this point, we assume this isn't a BFS array.\n    return new Uint8Array(buff);\n  }\n}\n\n/**\n * Converts the given buffer into a Uint8 arrayish form. Attempts\n * to be zero-copy.\n *\n * Required for BrowserFS buffers, which do not support indexing.\n */\nexport function buffer2Arrayish(buff: Buffer): Arrayish<number> {\n  if (typeof(buff[0]) === 'number') {\n    return buff;\n  } else if (SUPPORTS_TYPED_ARRAYS) {\n    return buffer2Uint8array(buff);\n  } else {\n    return buff.toJSON().data;\n  }\n}\n\n/**\n * Converts the given arrayish object into a Buffer. Attempts to\n * be zero-copy.\n */\nexport function arrayish2Buffer(arr: Arrayish<number>): Buffer {\n  if (SUPPORTS_TYPED_ARRAYS && arr instanceof Uint8Array) {\n    return uint8Array2Buffer(arr);\n  } else if (arr instanceof Buffer) {\n    return arr;\n  } else {\n    return new Buffer(<number[]> arr);\n  }\n}\n\n/**\n * Converts the given Uint8Array into a Buffer. Attempts to be zero-copy.\n */\nexport function uint8Array2Buffer(u8: Uint8Array): Buffer {\n  if (u8.byteOffset === 0 && u8.byteLength === u8.buffer.byteLength) {\n    return arrayBuffer2Buffer(u8);\n  } else {\n    return new Buffer(u8);\n  }\n}\n\n/**\n * Converts the given array buffer into a Buffer. Attempts to be\n * zero-copy.\n */\nexport function arrayBuffer2Buffer(ab: ArrayBuffer): Buffer {\n  try {\n    // Works in BFS and Node v4.2.\n    return new Buffer(<any> ab);\n  } catch (e) {\n    // I believe this copies, but there's no avoiding it in Node < v4.2\n    return new Buffer(new Uint8Array(ab));\n  }\n}\n\n// Polyfill for Uint8Array.prototype.slice.\n// Safari and some other browsers do not define it.\nif (typeof(ArrayBuffer) !== 'undefined' && typeof(Uint8Array) !== 'undefined') {\n  if (!Uint8Array.prototype['slice']) {\n    Uint8Array.prototype.slice = function(start: number = 0, end: number = this.length): Uint8Array {\n      let self: Uint8Array = this;\n      if (start < 0) {\n        start = this.length + start;\n        if (start < 0) {\n          start = 0;\n        }\n      }\n      if (end < 0) {\n        end = this.length + end;\n        if (end < 0) {\n          end = 0;\n        }\n      }\n      if (end < start) {\n        end = start;\n      }\n      return new Uint8Array(self.buffer, self.byteOffset + start, end - start);\n    };\n  }\n}\n\n/**\n * Copies a slice of the given buffer\n */\nexport function copyingSlice(buff: Buffer, start: number = 0, end = buff.length): Buffer {\n  if (start < 0 || end < 0 || end > buff.length || start > end) {\n    throw new TypeError(`Invalid slice bounds on buffer of length ${buff.length}: [${start}, ${end}]`);\n  }\n  if (buff.length === 0) {\n    // Avoid s0 corner case in ArrayBuffer case.\n    return new Buffer(0);\n  } else if (SUPPORTS_TYPED_ARRAYS) {\n    var u8 = buffer2Uint8array(buff),\n      s0 = buff.readUInt8(0),\n      newS0 = (s0 + 1) % 0xFF;\n\n    buff.writeUInt8(newS0, 0);\n    if (u8[0] === newS0) {\n      // Same memory. Revert & copy.\n      u8[0] = s0;\n      return uint8Array2Buffer(u8.slice(start, end));\n    } else {\n      // Revert.\n      buff.writeUInt8(s0, 0);\n      return uint8Array2Buffer(u8.subarray(start, end));\n    }\n  } else {\n    var buffSlice = new Buffer(end - start);\n    buff.copy(buffSlice, 0, start, end);\n    return buffSlice;\n  }\n}\n","/**\n * Defines an Emscripten file system object for use in the Emscripten virtual\n * filesystem. Allows you to use synchronous BrowserFS file systems from within\n * Emscripten.\n *\n * You can construct a BFSEmscriptenFS, mount it using its mount command,\n * and then mount it into Emscripten.\n *\n * Adapted from Emscripten's NodeFS:\n * https://raw.github.com/kripken/emscripten/master/src/library_nodefs.js\n */\nimport BrowserFS = require('../core/browserfs');\nimport FS from '../core/FS';\nimport fs = require('../core/node_fs');\nimport NodeStats from '../core/node_fs_stats';\nimport {uint8Array2Buffer} from '../core/util';\n\nexport interface Stats {\n  dev: number;\n  ino: number;\n  mode: number;\n  nlink: number;\n  uid: number;\n  gid: number;\n  rdev: number;\n  size: number;\n  blksize: number;\n  blocks: number;\n  atime: Date;\n  mtime: Date;\n  ctime: Date;\n  timestamp?: number;\n}\n\nexport interface EmscriptenFSNode {\n  name: string;\n  mode: number;\n  parent: EmscriptenFSNode;\n  mount: {opts: {root: string}};\n  stream_ops: EmscriptenStreamOps;\n  node_ops: EmscriptenNodeOps;\n}\n\nexport interface EmscriptenStream {\n  node: EmscriptenFSNode;\n  nfd: any;\n  flags: string;\n  position: number;\n}\n\nexport interface EmscriptenNodeOps {\n  getattr(node: EmscriptenFSNode): Stats;\n  setattr(node: EmscriptenFSNode, attr: Stats): void;\n  lookup(parent: EmscriptenFSNode, name: string): EmscriptenFSNode;\n  mknod(parent: EmscriptenFSNode, name: string, mode: number, dev: any): EmscriptenFSNode;\n  rename(oldNode: EmscriptenFSNode, newDir: EmscriptenFSNode, newName: string): void;\n  unlink(parent: EmscriptenFSNode, name: string): void;\n  rmdir(parent: EmscriptenFSNode, name: string): void;\n  readdir(node: EmscriptenFSNode): string[];\n  symlink(parent: EmscriptenFSNode, newName: string, oldPath: string): void;\n  readlink(node: EmscriptenFSNode): string;\n}\n\nexport interface EmscriptenStreamOps {\n  open(stream: EmscriptenStream): void;\n  close(stream: EmscriptenStream): void;\n  read(stream: EmscriptenStream, buffer: Uint8Array, offset: number, length: number, position: number): number;\n  write(stream: EmscriptenStream, buffer: Uint8Array, offset: number, length: number, position: number): number;\n  llseek(stream: EmscriptenStream, offset: number, whence: number): number;\n}\n\nexport interface EmscriptenFS {\n  mount(mount: {opts: {root: string}}): EmscriptenFSNode;\n  createNode(parent: EmscriptenFSNode, name: string, mode: number, dev?: any): EmscriptenFSNode;\n  getMode(path: string): number;\n  realPath(node: EmscriptenFSNode): string;\n  node_ops: EmscriptenNodeOps;\n  stream_ops: EmscriptenStreamOps;\n}\n\nclass BFSEmscriptenStreamOps implements EmscriptenStreamOps {\n  private FS: any;\n  private PATH: any;\n  private ERRNO_CODES: any;\n  private nodefs: FS;\n\n  constructor(private fs: BFSEmscriptenFS) {\n    this.nodefs = fs.getNodeFS();\n    this.FS = fs.getFS();\n    this.PATH = fs.getPATH();\n    this.ERRNO_CODES = fs.getERRNO_CODES();\n  }\n\n  public open(stream: EmscriptenStream): void {\n    var path = this.fs.realPath(stream.node),\n      FS = this.FS;\n    try {\n      if (FS.isFile(stream.node.mode)) {\n        stream.nfd = this.nodefs.openSync(path, this.fs.flagsToPermissionString(stream.flags));\n      }\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public close(stream: EmscriptenStream): void {\n    var FS = this.FS;\n    try {\n      if (FS.isFile(stream.node.mode) && stream.nfd) {\n        this.nodefs.closeSync(stream.nfd);\n      }\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public read(stream: EmscriptenStream, buffer: Uint8Array, offset: number, length: number, position: number): number {\n    // Avoid copying overhead by reading directly into buffer.\n    try {\n      return this.nodefs.readSync(stream.nfd, uint8Array2Buffer(buffer), offset, length, position);\n    } catch (e) {\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public write(stream: EmscriptenStream, buffer: Uint8Array, offset: number, length: number, position: number): number {\n    // Avoid copying overhead.\n    try {\n      return this.nodefs.writeSync(stream.nfd, uint8Array2Buffer(buffer), offset, length, position);\n    } catch (e) {\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public llseek(stream: EmscriptenStream, offset: number, whence: number): number {\n    var position = offset;\n    if (whence === 1) {  // SEEK_CUR.\n      position += stream.position;\n    } else if (whence === 2) {  // SEEK_END.\n      if (this.FS.isFile(stream.node.mode)) {\n        try {\n          var stat = this.nodefs.fstatSync(stream.nfd);\n          position += stat.size;\n        } catch (e) {\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n        }\n      }\n    }\n\n    if (position < 0) {\n      throw new this.FS.ErrnoError(this.ERRNO_CODES.EINVAL);\n    }\n\n    stream.position = position;\n    return position;\n  }\n}\n\nclass BFSEmscriptenNodeOps implements EmscriptenNodeOps {\n  private FS: any;\n  private PATH: any;\n  private ERRNO_CODES: any;\n  private nodefs: FS;\n\n  constructor(private fs: BFSEmscriptenFS) {\n    this.nodefs = fs.getNodeFS();\n    this.FS = fs.getFS();\n    this.PATH = fs.getPATH();\n    this.ERRNO_CODES = fs.getERRNO_CODES();\n  }\n\n  public getattr(node: EmscriptenFSNode): Stats {\n    var path = this.fs.realPath(node);\n    var stat: NodeStats;\n    try {\n      stat = this.nodefs.lstatSync(path);\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n    return {\n      dev: stat.dev,\n      ino: stat.ino,\n      mode: stat.mode,\n      nlink: stat.nlink,\n      uid: stat.uid,\n      gid: stat.gid,\n      rdev: stat.rdev,\n      size: stat.size,\n      atime: stat.atime,\n      mtime: stat.mtime,\n      ctime: stat.ctime,\n      blksize: stat.blksize,\n      blocks: stat.blocks\n    };\n  }\n\n  public setattr(node: EmscriptenFSNode, attr: Stats): void {\n    var path = this.fs.realPath(node);\n    try {\n      if (attr.mode !== undefined) {\n        this.nodefs.chmodSync(path, attr.mode);\n        // update the common node structure mode as well\n        node.mode = attr.mode;\n      }\n      if (attr.timestamp !== undefined) {\n        var date = new Date(attr.timestamp);\n        this.nodefs.utimesSync(path, date, date);\n      }\n    } catch (e) {\n      if (!e.code) throw e;\n      // Ignore not supported errors. Emscripten does utimesSync when it\n      // writes files, but never really requires the value to be set.\n      if (e.code !== \"ENOTSUP\") {\n        throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n      }\n    }\n    if (attr.size !== undefined) {\n      try {\n        this.nodefs.truncateSync(path, attr.size);\n      } catch (e) {\n        if (!e.code) throw e;\n        throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n      }\n    }\n  }\n\n  public lookup(parent: EmscriptenFSNode, name: string): EmscriptenFSNode {\n    var path = this.PATH.join2(this.fs.realPath(parent), name);\n    var mode = this.fs.getMode(path);\n    return this.fs.createNode(parent, name, mode);\n  }\n\n  public mknod(parent: EmscriptenFSNode, name: string, mode: number, dev: any): EmscriptenFSNode {\n    var node = this.fs.createNode(parent, name, mode, dev);\n    // create the backing node for this in the fs root as well\n    var path = this.fs.realPath(node);\n    try {\n      if (this.FS.isDir(node.mode)) {\n        this.nodefs.mkdirSync(path, node.mode);\n      } else {\n        this.nodefs.writeFileSync(path, '', { mode: node.mode });\n      }\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n    return node;\n  }\n\n  public rename(oldNode: EmscriptenFSNode, newDir: EmscriptenFSNode, newName: string): void {\n    var oldPath = this.fs.realPath(oldNode);\n    var newPath = this.PATH.join2(this.fs.realPath(newDir), newName);\n    try {\n      this.nodefs.renameSync(oldPath, newPath);\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public unlink(parent: EmscriptenFSNode, name: string): void {\n    var path = this.PATH.join2(this.fs.realPath(parent), name);\n    try {\n      this.nodefs.unlinkSync(path);\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public rmdir(parent: EmscriptenFSNode, name: string) {\n    var path = this.PATH.join2(this.fs.realPath(parent), name);\n    try {\n      this.nodefs.rmdirSync(path);\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public readdir(node: EmscriptenFSNode): string[] {\n    var path = this.fs.realPath(node);\n    try {\n      return this.nodefs.readdirSync(path);\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public symlink(parent: EmscriptenFSNode, newName: string, oldPath: string): void {\n    var newPath = this.PATH.join2(this.fs.realPath(parent), newName);\n    try {\n      this.nodefs.symlinkSync(oldPath, newPath);\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n\n  public readlink(node: EmscriptenFSNode): string {\n    var path = this.fs.realPath(node);\n    try {\n      return this.nodefs.readlinkSync(path);\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n  }\n}\n\nexport default class BFSEmscriptenFS implements EmscriptenFS {\n  private FS: any;\n  private PATH: any;\n  private ERRNO_CODES: any;\n  private nodefs: FS;\n  constructor(_FS = (<any> self)['FS'], _PATH = (<any> self)['PATH'], _ERRNO_CODES = (<any> self)['ERRNO_CODES'], nodefs: FS = fs) {\n    if (typeof BrowserFS === 'undefined') {\n      throw new Error(\"BrowserFS is not loaded. Please load it before this library.\");\n    }\n    this.nodefs = nodefs;\n    this.FS = _FS;\n    this.PATH = _PATH;\n    this.ERRNO_CODES = _ERRNO_CODES;\n    this.node_ops = new BFSEmscriptenNodeOps(this);\n    this.stream_ops = new BFSEmscriptenStreamOps(this);\n  }\n\n  public mount(mount: {opts: {root: string}}): EmscriptenFSNode {\n    return this.createNode(null, '/', this.getMode(mount.opts.root), 0);\n  }\n\n  public createNode(parent: EmscriptenFSNode, name: string, mode: number, dev?: any): EmscriptenFSNode {\n    var FS = this.FS;\n    if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {\n      throw new FS.ErrnoError(this.ERRNO_CODES.EINVAL);\n    }\n    var node = FS.createNode(parent, name, mode);\n    node.node_ops = this.node_ops;\n    node.stream_ops = this.stream_ops;\n    return node;\n  }\n\n  public getMode(path: string): number {\n    var stat: NodeStats;\n    try {\n      stat = this.nodefs.lstatSync(path);\n    } catch (e) {\n      if (!e.code) throw e;\n      throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n    }\n    return stat.mode;\n  }\n\n  public realPath(node: EmscriptenFSNode): string {\n    var parts: string[] = [];\n    while (node.parent !== node) {\n      parts.push(node.name);\n      node = node.parent;\n    }\n    parts.push(node.mount.opts.root);\n    parts.reverse();\n    return this.PATH.join.apply(null, parts);\n  }\n  // This maps the integer permission modes from http://linux.die.net/man/3/open\n  // to node.js-specific file open permission strings at http://nodejs.org/api/fs.html#fs_fs_open_path_flags_mode_callback\n  public flagsToPermissionStringMap = {\n    0/*O_RDONLY*/: 'r',\n    1/*O_WRONLY*/: 'r+',\n    2/*O_RDWR*/: 'r+',\n    64/*O_CREAT*/: 'r',\n    65/*O_WRONLY|O_CREAT*/: 'r+',\n    66/*O_RDWR|O_CREAT*/: 'r+',\n    129/*O_WRONLY|O_EXCL*/: 'rx+',\n    193/*O_WRONLY|O_CREAT|O_EXCL*/: 'rx+',\n    514/*O_RDWR|O_TRUNC*/: 'w+',\n    577/*O_WRONLY|O_CREAT|O_TRUNC*/: 'w',\n    578/*O_CREAT|O_RDWR|O_TRUNC*/: 'w+',\n    705/*O_WRONLY|O_CREAT|O_EXCL|O_TRUNC*/: 'wx',\n    706/*O_RDWR|O_CREAT|O_EXCL|O_TRUNC*/: 'wx+',\n    1024/*O_APPEND*/: 'a',\n    1025/*O_WRONLY|O_APPEND*/: 'a',\n    1026/*O_RDWR|O_APPEND*/: 'a+',\n    1089/*O_WRONLY|O_CREAT|O_APPEND*/: 'a',\n    1090/*O_RDWR|O_CREAT|O_APPEND*/: 'a+',\n    1153/*O_WRONLY|O_EXCL|O_APPEND*/: 'ax',\n    1154/*O_RDWR|O_EXCL|O_APPEND*/: 'ax+',\n    1217/*O_WRONLY|O_CREAT|O_EXCL|O_APPEND*/: 'ax',\n    1218/*O_RDWR|O_CREAT|O_EXCL|O_APPEND*/: 'ax+',\n    4096/*O_RDONLY|O_DSYNC*/: 'rs',\n    4098/*O_RDWR|O_DSYNC*/: 'rs+'\n  }\n\n  public flagsToPermissionString(flags: string): string {\n    var parsedFlags = (typeof flags === \"string\") ? parseInt(flags, 10) : <number><any> flags;\n    parsedFlags &= 0x1FFF;\n    if (parsedFlags in this.flagsToPermissionStringMap) {\n      return (<any> this.flagsToPermissionStringMap)[parsedFlags];\n    } else {\n      return flags;\n    }\n  }\n\n  public getNodeFS() {\n    return this.nodefs;\n  }\n\n  public getFS() {\n    return this.FS;\n  }\n\n  public getPATH() {\n    return this.PATH;\n  }\n\n  public getERRNO_CODES() {\n    return this.ERRNO_CODES;\n  }\n\n  public node_ops: EmscriptenNodeOps;\n  public stream_ops: EmscriptenStreamOps;\n}\n","import {default as Stats, FileType} from '../core/node_fs_stats';\nimport path = require('path');\n\n/**\n * A simple class for storing a filesystem index. Assumes that all paths passed\n * to it are *absolute* paths.\n *\n * Can be used as a partial or a full index, although care must be taken if used\n * for the former purpose, especially when directories are concerned.\n */\nexport class FileIndex<T> {\n  // Maps directory paths to directory inodes, which contain files.\n  private _index: {[path: string]: DirInode<T>}\n\n  /**\n   * Constructs a new FileIndex.\n   */\n  constructor() {\n    // _index is a single-level key,value store that maps *directory* paths to\n    // DirInodes. File information is only contained in DirInodes themselves.\n    this._index = {};\n    // Create the root directory.\n    this.addPath('/', new DirInode());\n  }\n\n  /**\n   * Split into a (directory path, item name) pair\n   */\n  private _split_path(p: string): string[] {\n    var dirpath = path.dirname(p);\n    var itemname = p.substr(dirpath.length + (dirpath === \"/\" ? 0 : 1));\n    return [dirpath, itemname];\n  }\n\n  /**\n   * Runs the given function over all files in the index.\n   */\n  public fileIterator<T>(cb: (file: T) => void): void {\n    for (var path in this._index) {\n      var dir = this._index[path];\n      var files = dir.getListing();\n      for (var i = 0; i < files.length; i++) {\n        var item = dir.getItem(files[i]);\n        if (isFileInode<T>(item)) {\n          cb(item.getData());\n        }\n      }\n    }\n  }\n\n  /**\n   * Adds the given absolute path to the index if it is not already in the index.\n   * Creates any needed parent directories.\n   * @param [String] path The path to add to the index.\n   * @param [BrowserFS.FileInode | BrowserFS.DirInode] inode The inode for the\n   *   path to add.\n   * @return [Boolean] 'True' if it was added or already exists, 'false' if there\n   *   was an issue adding it (e.g. item in path is a file, item exists but is\n   *   different).\n   * @todo If adding fails and implicitly creates directories, we do not clean up\n   *   the new empty directories.\n   */\n  public addPath(path: string, inode: Inode): boolean {\n    if (inode == null) {\n      throw new Error('Inode must be specified');\n    }\n    if (path[0] !== '/') {\n      throw new Error('Path must be absolute, got: ' + path);\n    }\n\n    // Check if it already exists.\n    if (this._index.hasOwnProperty(path)) {\n      return this._index[path] === inode;\n    }\n\n    var splitPath = this._split_path(path);\n    var dirpath = splitPath[0];\n    var itemname = splitPath[1];\n    // Try to add to its parent directory first.\n    var parent = this._index[dirpath];\n    if (parent === undefined && path !== '/') {\n      // Create parent.\n      parent = new DirInode<T>();\n      if (!this.addPath(dirpath, parent)) {\n        return false;\n      }\n    }\n    // Add myself to my parent.\n    if (path !== '/') {\n      if (!parent.addItem(itemname, inode)) {\n        return false;\n      }\n    }\n    // If I'm a directory, add myself to the index.\n    if (isDirInode<T>(inode)) {\n      this._index[path] = inode;\n    }\n    return true;\n  }\n\n  /**\n   * Adds the given absolute path to the index if it is not already in the index.\n   * The path is added without special treatment (no joining of adjacent separators, etc).\n   * Creates any needed parent directories.\n   * @param [String] path The path to add to the index.\n   * @param [BrowserFS.FileInode | BrowserFS.DirInode] inode The inode for the\n   *   path to add.\n   * @return [Boolean] 'True' if it was added or already exists, 'false' if there\n   *   was an issue adding it (e.g. item in path is a file, item exists but is\n   *   different).\n   * @todo If adding fails and implicitly creates directories, we do not clean up\n   *   the new empty directories.\n   */\n  public addPathFast(path: string, inode: Inode): boolean {\n\n    const itemNameMark = path.lastIndexOf('/');\n    const parentPath = itemNameMark == 0 ? \"/\" : path.substring(0, itemNameMark);\n    const itemName = path.substring(itemNameMark+1);\n\n    // Try to add to its parent directory first.\n    let parent = this._index[parentPath];\n    if (parent === undefined) {\n      // Create parent.\n      parent = new DirInode<T>();\n      this.addPathFast(parentPath, parent);\n    }\n\n    if (!parent.addItem(itemName, inode)) {\n      return false;\n    }\n\n    // If adding a directory, add to the index as well.\n    if (inode.isDir()) {\n      this._index[path] = <DirInode<T>> inode;\n    }\n    return true;\n  }\n\n  /**\n   * Removes the given path. Can be a file or a directory.\n   * @return [BrowserFS.FileInode | BrowserFS.DirInode | null] The removed item,\n   *   or null if it did not exist.\n   */\n  public removePath(path: string): Inode {\n    var splitPath = this._split_path(path);\n    var dirpath = splitPath[0];\n    var itemname = splitPath[1];\n\n    // Try to remove it from its parent directory first.\n    var parent = this._index[dirpath];\n    if (parent === undefined) {\n      return null;\n    }\n    // Remove myself from my parent.\n    var inode = parent.remItem(itemname);\n    if (inode === null) {\n      return null;\n    }\n    // If I'm a directory, remove myself from the index, and remove my children.\n    if (isDirInode(inode)) {\n      var children = inode.getListing();\n      for (var i = 0; i < children.length; i++) {\n        this.removePath(path + '/' + children[i]);\n      }\n\n      // Remove the directory from the index, unless it's the root.\n      if (path !== '/') {\n        delete this._index[path];\n      }\n    }\n    return inode;\n  }\n\n  /**\n   * Retrieves the directory listing of the given path.\n   * @return [String[]] An array of files in the given path, or 'null' if it does\n   *   not exist.\n   */\n  public ls(path: string): string[] {\n    var item = this._index[path];\n    if (item === undefined) {\n      return null;\n    }\n    return item.getListing();\n  }\n\n  /**\n   * Returns the inode of the given item.\n   * @param [String] path\n   * @return [BrowserFS.FileInode | BrowserFS.DirInode | null] Returns null if\n   *   the item does not exist.\n   */\n  public getInode(path: string): Inode {\n    var splitPath = this._split_path(path);\n    var dirpath = splitPath[0];\n    var itemname = splitPath[1];\n    // Retrieve from its parent directory.\n    var parent = this._index[dirpath];\n    if (parent === undefined) {\n      return null;\n    }\n    // Root case\n    if (dirpath === path) {\n      return parent;\n    }\n    return parent.getItem(itemname);\n  }\n\n  /**\n   * Static method for constructing indices from a JSON listing.\n   * @param [Object] listing Directory listing generated by tools/XHRIndexer.coffee\n   * @return [BrowserFS.FileIndex] A new FileIndex object.\n   */\n  public static fromListing<T>(listing): FileIndex<T> {\n    var idx = new FileIndex<T>();\n    // Add a root DirNode.\n    var rootInode = new DirInode<T>();\n    idx._index['/'] = rootInode;\n    var queue = [['', listing, rootInode]];\n    while (queue.length > 0) {\n      var inode;\n      var next = queue.pop();\n      var pwd = next[0];\n      var tree = next[1];\n      var parent = next[2];\n      for (var node in tree) {\n        var children = tree[node];\n        var name = \"\" + pwd + \"/\" + node;\n        if (children != null) {\n          idx._index[name] = inode = new DirInode<T>();\n          queue.push([name, children, inode]);\n        } else {\n          // This inode doesn't have correct size information, noted with -1.\n          inode = new FileInode<Stats>(new Stats(FileType.FILE, -1, 0x16D));\n        }\n        if (parent != null) {\n          parent._ls[node] = inode;\n        }\n      }\n    }\n    return idx;\n  }\n}\n\n/**\n * Generic interface for file/directory inodes.\n * Note that Stats objects are what we use for file inodes.\n */\nexport interface Inode {\n  // Is this an inode for a file?\n  isFile(): boolean;\n  // Is this an inode for a directory?\n  isDir(): boolean;\n}\n\n/**\n * Inode for a file. Stores an arbitrary (filesystem-specific) data payload.\n */\nexport class FileInode<T> implements Inode {\n  constructor(private data: T) { }\n  public isFile(): boolean { return true; }\n  public isDir(): boolean { return false; }\n  public getData(): T { return this.data; }\n  public setData(data: T): void { this.data = data; }\n}\n\n/**\n * Inode for a directory. Currently only contains the directory listing.\n */\nexport class DirInode<T> implements Inode {\n  private _ls: {[path: string]: Inode} = {};\n  /**\n   * Constructs an inode for a directory.\n   */\n  constructor(private data: T = null) {}\n  public isFile(): boolean {\n    return false;\n  }\n  public isDir(): boolean {\n    return true;\n  }\n  public getData(): T { return this.data; }\n\n  /**\n   * Return a Stats object for this inode.\n   * @todo Should probably remove this at some point. This isn't the\n   *       responsibility of the FileIndex.\n   * @return [BrowserFS.node.fs.Stats]\n   */\n  public getStats(): Stats {\n    return new Stats(FileType.DIRECTORY, 4096, 0x16D);\n  }\n  /**\n   * Returns the directory listing for this directory. Paths in the directory are\n   * relative to the directory's path.\n   * @return [String[]] The directory listing for this directory.\n   */\n  public getListing(): string[] {\n    return Object.keys(this._ls);\n  }\n  /**\n   * Returns the inode for the indicated item, or null if it does not exist.\n   * @param [String] p Name of item in this directory.\n   * @return [BrowserFS.FileInode | BrowserFS.DirInode | null]\n   */\n  public getItem(p: string): Inode {\n    var _ref;\n    return (_ref = this._ls[p]) != null ? _ref : null;\n  }\n  /**\n   * Add the given item to the directory listing. Note that the given inode is\n   * not copied, and will be mutated by the DirInode if it is a DirInode.\n   * @param [String] p Item name to add to the directory listing.\n   * @param [BrowserFS.FileInode | BrowserFS.DirInode] inode The inode for the\n   *   item to add to the directory inode.\n   * @return [Boolean] True if it was added, false if it already existed.\n   */\n  public addItem(p: string, inode: Inode): boolean {\n    if (p in this._ls) {\n      return false;\n    }\n    this._ls[p] = inode;\n    return true;\n  }\n  /**\n   * Removes the given item from the directory listing.\n   * @param [String] p Name of item to remove from the directory listing.\n   * @return [BrowserFS.FileInode | BrowserFS.DirInode | null] Returns the item\n   *   removed, or null if the item did not exist.\n   */\n  public remItem(p: string): Inode {\n    var item = this._ls[p];\n    if (item === undefined) {\n      return null;\n    }\n    delete this._ls[p];\n    return item;\n  }\n}\n\nexport function isFileInode<T>(inode: Inode): inode is FileInode<T> {\n  return inode && inode.isFile();\n}\n\nexport function isDirInode<T>(inode: Inode): inode is DirInode<T> {\n  return inode && inode.isDir();\n}\n","import {default as Stats, FileType} from '../core/node_fs_stats';\n\n/**\n * Generic inode definition that can easily be serialized.\n */\nclass Inode {\n  constructor(public id: string,\n    public size: number,\n    public mode: number,\n    public atime: number,\n    public mtime: number,\n    public ctime: number) { }\n\n  /**\n   * Handy function that converts the Inode to a Node Stats object.\n   */\n  public toStats(): Stats {\n    return new Stats(\n      (this.mode & 0xF000) === FileType.DIRECTORY ? FileType.DIRECTORY : FileType.FILE,\n      this.size, this.mode, new Date(this.atime), new Date(this.mtime), new Date(this.ctime));\n  }\n\n  /**\n   * Get the size of this Inode, in bytes.\n   */\n  public getSize(): number {\n    // ASSUMPTION: ID is ASCII (1 byte per char).\n    return 30 + this.id.length;\n  }\n\n  /**\n   * Writes the inode into the start of the buffer.\n   */\n  public toBuffer(buff: NodeBuffer = new Buffer(this.getSize())): NodeBuffer {\n    buff.writeUInt32LE(this.size, 0);\n    buff.writeUInt16LE(this.mode, 4);\n    buff.writeDoubleLE(this.atime, 6);\n    buff.writeDoubleLE(this.mtime, 14);\n    buff.writeDoubleLE(this.ctime, 22);\n    buff.write(this.id, 30, this.id.length, 'ascii');\n    return buff;\n  }\n\n  /**\n   * Updates the Inode using information from the stats object. Used by file\n   * systems at sync time, e.g.:\n   * - Program opens file and gets a File object.\n   * - Program mutates file. File object is responsible for maintaining\n   *   metadata changes locally -- typically in a Stats object.\n   * - Program closes file. File object's metadata changes are synced with the\n   *   file system.\n   * @return True if any changes have occurred.\n   */\n  public update(stats: Stats): boolean {\n    var hasChanged = false;\n    if (this.size !== stats.size) {\n      this.size = stats.size;\n      hasChanged = true;\n    }\n\n    if (this.mode !== stats.mode) {\n      this.mode = stats.mode;\n      hasChanged = true;\n    }\n\n    var atimeMs = stats.atime.getTime();\n    if (this.atime !== atimeMs) {\n      this.atime = atimeMs;\n      hasChanged = true;\n    }\n\n    var mtimeMs = stats.mtime.getTime();\n    if (this.mtime !== mtimeMs) {\n      this.mtime = mtimeMs;\n      hasChanged = true;\n    }\n\n    var ctimeMs = stats.ctime.getTime();\n    if (this.ctime !== ctimeMs) {\n      this.ctime = ctimeMs;\n      hasChanged = true;\n    }\n\n    return hasChanged;\n  }\n\n  /**\n   * Converts the buffer into an Inode.\n   */\n  public static fromBuffer(buffer: NodeBuffer): Inode {\n    if (buffer === undefined) {\n      throw new Error(\"NO\");\n    }\n    return new Inode(buffer.toString('ascii', 30),\n      buffer.readUInt32LE(0),\n      buffer.readUInt16LE(4),\n      buffer.readDoubleLE(6),\n      buffer.readDoubleLE(14),\n      buffer.readDoubleLE(22)\n    );\n  }\n\n  // XXX: Copied from Stats. Should reconcile these two into something more\n  //      compact.\n\n  /**\n   * @return [Boolean] True if this item is a file.\n   */\n  public isFile(): boolean {\n    return (this.mode & 0xF000) === FileType.FILE;\n  }\n\n  /**\n   * @return [Boolean] True if this item is a directory.\n   */\n  public isDirectory(): boolean {\n    return (this.mode & 0xF000) === FileType.DIRECTORY;\n  }\n}\n\nexport = Inode;\n","import file_system = require('../core/file_system');\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport file = require('../core/file');\nimport file_flag = require('../core/file_flag');\nimport path = require('path');\nimport Inode = require('../generic/inode');\nimport preload_file = require('../generic/preload_file');\nvar ROOT_NODE_ID: string = \"/\";\n\n/**\n * Generates a random ID.\n */\nfunction GenerateRandomID(): string {\n  // From http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\n/**\n * Helper function. Checks if 'e' is defined. If so, it triggers the callback\n * with 'e' and returns false. Otherwise, returns true.\n */\nfunction noError(e: ApiError, cb: (e: ApiError) => void): boolean {\n  if (e) {\n    cb(e);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Helper function. Checks if 'e' is defined. If so, it aborts the transaction,\n * triggers the callback with 'e', and returns false. Otherwise, returns true.\n */\nfunction noErrorTx(e: ApiError, tx: AsyncKeyValueRWTransaction, cb: (e: ApiError) => void): boolean {\n  if (e) {\n    tx.abort(() => {\n      cb(e);\n    });\n    return false;\n  }\n  return true;\n}\n\n/**\n * Represents a *synchronous* key-value store.\n */\nexport interface SyncKeyValueStore {\n  /**\n   * The name of the key-value store.\n   */\n  name(): string;\n  /**\n   * Empties the key-value store completely.\n   */\n  clear(): void;\n  /**\n   * Begins a new read-only transaction.\n   */\n  beginTransaction(type: \"readonly\"): SyncKeyValueROTransaction;\n  /**\n   * Begins a new read-write transaction.\n   */\n  beginTransaction(type: \"readwrite\"): SyncKeyValueRWTransaction;\n  beginTransaction(type: string): SyncKeyValueROTransaction;\n}\n\n/**\n * A read-only transaction for a synchronous key value store.\n */\nexport interface SyncKeyValueROTransaction {\n  /**\n   * Retrieves the data at the given key. Throws an ApiError if an error occurs\n   * or if the key does not exist.\n   * @param key The key to look under for data.\n   * @return The data stored under the key, or undefined if not present.\n   */\n  get(key: string): NodeBuffer;\n}\n\n/**\n * A read-write transaction for a synchronous key value store.\n */\nexport interface SyncKeyValueRWTransaction extends SyncKeyValueROTransaction {\n  /**\n   * Adds the data to the store under the given key.\n   * @param key The key to add the data under.\n   * @param data The data to add to the store.\n   * @param overwrite If 'true', overwrite any existing data. If 'false',\n   *   avoids storing the data if the key exists.\n   * @return True if storage succeeded, false otherwise.\n   */\n  put(key: string, data: NodeBuffer, overwrite: boolean): boolean;\n  /**\n   * Deletes the data at the given key.\n   * @param key The key to delete from the store.\n   */\n  del(key: string): void;\n  /**\n   * Commits the transaction.\n   */\n  commit(): void;\n  /**\n   * Aborts and rolls back the transaction.\n   */\n  abort(): void;\n}\n\n/**\n * An interface for simple synchronous key-value stores that don't have special\n * support for transactions and such.\n */\nexport interface SimpleSyncStore {\n  get(key: string): NodeBuffer;\n  put(key: string, data: NodeBuffer, overwrite: boolean): boolean;\n  del(key: string): void;\n}\n\n/**\n * A simple RW transaction for simple synchronous key-value stores.\n */\nexport class SimpleSyncRWTransaction implements SyncKeyValueRWTransaction {\n  constructor(private store: SimpleSyncStore) { }\n  /**\n   * Stores data in the keys we modify prior to modifying them.\n   * Allows us to roll back commits.\n   */\n  private originalData: { [key: string]: NodeBuffer } = {};\n  /**\n   * List of keys modified in this transaction, if any.\n   */\n  private modifiedKeys: string[] = [];\n  /**\n   * Stashes given key value pair into `originalData` if it doesn't already\n   * exist. Allows us to stash values the program is requesting anyway to\n   * prevent needless `get` requests if the program modifies the data later\n   * on during the transaction.\n   */\n  private stashOldValue(key: string, value: NodeBuffer) {\n    // Keep only the earliest value in the transaction.\n    if (!this.originalData.hasOwnProperty(key)) {\n      this.originalData[key] = value\n    }\n  }\n  /**\n   * Marks the given key as modified, and stashes its value if it has not been\n   * stashed already.\n   */\n  private markModified(key: string) {\n    if (this.modifiedKeys.indexOf(key) === -1) {\n      this.modifiedKeys.push(key);\n      if (!this.originalData.hasOwnProperty(key)) {\n        this.originalData[key] = this.store.get(key);\n      }\n    }\n  }\n\n  public get(key: string): NodeBuffer {\n    var val = this.store.get(key);\n    this.stashOldValue(key, val);\n    return val;\n  }\n\n  public put(key: string, data: NodeBuffer, overwrite: boolean): boolean {\n    this.markModified(key);\n    return this.store.put(key, data, overwrite);\n  }\n\n  public del(key: string): void {\n    this.markModified(key);\n    this.store.del(key);\n  }\n\n  public commit(): void {/* NOP */}\n  public abort(): void {\n    // Rollback old values.\n    var i: number, key: string, value: NodeBuffer;\n    for (i = 0; i < this.modifiedKeys.length; i++) {\n      key = this.modifiedKeys[i];\n      value = this.originalData[key];\n      if (value === null) {\n        // Key didn't exist.\n        this.store.del(key);\n      } else {\n        // Key existed. Store old value.\n        this.store.put(key, value, true);\n      }\n    }\n  }\n}\n\nexport interface SyncKeyValueFileSystemOptions {\n  /**\n   * The actual key-value store to read from/write to.\n   */\n  store: SyncKeyValueStore;\n  /**\n   * Should the file system support properties (mtime/atime/ctime/chmod/etc)?\n   * Enabling this slightly increases the storage space per file, and adds\n   * atime updates every time a file is accessed, mtime updates every time\n   * a file is modified, and permission checks on every operation.\n   *\n   * Defaults to *false*.\n   */\n  //supportProps?: boolean;\n  /**\n   * Should the file system support links?\n   */\n  //supportLinks?: boolean;\n}\n\nexport class SyncKeyValueFile extends preload_file.PreloadFile<SyncKeyValueFileSystem> implements file.File {\n  constructor(_fs: SyncKeyValueFileSystem, _path: string, _flag: file_flag.FileFlag, _stat: Stats, contents?: NodeBuffer) {\n    super(_fs, _path, _flag, _stat, contents);\n  }\n\n  public syncSync(): void {\n    if (this.isDirty()) {\n      this._fs._syncSync(this.getPath(), this.getBuffer(), this.getStats());\n      this.resetDirty();\n    }\n  }\n\n  public closeSync(): void {\n    this.syncSync();\n  }\n}\n\n/**\n * A \"Synchronous key-value file system\". Stores data to/retrieves data from an\n * underlying key-value store.\n *\n * We use a unique ID for each node in the file system. The root node has a\n * fixed ID.\n * @todo Introduce Node ID caching.\n * @todo Check modes.\n */\nexport class SyncKeyValueFileSystem extends file_system.SynchronousFileSystem {\n  private store: SyncKeyValueStore;\n  constructor(options: SyncKeyValueFileSystemOptions) {\n    super();\n    this.store = options.store;\n    // INVARIANT: Ensure that the root exists.\n    this.makeRootDirectory();\n  }\n\n  public static isAvailable(): boolean { return true; }\n  public getName(): string { return this.store.name(); }\n  public isReadOnly(): boolean { return false; }\n  public supportsSymlinks(): boolean { return false; }\n  public supportsProps(): boolean { return false; }\n  public supportsSynch(): boolean { return true; }\n\n  /**\n   * Checks if the root directory exists. Creates it if it doesn't.\n   */\n  private makeRootDirectory() {\n    var tx = this.store.beginTransaction('readwrite');\n    if (tx.get(ROOT_NODE_ID) === undefined) {\n      // Create new inode.\n      var currTime = (new Date()).getTime(),\n        // Mode 0666\n        dirInode = new Inode(GenerateRandomID(), 4096, 511 | FileType.DIRECTORY, currTime, currTime, currTime);\n      // If the root doesn't exist, the first random ID shouldn't exist,\n      // either.\n      tx.put(dirInode.id, new Buffer(\"{}\"), false);\n      tx.put(ROOT_NODE_ID, dirInode.toBuffer(), false);\n      tx.commit();\n    }\n  }\n\n  /**\n   * Helper function for findINode.\n   * @param parent The parent directory of the file we are attempting to find.\n   * @param filename The filename of the inode we are attempting to find, minus\n   *   the parent.\n   * @return string The ID of the file's inode in the file system.\n   */\n  private _findINode(tx: SyncKeyValueROTransaction, parent: string, filename: string): string {\n    var read_directory = (inode: Inode): string => {\n      // Get the root's directory listing.\n      var dirList = this.getDirListing(tx, parent, inode);\n      // Get the file's ID.\n      if (dirList[filename]) {\n        return dirList[filename];\n      } else {\n        throw ApiError.ENOENT(path.resolve(parent, filename));\n      }\n    };\n    if (parent === '/') {\n      if (filename === '') {\n        // BASE CASE #1: Return the root's ID.\n        return ROOT_NODE_ID;\n      } else {\n        // BASE CASE #2: Find the item in the root ndoe.\n        return read_directory(this.getINode(tx, parent, ROOT_NODE_ID));\n      }\n    } else {\n      return read_directory(this.getINode(tx, parent + path.sep + filename,\n        this._findINode(tx, path.dirname(parent), path.basename(parent))));\n    }\n  }\n\n  /**\n   * Finds the Inode of the given path.\n   * @param p The path to look up.\n   * @return The Inode of the path p.\n   * @todo memoize/cache\n   */\n  private findINode(tx: SyncKeyValueROTransaction, p: string): Inode {\n    return this.getINode(tx, p, this._findINode(tx, path.dirname(p), path.basename(p)));\n  }\n\n  /**\n   * Given the ID of a node, retrieves the corresponding Inode.\n   * @param tx The transaction to use.\n   * @param p The corresponding path to the file (used for error messages).\n   * @param id The ID to look up.\n   */\n  private getINode(tx: SyncKeyValueROTransaction, p: string, id: string): Inode {\n    var inode = tx.get(id);\n    if (inode === undefined) {\n      throw ApiError.ENOENT(p);\n    }\n    return Inode.fromBuffer(inode);\n  }\n\n  /**\n   * Given the Inode of a directory, retrieves the corresponding directory\n   * listing.\n   */\n  private getDirListing(tx: SyncKeyValueROTransaction, p: string, inode: Inode): { [fileName: string]: string } {\n    if (!inode.isDirectory()) {\n      throw ApiError.ENOTDIR(p);\n    }\n    var data = tx.get(inode.id);\n    if (data === undefined) {\n      throw ApiError.ENOENT(p);\n    }\n    return JSON.parse(data.toString());\n  }\n\n  /**\n   * Creates a new node under a random ID. Retries 5 times before giving up in\n   * the exceedingly unlikely chance that we try to reuse a random GUID.\n   * @return The GUID that the data was stored under.\n   */\n  private addNewNode(tx: SyncKeyValueRWTransaction, data: NodeBuffer): string {\n    var retries = 0, currId: string;\n    while (retries < 5) {\n      try {\n        currId = GenerateRandomID();\n        tx.put(currId, data, false);\n        return currId;\n      } catch (e) {\n        // Ignore and reroll.\n      }\n    }\n    throw new ApiError(ErrorCode.EIO, 'Unable to commit data to key-value store.');\n  }\n\n  /**\n   * Commits a new file (well, a FILE or a DIRECTORY) to the file system with\n   * the given mode.\n   * Note: This will commit the transaction.\n   * @param p The path to the new file.\n   * @param type The type of the new file.\n   * @param mode The mode to create the new file with.\n   * @param data The data to store at the file's data node.\n   * @return The Inode for the new file.\n   */\n  private commitNewFile(tx: SyncKeyValueRWTransaction, p: string, type: FileType, mode: number, data: NodeBuffer): Inode {\n    var parentDir = path.dirname(p),\n      fname = path.basename(p),\n      parentNode = this.findINode(tx, parentDir),\n      dirListing = this.getDirListing(tx, parentDir, parentNode),\n      currTime = (new Date()).getTime();\n\n    // Invariant: The root always exists.\n    // If we don't check this prior to taking steps below, we will create a\n    // file with name '' in root should p == '/'.\n    if (p === '/') {\n      throw ApiError.EEXIST(p);\n    }\n\n    // Check if file already exists.\n    if (dirListing[fname]) {\n      throw ApiError.EEXIST(p);\n    }\n\n    try {\n      // Commit data.\n      var dataId = this.addNewNode(tx, data),\n        fileNode = new Inode(dataId, data.length, mode | type, currTime, currTime, currTime),\n        // Commit file node.\n        fileNodeId = this.addNewNode(tx, fileNode.toBuffer());\n      // Update and commit parent directory listing.\n      dirListing[fname] = fileNodeId;\n      tx.put(parentNode.id, new Buffer(JSON.stringify(dirListing)), true);\n    } catch (e) {\n      tx.abort();\n      throw e;\n    }\n    tx.commit();\n    return fileNode;\n  }\n\n  /**\n   * Delete all contents stored in the file system.\n   */\n  public empty(): void {\n    this.store.clear();\n    // INVARIANT: Root always exists.\n    this.makeRootDirectory();\n  }\n\n  public renameSync(oldPath: string, newPath: string): void {\n    var tx = this.store.beginTransaction('readwrite'),\n      oldParent = path.dirname(oldPath), oldName = path.basename(oldPath),\n      newParent = path.dirname(newPath), newName = path.basename(newPath),\n      // Remove oldPath from parent's directory listing.\n      oldDirNode = this.findINode(tx, oldParent),\n      oldDirList = this.getDirListing(tx, oldParent, oldDirNode);\n\n    if (!oldDirList[oldName]) {\n      throw ApiError.ENOENT(oldPath);\n    }\n    var nodeId: string = oldDirList[oldName];\n    delete oldDirList[oldName];\n\n    // Invariant: Can't move a folder inside itself.\n    // This funny little hack ensures that the check passes only if oldPath\n    // is a subpath of newParent. We append '/' to avoid matching folders that\n    // are a substring of the bottom-most folder in the path.\n    if ((newParent + '/').indexOf(oldPath + '/') === 0) {\n      throw new ApiError(ErrorCode.EBUSY, oldParent);\n    }\n\n    // Add newPath to parent's directory listing.\n    var newDirNode: Inode, newDirList: typeof oldDirList;\n    if (newParent === oldParent) {\n      // Prevent us from re-grabbing the same directory listing, which still\n      // contains oldName.\n      newDirNode = oldDirNode;\n      newDirList = oldDirList;\n    } else {\n      newDirNode = this.findINode(tx, newParent);\n      newDirList = this.getDirListing(tx, newParent, newDirNode);\n    }\n\n    if (newDirList[newName]) {\n      // If it's a file, delete it.\n      var newNameNode = this.getINode(tx, newPath, newDirList[newName]);\n      if (newNameNode.isFile()) {\n        try {\n          tx.del(newNameNode.id);\n          tx.del(newDirList[newName]);\n        } catch (e) {\n          tx.abort();\n          throw e;\n        }\n      } else {\n        // If it's a directory, throw a permissions error.\n        throw ApiError.EPERM(newPath);\n      }\n    }\n    newDirList[newName] = nodeId;\n\n    // Commit the two changed directory listings.\n    try {\n      tx.put(oldDirNode.id, new Buffer(JSON.stringify(oldDirList)), true);\n      tx.put(newDirNode.id, new Buffer(JSON.stringify(newDirList)), true);\n    } catch (e) {\n      tx.abort();\n      throw e;\n    }\n\n    tx.commit();\n  }\n\n  public statSync(p: string, isLstat: boolean): Stats {\n    // Get the inode to the item, convert it into a Stats object.\n    return this.findINode(this.store.beginTransaction('readonly'), p).toStats();\n  }\n\n  public createFileSync(p: string, flag: file_flag.FileFlag, mode: number): file.File {\n    var tx = this.store.beginTransaction('readwrite'),\n      data = new Buffer(0),\n      newFile = this.commitNewFile(tx, p, FileType.FILE, mode, data);\n    // Open the file.\n    return new SyncKeyValueFile(this, p, flag, newFile.toStats(), data);\n  }\n\n  public openFileSync(p: string, flag: file_flag.FileFlag): file.File {\n    var tx = this.store.beginTransaction('readonly'),\n      node = this.findINode(tx, p),\n      data = tx.get(node.id);\n    if (data === undefined) {\n      throw ApiError.ENOENT(p);\n    }\n    return new SyncKeyValueFile(this, p, flag, node.toStats(), data);\n  }\n\n  /**\n   * Remove all traces of the given path from the file system.\n   * @param p The path to remove from the file system.\n   * @param isDir Does the path belong to a directory, or a file?\n   * @todo Update mtime.\n   */\n  private removeEntry(p: string, isDir: boolean): void {\n    var tx = this.store.beginTransaction('readwrite'),\n      parent: string = path.dirname(p),\n      parentNode = this.findINode(tx, parent),\n      parentListing = this.getDirListing(tx, parent, parentNode),\n      fileName: string = path.basename(p);\n\n    if (!parentListing[fileName]) {\n      throw ApiError.ENOENT(p);\n    }\n\n    // Remove from directory listing of parent.\n    var fileNodeId = parentListing[fileName];\n    delete parentListing[fileName];\n\n    // Get file inode.\n    var fileNode = this.getINode(tx, p, fileNodeId);\n    if (!isDir && fileNode.isDirectory()) {\n      throw ApiError.EISDIR(p);\n    } else if (isDir && !fileNode.isDirectory()) {\n      throw ApiError.ENOTDIR(p);\n    }\n\n    try {\n      // Delete data.\n      tx.del(fileNode.id);\n      // Delete node.\n      tx.del(fileNodeId);\n      // Update directory listing.\n      tx.put(parentNode.id, new Buffer(JSON.stringify(parentListing)), true);\n    } catch (e) {\n      tx.abort();\n      throw e;\n    }\n    // Success.\n    tx.commit();\n  }\n\n  public unlinkSync(p: string): void {\n    this.removeEntry(p, false);\n  }\n\n  public rmdirSync(p: string): void {\n    // Check first if directory is empty.\n    if (this.readdirSync(p).length > 0) {\n      throw ApiError.ENOTEMPTY(p);\n    } else {\n      this.removeEntry(p, true);\n    }\n  }\n\n  public mkdirSync(p: string, mode: number): void {\n    var tx = this.store.beginTransaction('readwrite'),\n      data = new Buffer('{}');\n    this.commitNewFile(tx, p, FileType.DIRECTORY, mode, data);\n  }\n\n  public readdirSync(p: string): string[]{\n    var tx = this.store.beginTransaction('readonly');\n    return Object.keys(this.getDirListing(tx, p, this.findINode(tx, p)));\n  }\n\n  public _syncSync(p: string, data: NodeBuffer, stats: Stats): void {\n    // @todo Ensure mtime updates properly, and use that to determine if a data\n    //       update is required.\n    var tx = this.store.beginTransaction('readwrite'),\n      // We use the _findInode helper because we actually need the INode id.\n      fileInodeId = this._findINode(tx, path.dirname(p), path.basename(p)),\n      fileInode = this.getINode(tx, p, fileInodeId),\n      inodeChanged = fileInode.update(stats);\n\n    try {\n      // Sync data.\n      tx.put(fileInode.id, data, true);\n      // Sync metadata.\n      if (inodeChanged) {\n        tx.put(fileInodeId, fileInode.toBuffer(), true);\n      }\n    } catch (e) {\n      tx.abort();\n      throw e;\n    }\n    tx.commit();\n  }\n}\n\n/**\n * Represents an *asynchronous* key-value store.\n */\nexport interface AsyncKeyValueStore {\n  /**\n   * The name of the key-value store.\n   */\n  name(): string;\n  /**\n   * Empties the key-value store completely.\n   */\n  clear(cb: (e?: ApiError) => void): void;\n  /**\n   * Begins a read-write transaction.\n   */\n  beginTransaction(type: 'readwrite'): AsyncKeyValueRWTransaction;\n  /**\n   * Begins a read-only transaction.\n   */\n  beginTransaction(type: 'readonly'): AsyncKeyValueROTransaction;\n  beginTransaction(type: string): AsyncKeyValueROTransaction;\n}\n\n/**\n * Represents an asynchronous read-only transaction.\n */\nexport interface AsyncKeyValueROTransaction {\n  /**\n   * Retrieves the data at the given key.\n   * @param key The key to look under for data.\n   */\n  get(key: string, cb: (e: ApiError, data?: NodeBuffer) => void): void;\n}\n\n/**\n * Represents an asynchronous read-write transaction.\n */\nexport interface AsyncKeyValueRWTransaction extends AsyncKeyValueROTransaction {\n  /**\n   * Adds the data to the store under the given key. Overwrites any existing\n   * data.\n   * @param key The key to add the data under.\n   * @param data The data to add to the store.\n   * @param overwrite If 'true', overwrite any existing data. If 'false',\n   *   avoids writing the data if the key exists.\n   * @param cb Triggered with an error and whether or not the value was\n   *   committed.\n   */\n  put(key: string, data: NodeBuffer, overwrite: boolean, cb: (e: ApiError,\n    committed?: boolean) => void): void;\n  /**\n   * Deletes the data at the given key.\n   * @param key The key to delete from the store.\n   */\n  del(key: string, cb: (e?: ApiError) => void): void;\n  /**\n   * Commits the transaction.\n   */\n  commit(cb: (e?: ApiError) => void): void;\n  /**\n   * Aborts and rolls back the transaction.\n   */\n  abort(cb: (e?: ApiError) => void): void;\n}\n\nexport class AsyncKeyValueFile extends preload_file.PreloadFile<AsyncKeyValueFileSystem> implements file.File {\n  constructor(_fs: AsyncKeyValueFileSystem, _path: string, _flag: file_flag.FileFlag, _stat: Stats, contents?: NodeBuffer) {\n    super(_fs, _path, _flag, _stat, contents);\n  }\n\n  public sync(cb: (e?: ApiError) => void): void {\n    if (this.isDirty()) {\n      this._fs._sync(this.getPath(), this.getBuffer(), this.getStats(), (e?: ApiError) => {\n        if (!e) {\n          this.resetDirty();\n        }\n        cb(e);\n      });\n    } else {\n      cb();\n    }\n  }\n\n  public close(cb: (e?: ApiError) => void): void {\n    this.sync(cb);\n  }\n}\n\n/**\n * An \"Asynchronous key-value file system\". Stores data to/retrieves data from\n * an underlying asynchronous key-value store.\n */\nexport class AsyncKeyValueFileSystem extends file_system.BaseFileSystem {\n  private store: AsyncKeyValueStore;\n\n  /**\n   * Initializes the file system. Typically called by subclasses' async\n   * constructors.\n   */\n  public init(store: AsyncKeyValueStore, cb: (e?: ApiError) => void) {\n    this.store = store;\n    // INVARIANT: Ensure that the root exists.\n    this.makeRootDirectory(cb);\n  }\n\n  public static isAvailable(): boolean { return true; }\n  public getName(): string { return this.store.name(); }\n  public isReadOnly(): boolean { return false; }\n  public supportsSymlinks(): boolean { return false; }\n  public supportsProps(): boolean { return false; }\n  public supportsSynch(): boolean { return false; }\n\n  /**\n   * Checks if the root directory exists. Creates it if it doesn't.\n   */\n  private makeRootDirectory(cb: (e?: ApiError) => void) {\n    var tx = this.store.beginTransaction('readwrite');\n    tx.get(ROOT_NODE_ID, (e: ApiError, data?: NodeBuffer) => {\n      if (e || data === undefined) {\n        // Create new inode.\n        var currTime = (new Date()).getTime(),\n          // Mode 0666\n          dirInode = new Inode(GenerateRandomID(), 4096, 511 | FileType.DIRECTORY, currTime, currTime, currTime);\n        // If the root doesn't exist, the first random ID shouldn't exist,\n        // either.\n        tx.put(dirInode.id, new Buffer(\"{}\"), false, (e?: ApiError) => {\n          if (noErrorTx(e, tx, cb)) {\n            tx.put(ROOT_NODE_ID, dirInode.toBuffer(), false, (e?: ApiError) => {\n              if (e) {\n                tx.abort(() => { cb(e); });\n              } else {\n                tx.commit(cb);\n              }\n            });\n          }\n        });\n      } else {\n        // We're good.\n        tx.commit(cb);\n      }\n    });\n  }\n\n  /**\n   * Helper function for findINode.\n   * @param parent The parent directory of the file we are attempting to find.\n   * @param filename The filename of the inode we are attempting to find, minus\n   *   the parent.\n   * @param cb Passed an error or the ID of the file's inode in the file system.\n   */\n  private _findINode(tx: AsyncKeyValueROTransaction, parent: string, filename: string, cb: (e: ApiError, id?: string) => void): void {\n    var handle_directory_listings = (e: ApiError, inode?: Inode, dirList?: {[name: string]: string}): void => {\n      if (e) {\n        cb(e)\n      } else if (dirList[filename]) {\n        cb(null, dirList[filename]);\n      } else {\n        cb(ApiError.ENOENT(path.resolve(parent, filename)));\n      }\n    };\n\n    if (parent === '/') {\n      if (filename === '') {\n        // BASE CASE #1: Return the root's ID.\n        cb(null, ROOT_NODE_ID);\n      } else {\n        // BASE CASE #2: Find the item in the root node.\n        this.getINode(tx, parent, ROOT_NODE_ID, (e: ApiError, inode?: Inode): void => {\n          if (noError(e, cb)) {\n            this.getDirListing(tx, parent, inode, (e: ApiError, dirList?: {[name: string]: string}): void => {\n              // handle_directory_listings will handle e for us.\n              handle_directory_listings(e, inode, dirList);\n            });\n          }\n        });\n      }\n    } else {\n      // Get the parent directory's INode, and find the file in its directory\n      // listing.\n      this.findINodeAndDirListing(tx, parent, handle_directory_listings);\n    }\n  }\n\n  /**\n   * Finds the Inode of the given path.\n   * @param p The path to look up.\n   * @param cb Passed an error or the Inode of the path p.\n   * @todo memoize/cache\n   */\n  private findINode(tx: AsyncKeyValueROTransaction, p: string, cb: (e: ApiError, inode?: Inode) => void): void {\n    this._findINode(tx, path.dirname(p), path.basename(p), (e: ApiError, id?: string): void => {\n      if (noError(e, cb)) {\n        this.getINode(tx, p, id, cb);\n      }\n    });\n  }\n\n  /**\n   * Given the ID of a node, retrieves the corresponding Inode.\n   * @param tx The transaction to use.\n   * @param p The corresponding path to the file (used for error messages).\n   * @param id The ID to look up.\n   * @param cb Passed an error or the inode under the given id.\n   */\n  private getINode(tx: AsyncKeyValueROTransaction, p: string, id: string, cb: (e: ApiError, inode?: Inode) => void): void {\n    tx.get(id, (e: ApiError, data?: NodeBuffer): void => {\n      if (noError(e, cb)) {\n        if (data === undefined) {\n          cb(ApiError.ENOENT(p));\n        } else {\n          cb(null, Inode.fromBuffer(data));\n        }\n      }\n    });\n  }\n\n  /**\n   * Given the Inode of a directory, retrieves the corresponding directory\n   * listing.\n   */\n  private getDirListing(tx: AsyncKeyValueROTransaction, p: string, inode: Inode, cb: (e: ApiError, listing?: { [fileName: string]: string }) => void): void {\n    if (!inode.isDirectory()) {\n      cb(ApiError.ENOTDIR(p));\n    } else {\n      tx.get(inode.id, (e: ApiError, data?: NodeBuffer): void => {\n        if (noError(e, cb)) {\n          try {\n            cb(null, JSON.parse(data.toString()));\n          } catch (e) {\n            // Occurs when data is undefined, or corresponds to something other\n            // than a directory listing. The latter should never occur unless\n            // the file system is corrupted.\n            cb(ApiError.ENOENT(p));\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Given a path to a directory, retrieves the corresponding INode and\n   * directory listing.\n   */\n  private findINodeAndDirListing(tx: AsyncKeyValueROTransaction, p: string, cb: (e: ApiError, inode?: Inode, listing?: { [fileName: string]: string }) => void): void {\n    this.findINode(tx, p, (e: ApiError, inode?: Inode): void => {\n      if (noError(e, cb)) {\n        this.getDirListing(tx, p, inode, (e, listing?) => {\n          if (noError(e, cb)) {\n            cb(null, inode, listing);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Adds a new node under a random ID. Retries 5 times before giving up in\n   * the exceedingly unlikely chance that we try to reuse a random GUID.\n   * @param cb Passed an error or the GUID that the data was stored under.\n   */\n  private addNewNode(tx: AsyncKeyValueRWTransaction, data: NodeBuffer, cb: (e: ApiError, guid?: string) => void): void {\n    var retries = 0, currId: string,\n      reroll = () => {\n        if (++retries === 5) {\n          // Max retries hit. Return with an error.\n          cb(new ApiError(ErrorCode.EIO, 'Unable to commit data to key-value store.'));\n        } else {\n          // Try again.\n          currId = GenerateRandomID();\n          tx.put(currId, data, false, (e: ApiError, committed?: boolean) => {\n            if (e || !committed) {\n              reroll();\n            } else {\n              // Successfully stored under 'currId'.\n              cb(null, currId);\n            }\n          });\n        }\n      };\n    reroll();\n  }\n\n  /**\n   * Commits a new file (well, a FILE or a DIRECTORY) to the file system with\n   * the given mode.\n   * Note: This will commit the transaction.\n   * @param p The path to the new file.\n   * @param type The type of the new file.\n   * @param mode The mode to create the new file with.\n   * @param data The data to store at the file's data node.\n   * @param cb Passed an error or the Inode for the new file.\n   */\n  private commitNewFile(tx: AsyncKeyValueRWTransaction, p: string, type: FileType, mode: number, data: NodeBuffer, cb: (e: ApiError, inode?: Inode) => void): void {\n    var parentDir = path.dirname(p),\n      fname = path.basename(p),\n      currTime = (new Date()).getTime();\n\n    // Invariant: The root always exists.\n    // If we don't check this prior to taking steps below, we will create a\n    // file with name '' in root should p == '/'.\n    if (p === '/') {\n      return cb(ApiError.EEXIST(p));\n    }\n\n    // Let's build a pyramid of code!\n\n    // Step 1: Get the parent directory's inode and directory listing\n    this.findINodeAndDirListing(tx, parentDir, (e: ApiError, parentNode?: Inode, dirListing?: {[name: string]: string}): void => {\n      if (noErrorTx(e, tx, cb)) {\n        if (dirListing[fname]) {\n          // File already exists.\n          tx.abort(() => {\n            cb(ApiError.EEXIST(p));\n          });\n        } else {\n          // Step 2: Commit data to store.\n          this.addNewNode(tx, data, (e: ApiError, dataId?: string): void => {\n            if (noErrorTx(e, tx, cb)) {\n              // Step 3: Commit the file's inode to the store.\n              var fileInode = new Inode(dataId, data.length, mode | type, currTime, currTime, currTime);\n              this.addNewNode(tx, fileInode.toBuffer(), (e: ApiError, fileInodeId?: string): void => {\n                if (noErrorTx(e, tx, cb)) {\n                  // Step 4: Update parent directory's listing.\n                  dirListing[fname] = fileInodeId;\n                  tx.put(parentNode.id, new Buffer(JSON.stringify(dirListing)), true, (e: ApiError): void => {\n                    if (noErrorTx(e, tx, cb)) {\n                      // Step 5: Commit and return the new inode.\n                      tx.commit((e?: ApiError): void => {\n                        if (noErrorTx(e, tx, cb)) {\n                          cb(null, fileInode);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Delete all contents stored in the file system.\n   */\n  public empty(cb: (e?: ApiError) => void): void {\n    this.store.clear((e?) => {\n      if (noError(e, cb)) {\n        // INVARIANT: Root always exists.\n        this.makeRootDirectory(cb);\n      }\n    });\n  }\n\n  public rename(oldPath: string, newPath: string, cb: (e?: ApiError) => void): void {\n    var tx = this.store.beginTransaction('readwrite'),\n      oldParent = path.dirname(oldPath), oldName = path.basename(oldPath),\n      newParent = path.dirname(newPath), newName = path.basename(newPath),\n      inodes: { [path: string]: Inode } = {},\n      lists: {\n        [path: string]: { [file: string]: string }\n      } = {},\n      errorOccurred: boolean = false;\n\n    // Invariant: Can't move a folder inside itself.\n    // This funny little hack ensures that the check passes only if oldPath\n    // is a subpath of newParent. We append '/' to avoid matching folders that\n    // are a substring of the bottom-most folder in the path.\n    if ((newParent + '/').indexOf(oldPath + '/') === 0) {\n      return cb(new ApiError(ErrorCode.EBUSY, oldParent));\n    }\n\n    /**\n     * Responsible for Phase 2 of the rename operation: Modifying and\n     * committing the directory listings. Called once we have successfully\n     * retrieved both the old and new parent's inodes and listings.\n     */\n    var theOleSwitcharoo = (): void => {\n      // Sanity check: Ensure both paths are present, and no error has occurred.\n      if (errorOccurred || !lists.hasOwnProperty(oldParent) || !lists.hasOwnProperty(newParent)) {\n        return;\n      }\n      var oldParentList = lists[oldParent], oldParentINode = inodes[oldParent],\n        newParentList = lists[newParent], newParentINode = inodes[newParent];\n\n      // Delete file from old parent.\n      if (!oldParentList[oldName]) {\n        cb(ApiError.ENOENT(oldPath));\n      } else {\n        var fileId = oldParentList[oldName];\n        delete oldParentList[oldName];\n\n        // Finishes off the renaming process by adding the file to the new\n        // parent.\n        var completeRename = () => {\n          newParentList[newName] = fileId;\n          // Commit old parent's list.\n          tx.put(oldParentINode.id, new Buffer(JSON.stringify(oldParentList)), true, (e: ApiError) => {\n            if (noErrorTx(e, tx, cb)) {\n              if (oldParent === newParent) {\n                // DONE!\n                tx.commit(cb);\n              } else {\n                // Commit new parent's list.\n                tx.put(newParentINode.id, new Buffer(JSON.stringify(newParentList)), true, (e: ApiError) => {\n                  if (noErrorTx(e, tx, cb)) {\n                    tx.commit(cb);\n                  }\n                });\n              }\n            }\n          });\n        };\n\n        if (newParentList[newName]) {\n          // 'newPath' already exists. Check if it's a file or a directory, and\n          // act accordingly.\n          this.getINode(tx, newPath, newParentList[newName], (e: ApiError, inode?: Inode) => {\n            if (noErrorTx(e, tx, cb)) {\n              if (inode.isFile()) {\n                // Delete the file and continue.\n                tx.del(inode.id, (e?: ApiError) => {\n                  if (noErrorTx(e, tx, cb)) {\n                    tx.del(newParentList[newName], (e?: ApiError) => {\n                      if (noErrorTx(e, tx, cb)) {\n                        completeRename();\n                      }\n                    });\n                  }\n                });\n              } else {\n                // Can't overwrite a directory using rename.\n                tx.abort((e?) => {\n                  cb(ApiError.EPERM(newPath));\n                });\n              }\n            }\n          });\n        } else {\n          completeRename();\n        }\n      }\n    };\n\n    /**\n     * Grabs a path's inode and directory listing, and shoves it into the\n     * inodes and lists hashes.\n     */\n    var processInodeAndListings = (p: string): void => {\n      this.findINodeAndDirListing(tx, p, (e: ApiError, node?: Inode, dirList?: {[name: string]: string}): void => {\n        if (e) {\n          if (!errorOccurred) {\n            errorOccurred = true;\n            tx.abort(() => {\n              cb(e);\n            });\n          }\n          // If error has occurred already, just stop here.\n        } else {\n          inodes[p] = node;\n          lists[p] = dirList;\n          theOleSwitcharoo();\n        }\n      });\n    };\n\n    processInodeAndListings(oldParent);\n    if (oldParent !== newParent) {\n      processInodeAndListings(newParent);\n    }\n  }\n\n  public stat(p: string, isLstat: boolean, cb: (err: ApiError, stat?: Stats) => void): void {\n    var tx = this.store.beginTransaction('readonly');\n    this.findINode(tx, p, (e: ApiError, inode?: Inode): void => {\n      if (noError(e, cb)) {\n        cb(null, inode.toStats());\n      }\n    });\n  }\n\n  public createFile(p: string, flag: file_flag.FileFlag, mode: number, cb: (e: ApiError, file?: file.File) => void): void {\n    var tx = this.store.beginTransaction('readwrite'),\n      data = new Buffer(0);\n\n    this.commitNewFile(tx, p, FileType.FILE, mode, data, (e: ApiError, newFile?: Inode): void => {\n      if (noError(e, cb)) {\n        cb(null, new AsyncKeyValueFile(this, p, flag, newFile.toStats(), data));\n      }\n    });\n  }\n\n  public openFile(p: string, flag: file_flag.FileFlag, cb: (e: ApiError, file?: file.File) => void): void {\n    var tx = this.store.beginTransaction('readonly');\n    // Step 1: Grab the file's inode.\n    this.findINode(tx, p, (e: ApiError, inode?: Inode) => {\n      if (noError(e, cb)) {\n        // Step 2: Grab the file's data.\n        tx.get(inode.id, (e: ApiError, data?: NodeBuffer): void => {\n          if (noError(e, cb)) {\n            if (data === undefined) {\n              cb(ApiError.ENOENT(p));\n            } else {\n              cb(null, new AsyncKeyValueFile(this, p, flag, inode.toStats(), data));\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Remove all traces of the given path from the file system.\n   * @param p The path to remove from the file system.\n   * @param isDir Does the path belong to a directory, or a file?\n   * @todo Update mtime.\n   */\n  private removeEntry(p: string, isDir: boolean, cb: (e?: ApiError) => void): void {\n    var tx = this.store.beginTransaction('readwrite'),\n      parent: string = path.dirname(p), fileName: string = path.basename(p);\n    // Step 1: Get parent directory's node and directory listing.\n    this.findINodeAndDirListing(tx, parent, (e: ApiError, parentNode?: Inode, parentListing?: {[name: string]: string}): void => {\n      if (noErrorTx(e, tx, cb)) {\n        if (!parentListing[fileName]) {\n          tx.abort(() => {\n            cb(ApiError.ENOENT(p));\n          });\n        } else {\n          // Remove from directory listing of parent.\n          var fileNodeId = parentListing[fileName];\n          delete parentListing[fileName];\n          // Step 2: Get file inode.\n          this.getINode(tx, p, fileNodeId, (e: ApiError, fileNode?: Inode): void => {\n            if (noErrorTx(e, tx, cb)) {\n              if (!isDir && fileNode.isDirectory()) {\n                tx.abort(() => {\n                  cb(ApiError.EISDIR(p));\n                });\n              } else if (isDir && !fileNode.isDirectory()) {\n                tx.abort(() => {\n                  cb(ApiError.ENOTDIR(p));\n                });\n              } else {\n                // Step 3: Delete data.\n                tx.del(fileNode.id, (e?: ApiError): void => {\n                  if (noErrorTx(e, tx, cb)) {\n                    // Step 4: Delete node.\n                    tx.del(fileNodeId, (e?: ApiError): void => {\n                      if (noErrorTx(e, tx, cb)) {\n                        // Step 5: Update directory listing.\n                        tx.put(parentNode.id, new Buffer(JSON.stringify(parentListing)), true, (e: ApiError): void => {\n                          if (noErrorTx(e, tx, cb)) {\n                            tx.commit(cb);\n                          }\n                        });\n                      }\n                    });\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n\n  public unlink(p: string, cb: (e?: ApiError) => void): void {\n    this.removeEntry(p, false, cb);\n  }\n\n  public rmdir(p: string, cb: (e?: ApiError) => void): void {\n    // Check first if directory is empty.\n    this.readdir(p, (err, files?) => {\n      if (err) {\n        cb(err);\n      } else if (files.length > 0) {\n        cb(ApiError.ENOTEMPTY(p));\n      } else {\n        this.removeEntry(p, true, cb);\n      }\n    });\n  }\n\n  public mkdir(p: string, mode: number, cb: (e?: ApiError) => void): void {\n    var tx = this.store.beginTransaction('readwrite'),\n      data = new Buffer('{}');\n    this.commitNewFile(tx, p, FileType.DIRECTORY, mode, data, cb);\n  }\n\n  public readdir(p: string, cb: (err: ApiError, files?: string[]) => void): void {\n    var tx = this.store.beginTransaction('readonly');\n    this.findINode(tx, p, (e: ApiError, inode?: Inode) => {\n      if (noError(e, cb)) {\n        this.getDirListing(tx, p, inode, (e: ApiError, dirListing?: {[name: string]: string}) => {\n          if (noError(e, cb)) {\n            cb(null, Object.keys(dirListing));\n          }\n        });\n      }\n    });\n  }\n\n  public _sync(p: string, data: NodeBuffer, stats: Stats, cb: (e?: ApiError) => void): void {\n    // @todo Ensure mtime updates properly, and use that to determine if a data\n    //       update is required.\n    var tx = this.store.beginTransaction('readwrite');\n    // Step 1: Get the file node's ID.\n    this._findINode(tx, path.dirname(p), path.basename(p), (e: ApiError, fileInodeId?: string): void => {\n      if (noErrorTx(e, tx, cb)) {\n        // Step 2: Get the file inode.\n        this.getINode(tx, p, fileInodeId, (e: ApiError, fileInode?: Inode): void => {\n          if (noErrorTx(e, tx, cb)) {\n            var inodeChanged: boolean = fileInode.update(stats);\n            // Step 3: Sync the data.\n            tx.put(fileInode.id, data, true, (e: ApiError): void => {\n              if (noErrorTx(e, tx, cb)) {\n                // Step 4: Sync the metadata (if it changed)!\n                if (inodeChanged) {\n                  tx.put(fileInodeId, fileInode.toBuffer(), true, (e: ApiError): void => {\n                    if (noErrorTx(e, tx, cb)) {\n                      tx.commit(cb);\n                    }\n                  });\n                } else {\n                  // No need to sync metadata; return.\n                  tx.commit(cb);\n                }\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n}\n","import Mutex from './mutex';\nimport {FileSystem, SynchronousFileSystem} from '../core/file_system';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {FileFlag, ActionType} from '../core/file_flag';\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport {File} from '../core/file';\n\n\n/// This class serializes access to an underlying async filesystem.\n/// For example, on an OverlayFS instance with an async lower\n/// directory operations like rename and rmdir may involve multiple\n/// requests involving both the upper and lower filesystems -- they\n/// are not executed in a single atomic step.  OverlayFS uses this\n/// LockedFS to avoid having to reason about the correctness of\n/// multiple requests interleaving.\nexport default class LockedFS<T extends FileSystem> implements FileSystem {\n  private _fs: T;\n  private _mu: Mutex;\n\n  constructor(fs: T) {\n    this._fs = fs;\n    this._mu = new Mutex();\n  }\n\n  getName(): string {\n    return 'LockedFS<' + this._fs.getName()  + '>';\n  }\n\n  getFSUnlocked(): T {\n    return this._fs;\n  }\n\n  initialize(cb: (err?: ApiError) => void): void {\n    // FIXME: check to see if FS supports initialization\n    (<any>this._fs).initialize(cb);\n  }\n\n  diskSpace(p: string, cb: (total: number, free: number) => any): void {\n    // FIXME: should this lock?\n    this._fs.diskSpace(p, cb);\n  }\n\n  isReadOnly(): boolean {\n    return this._fs.isReadOnly();\n  }\n\n  supportsLinks(): boolean {\n    return this._fs.supportsLinks();\n  }\n\n  supportsProps(): boolean {\n    return this._fs.supportsProps();\n  }\n\n  supportsSynch(): boolean {\n    return this._fs.supportsSynch();\n  }\n\n  rename(oldPath: string, newPath: string, cb: (err?: ApiError) => void): void {\n    this._mu.lock(() => {\n      this._fs.rename(oldPath, newPath, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  renameSync(oldPath: string, newPath: string): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.renameSync(oldPath, newPath);\n  }\n\n  stat(p: string, isLstat: boolean, cb: (err: ApiError, stat?: Stats) => void): void {\n    this._mu.lock(() => {\n      this._fs.stat(p, isLstat, (err?: ApiError, stat?: Stats) => {\n        this._mu.unlock();\n        cb(err, stat);\n      });\n    });\n  }\n\n  statSync(p: string, isLstat: boolean): Stats {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.statSync(p, isLstat);\n  }\n\n  open(p: string, flag: FileFlag, mode: number, cb: (err: ApiError, fd?: File) => any): void {\n    this._mu.lock(() => {\n      this._fs.open(p, flag, mode, (err?: ApiError, fd?: File) => {\n        this._mu.unlock();\n        cb(err, fd);\n      });\n    });\n  }\n\n  openSync(p: string, flag: FileFlag, mode: number): File {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.openSync(p, flag, mode);\n  }\n\n  unlink(p: string, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.unlink(p, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  unlinkSync(p: string): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.unlinkSync(p);\n  }\n\n  rmdir(p: string, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.rmdir(p, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  rmdirSync(p: string): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.rmdirSync(p);\n  }\n\n  mkdir(p: string, mode: number, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.mkdir(p, mode, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  mkdirSync(p: string, mode: number): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.mkdirSync(p, mode);\n  }\n\n  readdir(p: string, cb: (err: ApiError, files?: string[]) => void): void {\n    this._mu.lock(() => {\n      this._fs.readdir(p, (err?: ApiError, files?: string[]) => {\n        this._mu.unlock();\n        cb(err, files);\n      });\n    });\n  }\n\n  readdirSync(p: string): string[] {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.readdirSync(p);\n  }\n\n  exists(p: string, cb: (exists: boolean) => void): void {\n    this._mu.lock(() => {\n      this._fs.exists(p, (exists: boolean) => {\n        this._mu.unlock();\n        cb(exists);\n      });\n    });\n  }\n\n  existsSync(p: string): boolean {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.existsSync(p);\n  }\n\n  realpath(p: string, cache: {[path: string]: string}, cb: (err: ApiError, resolvedPath?: string) => any): void {\n    this._mu.lock(() => {\n      this._fs.realpath(p, cache, (err?: ApiError, resolvedPath?: string) => {\n        this._mu.unlock();\n        cb(err, resolvedPath);\n      });\n    });\n  }\n\n  realpathSync(p: string, cache: {[path: string]: string}): string {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.realpathSync(p, cache);\n  }\n\n  truncate(p: string, len: number, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.truncate(p, len, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  truncateSync(p: string, len: number): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.truncateSync(p, len);\n  }\n\n  readFile(fname: string, encoding: string, flag: FileFlag, cb: (err: ApiError, data?: any) => void): void {\n    this._mu.lock(() => {\n      this._fs.readFile(fname, encoding, flag, (err?: ApiError, data?: any) => {\n        this._mu.unlock();\n        cb(err, data);\n      });\n    });\n  }\n\n  readFileSync(fname: string, encoding: string, flag: FileFlag): any {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.readFileSync(fname, encoding, flag);\n  }\n\n  writeFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cb: (err: ApiError) => void): void {\n    this._mu.lock(() => {\n      this._fs.writeFile(fname, data, encoding, flag, mode, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  writeFileSync(fname: string, data: any, encoding: string, flag: FileFlag, mode: number): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.writeFileSync(fname, data, encoding, flag, mode);\n  }\n\n  appendFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cb: (err: ApiError) => void): void {\n    this._mu.lock(() => {\n      this._fs.appendFile(fname, data, encoding, flag, mode, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  appendFileSync(fname: string, data: any, encoding: string, flag: FileFlag, mode: number): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.appendFileSync(fname, data, encoding, flag, mode);\n  }\n\n  chmod(p: string, isLchmod: boolean, mode: number, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.chmod(p, isLchmod, mode, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  chmodSync(p: string, isLchmod: boolean, mode: number): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.chmodSync(p, isLchmod, mode);\n  }\n\n  chown(p: string, isLchown: boolean, uid: number, gid: number, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.chown(p, isLchown, uid, gid, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  chownSync(p: string, isLchown: boolean, uid: number, gid: number): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.chownSync(p, isLchown, uid, gid);\n  }\n\n  utimes(p: string, atime: Date, mtime: Date, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.utimes(p, atime, mtime, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  utimesSync(p: string, atime: Date, mtime: Date): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.utimesSync(p, atime, mtime);\n  }\n\n  link(srcpath: string, dstpath: string, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.link(srcpath, dstpath, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  linkSync(srcpath: string, dstpath: string): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.linkSync(srcpath, dstpath);\n  }\n\n  symlink(srcpath: string, dstpath: string, type: string, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.symlink(srcpath, dstpath, type, (err?: ApiError) => {\n        this._mu.unlock();\n        cb(err);\n      });\n    });\n  }\n\n  symlinkSync(srcpath: string, dstpath: string, type: string): void {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.symlinkSync(srcpath, dstpath, type);\n  }\n\n  readlink(p: string, cb: Function): void {\n    this._mu.lock(() => {\n      this._fs.readlink(p, (err?: ApiError, linkString?: string) => {\n        this._mu.unlock();\n        cb(err, linkString);\n      });\n    });\n  }\n\n  readlinkSync(p: string): string {\n    if (this._mu.isLocked())\n      throw new Error('invalid sync call');\n    return this._fs.readlinkSync(p);\n  }\n}\n","\ndeclare var setImmediate: (cb: Function) => void;\n\n/// non-recursive mutex\nexport default class Mutex {\n  private _locked: boolean = false;\n  private _waiters: Function[] = [];\n\n  lock(cb: Function): void {\n    if (this._locked) {\n      this._waiters.push(cb);\n      return;\n    }\n    this._locked = true;\n    cb();\n  }\n\n  unlock(): void {\n    if (!this._locked)\n      throw new Error('unlock of a non-locked mutex');\n\n    let next = this._waiters.shift();\n    // don't unlock - we want to queue up next for the\n    // _end_ of the current task execution, but we don't\n    // want it to be called inline with whatever the\n    // current stack is.  This way we still get the nice\n    // behavior that an unlock immediately followed by a\n    // lock won't cause starvation.\n    if (next) {\n      setImmediate(next);\n      return;\n    }\n\n    this._locked = false;\n  }\n\n  tryLock(): boolean {\n    if (this._locked)\n      return false;\n\n    this._locked = true;\n    return true;\n  }\n\n  isLocked(): boolean {\n    return this._locked;\n  }\n}\n","import file = require('../core/file');\nimport file_system = require('../core/file_system');\nimport Stats from '../core/node_fs_stats';\nimport {FileFlag} from '../core/file_flag';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport fs = require('../core/node_fs');\n\n/**\n * An implementation of the File interface that operates on a file that is\n * completely in-memory. PreloadFiles are backed by a Buffer.\n *\n * This is also an abstract class, as it lacks an implementation of 'sync' and\n * 'close'. Each filesystem that wishes to use this file representation must\n * extend this class and implement those two methods.\n * @todo 'close' lever that disables functionality once closed.\n */\nexport class PreloadFile<T extends file_system.FileSystem> extends file.BaseFile {\n  private _pos: number = 0;\n  private _path: string;\n  protected _fs: T;\n  private _stat: Stats;\n  private _flag: FileFlag;\n  private _buffer: NodeBuffer;\n  private _dirty: boolean = false;\n  /**\n   * Creates a file with the given path and, optionally, the given contents. Note\n   * that, if contents is specified, it will be mutated by the file!\n   * @param [BrowserFS.FileSystem] _fs The file system that created the file.\n   * @param [String] _path\n   * @param [BrowserFS.FileMode] _mode The mode that the file was opened using.\n   *   Dictates permissions and where the file pointer starts.\n   * @param [BrowserFS.node.fs.Stats] _stat The stats object for the given file.\n   *   PreloadFile will mutate this object. Note that this object must contain\n   *   the appropriate mode that the file was opened as.\n   * @param [BrowserFS.node.Buffer?] contents A buffer containing the entire\n   *   contents of the file. PreloadFile will mutate this buffer. If not\n   *   specified, we assume it is a new file.\n   */\n  constructor(_fs: T, _path: string, _flag: FileFlag, _stat: Stats, contents?: NodeBuffer) {\n    super();\n    this._fs = _fs;\n    this._path = _path;\n    this._flag = _flag;\n    this._stat = _stat;\n    if (contents != null) {\n      this._buffer = contents;\n    } else {\n      // Empty buffer. It'll expand once we write stuff to it.\n      this._buffer = new Buffer(0);\n    }\n    // Note: This invariant is *not* maintained once the file starts getting\n    // modified.\n    // Note: Only actually matters if file is readable, as writeable modes may\n    // truncate/append to file.\n    if (this._stat.size !== this._buffer.length && this._flag.isReadable()) {\n      throw new Error(\"Invalid buffer: Buffer is \" + this._buffer.length + \" long, yet Stats object specifies that file is \" + this._stat.size + \" long.\");\n    }\n  }\n\n  protected isDirty(): boolean {\n    return this._dirty;\n  }\n\n  /**\n   * Resets the dirty bit. Should only be called after a sync has completed successfully.\n   */\n  protected resetDirty() {\n    this._dirty = false;\n  }\n\n  /**\n   * NONSTANDARD: Get the underlying buffer for this file. !!DO NOT MUTATE!! Will mess up dirty tracking.\n   */\n  public getBuffer(): NodeBuffer {\n    return this._buffer;\n  }\n\n  /**\n   * NONSTANDARD: Get underlying stats for this file. !!DO NOT MUTATE!!\n   */\n  public getStats(): Stats {\n    return this._stat;\n  }\n\n  public getFlag(): FileFlag {\n    return this._flag;\n  }\n\n  /**\n   * Get the path to this file.\n   * @return [String] The path to the file.\n   */\n  public getPath(): string {\n    return this._path;\n  }\n\n  /**\n   * Get the current file position.\n   *\n   * We emulate the following bug mentioned in the Node documentation:\n   * > On Linux, positional writes don't work when the file is opened in append\n   *   mode. The kernel ignores the position argument and always appends the data\n   *   to the end of the file.\n   * @return [Number] The current file position.\n   */\n  public getPos(): number {\n    if (this._flag.isAppendable()) {\n      return this._stat.size;\n    }\n    return this._pos;\n  }\n\n  /**\n   * Advance the current file position by the indicated number of positions.\n   * @param [Number] delta\n   */\n  public advancePos(delta: number): number {\n    return this._pos += delta;\n  }\n\n  /**\n   * Set the file position.\n   * @param [Number] newPos\n   */\n  public setPos(newPos: number): number {\n    return this._pos = newPos;\n  }\n\n  /**\n   * **Core**: Asynchronous sync. Must be implemented by subclasses of this\n   * class.\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  public sync(cb: (e?: ApiError) => void): void {\n    try {\n      this.syncSync();\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  /**\n   * **Core**: Synchronous sync.\n   */\n  public syncSync(): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  /**\n   * **Core**: Asynchronous close. Must be implemented by subclasses of this\n   * class.\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  public close(cb: (e?: ApiError) => void): void {\n    try {\n      this.closeSync();\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  /**\n   * **Core**: Synchronous close.\n   */\n  public closeSync(): void {\n    throw new ApiError(ErrorCode.ENOTSUP);\n  }\n\n  /**\n   * Asynchronous `stat`.\n   * @param [Function(BrowserFS.ApiError, BrowserFS.node.fs.Stats)] cb\n   */\n  public stat(cb: (e: ApiError, stat?: Stats) => void): void {\n    try {\n      cb(null, this._stat.clone());\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  /**\n   * Synchronous `stat`.\n   */\n  public statSync(): Stats {\n    return this._stat.clone();\n  }\n\n  /**\n   * Asynchronous truncate.\n   * @param [Number] len\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  public truncate(len: number, cb: (e?: ApiError) => void): void {\n    try {\n      this.truncateSync(len);\n      if (this._flag.isSynchronous() && !fs.getRootFS().supportsSynch()) {\n        this.sync(cb);\n      }\n      cb();\n    } catch (e) {\n      return cb(e);\n    }\n  }\n\n  /**\n   * Synchronous truncate.\n   * @param [Number] len\n   */\n  public truncateSync(len: number): void {\n    this._dirty = true;\n    if (!this._flag.isWriteable()) {\n      throw new ApiError(ErrorCode.EPERM, 'File not opened with a writeable mode.');\n    }\n    this._stat.mtime = new Date();\n    if (len > this._buffer.length) {\n      var buf = new Buffer(len - this._buffer.length);\n      buf.fill(0);\n      // Write will set @_stat.size for us.\n      this.writeSync(buf, 0, buf.length, this._buffer.length);\n      if (this._flag.isSynchronous() && fs.getRootFS().supportsSynch()) {\n        this.syncSync();\n      }\n      return;\n    }\n    this._stat.size = len;\n    // Truncate buffer to 'len'.\n    var newBuff = new Buffer(len);\n    this._buffer.copy(newBuff, 0, 0, len);\n    this._buffer = newBuff;\n    if (this._flag.isSynchronous() && fs.getRootFS().supportsSynch()) {\n      this.syncSync();\n    }\n  }\n\n  /**\n   * Write buffer to the file.\n   * Note that it is unsafe to use fs.write multiple times on the same file\n   * without waiting for the callback.\n   * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n   *  the file.\n   * @param [Number] offset Offset in the buffer to start reading data from.\n   * @param [Number] length The amount of bytes to write to the file.\n   * @param [Number] position Offset from the beginning of the file where this\n   *   data should be written. If position is null, the data will be written at\n   *   the current position.\n   * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)]\n   *   cb The number specifies the number of bytes written into the file.\n   */\n  public write(buffer: NodeBuffer, offset: number, length: number, position: number, cb: (e: ApiError, len?: number, buff?: NodeBuffer) => void): void {\n    try {\n      cb(null, this.writeSync(buffer, offset, length, position), buffer);\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  /**\n   * Write buffer to the file.\n   * Note that it is unsafe to use fs.writeSync multiple times on the same file\n   * without waiting for the callback.\n   * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n   *  the file.\n   * @param [Number] offset Offset in the buffer to start reading data from.\n   * @param [Number] length The amount of bytes to write to the file.\n   * @param [Number] position Offset from the beginning of the file where this\n   *   data should be written. If position is null, the data will be written at\n   *   the current position.\n   * @return [Number]\n   */\n  public writeSync(buffer: NodeBuffer, offset: number, length: number, position: number): number {\n    this._dirty = true;\n    if (position == null) {\n      position = this.getPos();\n    }\n    if (!this._flag.isWriteable()) {\n      throw new ApiError(ErrorCode.EPERM, 'File not opened with a writeable mode.');\n    }\n    var endFp = position + length;\n    if (endFp > this._stat.size) {\n      this._stat.size = endFp;\n      if (endFp > this._buffer.length) {\n        // Extend the buffer!\n        var newBuff = new Buffer(endFp);\n        this._buffer.copy(newBuff);\n        this._buffer = newBuff;\n      }\n    }\n    var len = buffer.copy(this._buffer, position, offset, offset + length);\n    this._stat.mtime = new Date();\n    if (this._flag.isSynchronous()) {\n      this.syncSync();\n      return len;\n    }\n    this.setPos(position + len);\n    return len;\n  }\n\n  /**\n   * Read data from the file.\n   * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n   *   written to.\n   * @param [Number] offset The offset within the buffer where writing will\n   *   start.\n   * @param [Number] length An integer specifying the number of bytes to read.\n   * @param [Number] position An integer specifying where to begin reading from\n   *   in the file. If position is null, data will be read from the current file\n   *   position.\n   * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)] cb The\n   *   number is the number of bytes read\n   */\n  public read(buffer: NodeBuffer, offset: number, length: number, position: number, cb: (e: ApiError, len?: number, buff?: NodeBuffer) => void): void {\n    try {\n      cb(null, this.readSync(buffer, offset, length, position), buffer);\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  /**\n   * Read data from the file.\n   * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n   *   written to.\n   * @param [Number] offset The offset within the buffer where writing will\n   *   start.\n   * @param [Number] length An integer specifying the number of bytes to read.\n   * @param [Number] position An integer specifying where to begin reading from\n   *   in the file. If position is null, data will be read from the current file\n   *   position.\n   * @return [Number]\n   */\n  public readSync(buffer: NodeBuffer, offset: number, length: number, position: number): number {\n    if (!this._flag.isReadable()) {\n      throw new ApiError(ErrorCode.EPERM, 'File not opened with a readable mode.');\n    }\n    if (position == null) {\n      position = this.getPos();\n    }\n    var endRead = position + length;\n    if (endRead > this._stat.size) {\n      length = this._stat.size - position;\n    }\n    var rv = this._buffer.copy(buffer, offset, position, position + length);\n    this._stat.atime = new Date();\n    this._pos = position + length;\n    return rv;\n  }\n\n  /**\n   * Asynchronous `fchmod`.\n   * @param [Number|String] mode\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  public chmod(mode: number, cb: (e?: ApiError) => void): void {\n    try {\n      this.chmodSync(mode);\n      cb();\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  /**\n   * Asynchronous `fchmod`.\n   * @param [Number] mode\n   */\n  public chmodSync(mode: number): void {\n    if (!this._fs.supportsProps()) {\n      throw new ApiError(ErrorCode.ENOTSUP);\n    }\n    this._dirty = true;\n    this._stat.chmod(mode);\n    this.syncSync();\n  }\n}\n\n/**\n * File class for the InMemory and XHR file systems.\n * Doesn't sync to anything, so it works nicely for memory-only files.\n */\nexport class NoSyncFile<T extends file_system.FileSystem> extends PreloadFile<T> implements file.File {\n  constructor(_fs: T, _path: string, _flag: FileFlag, _stat: Stats, contents?: NodeBuffer) {\n    super(_fs, _path, _flag, _stat, contents);\n  }\n  /**\n   * Asynchronous sync. Doesn't do anything, simply calls the cb.\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  public sync(cb: (e?: ApiError) => void): void {\n    cb();\n  }\n  /**\n   * Synchronous sync. Doesn't do anything.\n   */\n  public syncSync(): void {}\n  /**\n   * Asynchronous close. Doesn't do anything, simply calls the cb.\n   * @param [Function(BrowserFS.ApiError)] cb\n   */\n  public close(cb: (e?: ApiError) => void): void {\n    cb();\n  }\n  /**\n   * Synchronous close. Doesn't do anything.\n   */\n  public closeSync(): void {}\n}\n","/**\n * Contains utility methods for performing a variety of tasks with\n * XmlHttpRequest across browsers.\n */\n\nimport util = require('../core/util');\nimport {ApiError, ErrorCode} from '../core/api_error';\n\n// See core/polyfills for the VBScript definition of these functions.\ndeclare var IEBinaryToArray_ByteStr: (vbarr: any) => string;\ndeclare var IEBinaryToArray_ByteStr_Last: (vbarr: any) => string;\n// Converts 'responseBody' in IE into the equivalent 'responseText' that other\n// browsers would generate.\nfunction getIEByteArray(IEByteArray: any): number[] {\n  var rawBytes = IEBinaryToArray_ByteStr(IEByteArray);\n  var lastChr = IEBinaryToArray_ByteStr_Last(IEByteArray);\n  var data_str = rawBytes.replace(/[\\s\\S]/g, function(match) {\n    var v = match.charCodeAt(0)\n    return String.fromCharCode(v&0xff, v>>8)\n  }) + lastChr;\n  var data_array = new Array(data_str.length);\n  for (var i = 0; i < data_str.length; i++) {\n    data_array[i] = data_str.charCodeAt(i);\n  }\n  return data_array;\n}\n\nfunction downloadFileIE(async: boolean, p: string, type: string, cb: (err: ApiError, data?: any) => void): void {\n  switch(type) {\n    case 'buffer':\n      // Fallthrough\n    case 'json':\n      break;\n    default:\n      return cb(new ApiError(ErrorCode.EINVAL, \"Invalid download type: \" + type));\n  }\n\n  var req = new XMLHttpRequest();\n  req.open('GET', p, async);\n  req.setRequestHeader(\"Accept-Charset\", \"x-user-defined\");\n  req.onreadystatechange = function(e) {\n    var data_array;\n    if (req.readyState === 4) {\n      if (req.status === 200) {\n        switch(type) {\n          case 'buffer':\n            data_array = getIEByteArray(req.responseBody);\n            return cb(null, new Buffer(data_array));\n          case 'json':\n            return cb(null, JSON.parse(req.responseText));\n        }\n      } else {\n        return cb(new ApiError(req.status, \"XHR error.\"));\n      }\n    }\n  };\n  req.send();\n}\n\nfunction asyncDownloadFileIE(p: string, type: 'buffer', cb: (err: ApiError, data?: NodeBuffer) => void): void;\nfunction asyncDownloadFileIE(p: string, type: 'json', cb: (err: ApiError, data?: any) => void): void;\nfunction asyncDownloadFileIE(p: string, type: string, cb: (err: ApiError, data?: any) => void): void;\nfunction asyncDownloadFileIE(p: string, type: string, cb: (err: ApiError, data?: any) => void): void {\n  downloadFileIE(true, p, type, cb);\n}\n\nfunction syncDownloadFileIE(p: string, type: 'buffer'): NodeBuffer;\nfunction syncDownloadFileIE(p: string, type: 'json'): any;\nfunction syncDownloadFileIE(p: string, type: string): any;\nfunction syncDownloadFileIE(p: string, type: string): any {\n  var rv;\n  downloadFileIE(false, p, type, function(err: ApiError, data?: any) {\n    if (err) throw err;\n    rv = data;\n  });\n  return rv;\n}\n\nfunction asyncDownloadFileModern(p: string, type: 'buffer', cb: (err: ApiError, data?: NodeBuffer) => void): void;\nfunction asyncDownloadFileModern(p: string, type: 'json', cb: (err: ApiError, data?: any) => void): void;\nfunction asyncDownloadFileModern(p: string, type: string, cb: (err: ApiError, data?: any) => void): void;\nfunction asyncDownloadFileModern(p: string, type: string, cb: (err: ApiError, data?: any) => void): void {\n  var req = new XMLHttpRequest();\n  req.open('GET', p, true);\n  var jsonSupported = true;\n  switch(type) {\n    case 'buffer':\n      req.responseType = 'arraybuffer';\n      break;\n    case 'json':\n     // Some browsers don't support the JSON response type.\n     // They either reset responseType, or throw an exception.\n     // @see https://github.com/Modernizr/Modernizr/blob/master/src/testXhrType.js\n      try {\n        req.responseType = 'json';\n        jsonSupported = req.responseType === 'json';\n      } catch (e) {\n        jsonSupported = false;\n      }\n      break;\n    default:\n      return cb(new ApiError(ErrorCode.EINVAL, \"Invalid download type: \" + type));\n  }\n  req.onreadystatechange = function(e) {\n    if (req.readyState === 4) {\n      if (req.status === 200) {\n        switch(type) {\n          case 'buffer':\n            // XXX: WebKit-based browsers return *null* when XHRing an empty file.\n            return cb(null, new Buffer(req.response ? req.response : 0));\n          case 'json':\n            if (jsonSupported) {\n              return cb(null, req.response);\n            } else {\n              return cb(null, JSON.parse(req.responseText));\n            }\n        }\n      } else {\n        return cb(new ApiError(req.status, \"XHR error.\"));\n      }\n    }\n  };\n  req.send();\n}\n\nfunction syncDownloadFileModern(p: string, type: 'buffer'): NodeBuffer;\nfunction syncDownloadFileModern(p: string, type: 'json'): any;\nfunction syncDownloadFileModern(p: string, type: string): any;\nfunction syncDownloadFileModern(p: string, type: string): any {\n  var req = new XMLHttpRequest();\n  req.open('GET', p, false);\n\n  // On most platforms, we cannot set the responseType of synchronous downloads.\n  // @todo Test for this; IE10 allows this, as do older versions of Chrome/FF.\n  var data = null;\n  var err = null;\n  // Classic hack to download binary data as a string.\n  req.overrideMimeType('text/plain; charset=x-user-defined');\n  req.onreadystatechange = function(e) {\n    if (req.readyState === 4) {\n      if (req.status === 200) {\n        switch(type) {\n          case 'buffer':\n            // Convert the text into a buffer.\n            var text = req.responseText;\n            data = new Buffer(text.length);\n            // Throw away the upper bits of each character.\n            for (var i = 0; i < text.length; i++) {\n              // This will automatically throw away the upper bit of each\n              // character for us.\n              data.writeUInt8(text.charCodeAt(i), i);\n            }\n            return;\n          case 'json':\n            data = JSON.parse(req.responseText);\n            return;\n        }\n      } else {\n        err = new ApiError(req.status, \"XHR error.\");\n        return;\n      }\n    }\n  };\n  req.send();\n  if (err) {\n    throw err;\n  }\n  return data;\n}\n\n/**\n * IE10 allows us to perform synchronous binary file downloads.\n * @todo Feature detect this, as older versions of FF/Chrome do too!\n */\nfunction syncDownloadFileIE10(p: string, type: 'buffer'): NodeBuffer;\nfunction syncDownloadFileIE10(p: string, type: 'json'): any;\nfunction syncDownloadFileIE10(p: string, type: string): any;\nfunction syncDownloadFileIE10(p: string, type: string): any {\n  var req = new XMLHttpRequest();\n  req.open('GET', p, false);\n  switch(type) {\n    case 'buffer':\n      req.responseType = 'arraybuffer';\n      break;\n    case 'json':\n      // IE10 does not support the JSON type.\n      break;\n    default:\n      throw new ApiError(ErrorCode.EINVAL, \"Invalid download type: \" + type);\n  }\n  var data;\n  var err;\n  req.onreadystatechange = function(e) {\n    if (req.readyState === 4) {\n      if (req.status === 200) {\n        switch(type) {\n          case 'buffer':\n            data = new Buffer(req.response);\n            break;\n          case 'json':\n            data = JSON.parse(req.response);\n            break;\n        }\n      } else {\n        err = new ApiError(req.status, \"XHR error.\");\n      }\n    }\n  };\n  req.send();\n  if (err) {\n    throw err;\n  }\n  return data;\n}\n\nfunction getFileSize(async: boolean, p: string, cb: (err: ApiError, size?: number) => void): void {\n  var req = new XMLHttpRequest();\n  req.open('HEAD', p, async);\n  req.onreadystatechange = function(e) {\n    if (req.readyState === 4) {\n      if (req.status == 200) {\n        try {\n          return cb(null, parseInt(req.getResponseHeader('Content-Length') || '-1', 10));\n        } catch(e) {\n          // In the event that the header isn't present or there is an error...\n          return cb(new ApiError(ErrorCode.EIO, \"XHR HEAD error: Could not read content-length.\"));\n        }\n      } else {\n        return cb(new ApiError(req.status, \"XHR HEAD error.\"));\n      }\n    }\n  };\n  req.send();\n}\n\n/**\n * Asynchronously download a file as a buffer or a JSON object.\n * Note that the third function signature with a non-specialized type is\n * invalid, but TypeScript requires it when you specialize string arguments to\n * constants.\n */\nexport var asyncDownloadFile: {\n  (p: string, type: 'buffer', cb: (err: ApiError, data?: NodeBuffer) => void): void;\n  (p: string, type: 'json', cb: (err: ApiError, data?: any) => void): void;\n  (p: string, type: string, cb: (err: ApiError, data?: any) => void): void;\n} = (util.isIE && typeof Blob === 'undefined') ? asyncDownloadFileIE : asyncDownloadFileModern;\n\n/**\n * Synchronously download a file as a buffer or a JSON object.\n * Note that the third function signature with a non-specialized type is\n * invalid, but TypeScript requires it when you specialize string arguments to\n * constants.\n */\nexport var syncDownloadFile: {\n  (p: string, type: 'buffer'): NodeBuffer;\n  (p: string, type: 'json'): any;\n  (p: string, type: string): any;\n} = (util.isIE && typeof Blob === 'undefined') ? syncDownloadFileIE : (util.isIE && typeof Blob !== 'undefined') ? syncDownloadFileIE10 : syncDownloadFileModern;\n\n/**\n * Synchronously retrieves the size of the given file in bytes.\n */\nexport function getFileSizeSync(p: string): number {\n  var rv: number;\n  getFileSize(false, p, function(err: ApiError, size?: number) {\n    if (err) {\n      throw err;\n    }\n    rv = size;\n  });\n  return rv;\n}\n\n/**\n * Asynchronously retrieves the size of the given file in bytes.\n */\nexport function getFileSizeAsync(p: string, cb: (err: ApiError, size?: number) => void): void {\n  getFileSize(true, p, cb);\n}\n","/**\n * BrowserFS's main entry point.\n * It installs all of the needed polyfills, and requires() the main module.\n */\nimport global = require('./core/global');\n\n// IE < 9 does not define this function.\nif (!Date.now) {\n  Date.now = function now() {\n    return new Date().getTime();\n  };\n}\n\n// IE < 9 does not define this function.\nif(!Array.isArray) {\n  Array.isArray = function (vArg): vArg is any[] {\n    return Object.prototype.toString.call(vArg) === \"[object Array]\";\n  };\n}\n\n// IE < 9 does not define this function.\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\nif (!Object.keys) {\n  Object.keys = (function () {\n    'use strict';\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\n        hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\n        dontEnums = [\n          'toString',\n          'toLocaleString',\n          'valueOf',\n          'hasOwnProperty',\n          'isPrototypeOf',\n          'propertyIsEnumerable',\n          'constructor'\n        ],\n        dontEnumsLength = dontEnums.length;\n\n    return function (obj: any) {\n      if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n        throw new TypeError('Object.keys called on non-object');\n      }\n\n      var result: string[] = [], prop: string, i: number;\n\n      for (prop in obj) {\n        if (hasOwnProperty.call(obj, prop)) {\n          result.push(prop);\n        }\n      }\n\n      if (hasDontEnumBug) {\n        for (i = 0; i < dontEnumsLength; i++) {\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\n            result.push(dontEnums[i]);\n          }\n        }\n      }\n      return result;\n    };\n  }());\n}\n\n// IE substr does not support negative indices\nif ('ab'.substr(-1) !== 'b') {\n  String.prototype.substr = function(substr: (start: number, length?: number) => string) {\n    return function(start: number, length?: number): string {\n      // did we get a negative start, calculate how much it is from the\n      // beginning of the string\n      if (start < 0) start = this.length + start;\n      // call the original function\n      return substr.call(this, start, length);\n    }\n  }(String.prototype.substr);\n}\n\n// IE < 9 does not support forEach\nif (!Array.prototype.forEach) {\n  Array.prototype.forEach = function(fn: (value: string, index: number, array: string[]) => void, scope?: any): void {\n    for (var i = 0; i < this.length; ++i) {\n      if (i in this) {\n        fn.call(scope, this[i], i, this);\n      }\n    }\n  };\n}\n\n// IE < 9 does not support filter\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\nif (!Array.prototype.filter) {\n  Array.prototype.filter = function(fun/*, thisArg*/) {\n    'use strict';\n\n    if (this === void 0 || this === null) {\n      throw new TypeError();\n    }\n\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (typeof fun !== 'function') {\n      throw new TypeError();\n    }\n\n    var res = [];\n    var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n    for (var i = 0; i < len; i++) {\n      if (i in t) {\n        var val = t[i];\n\n        // NOTE: Technically this should Object.defineProperty at\n        //       the next index, as push can be affected by\n        //       properties on Object.prototype and Array.prototype.\n        //       But that method's new, and collisions should be\n        //       rare, so use the more-compatible alternative.\n        if (fun.call(thisArg, val, i, t)) {\n          res.push(val);\n        }\n      }\n    }\n\n    return res;\n  };\n}\n\n// Only IE10 has setImmediate.\n// @todo: Determine viability of switching to the 'proper' polyfill for this.\nif (typeof setImmediate === 'undefined') {\n  var gScope = global;\n  var timeouts: (() => void)[] = [];\n  var messageName = \"zero-timeout-message\";\n  var canUsePostMessage = function() {\n    if (typeof gScope.importScripts !== 'undefined' || !gScope.postMessage) {\n      return false;\n    }\n    var postMessageIsAsync = true;\n    var oldOnMessage = gScope.onmessage;\n    gScope.onmessage = function() {\n      postMessageIsAsync = false;\n    };\n    gScope.postMessage('', '*');\n    gScope.onmessage = oldOnMessage;\n    return postMessageIsAsync;\n  };\n  if (canUsePostMessage()) {\n    gScope.setImmediate = function(fn: () => void) {\n      timeouts.push(fn);\n      gScope.postMessage(messageName, \"*\");\n    };\n    var handleMessage = function(event: MessageEvent) {\n      if (event.source === self && event.data === messageName) {\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        } else {\n          event.cancelBubble = true;\n        }\n        if (timeouts.length > 0) {\n          var fn = timeouts.shift();\n          return fn();\n        }\n      }\n    };\n    if (gScope.addEventListener) {\n      gScope.addEventListener('message', handleMessage, true);\n    } else {\n      gScope.attachEvent('onmessage', handleMessage);\n    }\n  } else if (gScope.MessageChannel) {\n    // WebWorker MessageChannel\n    var channel = new gScope.MessageChannel();\n    channel.port1.onmessage = (event: any) => {\n      if (timeouts.length > 0) {\n        return timeouts.shift()();\n      }\n    };\n    gScope.setImmediate = (fn: () => void) => {\n      timeouts.push(fn);\n      channel.port2.postMessage('');\n    };\n  } else {\n    gScope.setImmediate = function(fn: () => void) {\n      return setTimeout(fn, 0);\n    };\n  }\n}\n\n// IE<9 does not define indexOf.\n// From: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function(searchElement: any, fromIndex: number = 0): number {\n    if (!this) {\n      throw new TypeError();\n    }\n\n    var length = this.length;\n    if (length === 0 || pivot >= length) {\n      return -1;\n    }\n\n    var pivot = fromIndex;\n    if (pivot < 0) {\n      pivot = length + pivot;\n    }\n\n    for (var i = pivot; i < length; i++) {\n      if (this[i] === searchElement) {\n        return i;\n      }\n    }\n    return -1;\n  };\n}\n\n// IE<9 does not support forEach\n// From: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\nif (!Array.prototype.forEach) {\n  Array.prototype.forEach = function(fn: (value: string, index: number, array: string[]) => void, scope?: any) {\n    var i: number, len: number;\n    for (i = 0, len = this.length; i < len; ++i) {\n      if (i in this) {\n        fn.call(scope, this[i], i, this);\n      }\n    }\n  };\n}\n\n// IE<9 does not support map\n// From: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\nif (!Array.prototype.map) {\n  Array.prototype.map = function(callback: (value: string, index: number, array: string[]) => any, thisArg?: any): any[] {\n    var T: any, A: any, k: any;\n    if (this == null) {\n      throw new TypeError(\" this is null or not defined\");\n    }\n    // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n    var O = Object(this);\n    // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n    // 3. Let len be ToUint32(lenValue).\n    var len = O.length >>> 0;\n    // 4. If IsCallable(callback) is false, throw a TypeError exception.\n    // See: http://es5.github.com/#x9.11\n    if (typeof callback !== \"function\") {\n      throw new TypeError(callback + \" is not a function\");\n    }\n    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n    if (thisArg) {\n      T = thisArg;\n    }\n    // 6. Let A be a new array created as if by the expression new Array(len) where Array is\n    // the standard built-in constructor with that name and len is the value of len.\n    A = new Array(len);\n    // 7. Let k be 0\n    k = 0;\n    // 8. Repeat, while k < len\n    while(k < len) {\n      var kValue: any, mappedValue: any;\n      // a. Let Pk be ToString(k).\n      //   This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n      //   This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n        // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n        kValue = O[k];\n        // ii. Let mappedValue be the result of calling the Call internal method of callback\n        // with T as the this value and argument list containing kValue, k, and O.\n        mappedValue = callback.call(T, kValue, k, O);\n        // iii. Call the DefineOwnProperty internal method of A with arguments\n        // Pk, Property Descriptor {Value: mappedValue, : true, Enumerable: true, Configurable: true},\n        // and false.\n        // In browsers that support Object.defineProperty, use the following:\n        // Object.defineProperty(A, Pk, { value: mappedValue, writable: true, enumerable: true, configurable: true });\n        // For best browser support, use the following:\n        A[k] = mappedValue;\n      }\n      // d. Increase k by 1.\n      k++;\n    }\n    // 9. return A\n    return A;\n  };\n}\n\n/**\n * IE9 and below only: Injects a VBScript function that converts the\n * 'responseBody' attribute of an XMLHttpRequest into a bytestring.\n * From: http://miskun.com/javascript/internet-explorer-and-binary-files-data-access/#comment-17\n *\n * This must be performed *before* the page finishes loading, otherwise\n * document.write will refresh the page. :(\n *\n * This is harmless to inject into non-IE browsers.\n */\nif (typeof(document) !== 'undefined' && typeof(window) !== 'undefined' && (<any> window)['chrome'] === undefined) {\n  document.write(\"<!-- IEBinaryToArray_ByteStr -->\\r\\n\"+\n    \"<script type='text/vbscript'>\\r\\n\"+\n    \"Function IEBinaryToArray_ByteStr(Binary)\\r\\n\"+\n    \" IEBinaryToArray_ByteStr = CStr(Binary)\\r\\n\"+\n    \"End Function\\r\\n\"+\n    \"Function IEBinaryToArray_ByteStr_Last(Binary)\\r\\n\"+\n    \" Dim lastIndex\\r\\n\"+\n    \" lastIndex = LenB(Binary)\\r\\n\"+\n    \" if lastIndex mod 2 Then\\r\\n\"+\n    \" IEBinaryToArray_ByteStr_Last = Chr( AscB( MidB( Binary, lastIndex, 1 ) ) )\\r\\n\"+\n    \" Else\\r\\n\"+\n    \" IEBinaryToArray_ByteStr_Last = \"+'\"\"'+\"\\r\\n\"+\n    \" End If\\r\\n\"+\n    \"End Function\\r\\n\"+\n    \"</script>\\r\\n\");\n}\n\nimport bfs = require('./core/browserfs');\nexport = bfs;"]}